{"version":3,"sources":["../react-headless-tabs.ts","../src/TabPanel.tsx","../src/useTabs.ts"],"sourcesContent":["export * from \"./src/TabPanel\";\nexport * from \"./src/useTabs\";\n","import * as React from \"react\";\n\nfunction wait(fn: () => void, ms?: number): () => void {\n  if (!ms && \"requestIdleCallback\" in window) {\n    const ref = requestIdleCallback(fn);\n\n    return () => cancelIdleCallback(ref);\n  }\n\n  const ref = setTimeout(fn, ms);\n\n  return () => clearTimeout(ref);\n}\n\nexport function TabPanel({\n  children,\n  render = \"idle\",\n  unmount = \"never\",\n  ...props\n}: React.HTMLAttributes<HTMLDivElement> & {\n  hidden: boolean;\n} & (\n    | {\n        render?: \"idle\";\n        unmount?: \"never\" | number;\n      }\n    | {\n        render?: \"lazy\";\n        unmount?: \"idle\" | \"never\" | number;\n      }\n  )) {\n  const [shouldRender, setShouldRender] = React.useState(!props.hidden);\n\n  const renderRef = React.useRef<() => void>();\n  const unmountRef = React.useRef<() => void>();\n\n  React.useEffect(() => {\n    if (!props.hidden) {\n      setShouldRender(true);\n    } else if (render === \"idle\") {\n      renderRef.current = wait(() => setShouldRender(true));\n    } else if (unmount === \"idle\") {\n      unmountRef.current = wait(() => setShouldRender(false));\n    }\n\n    if (typeof unmount === \"number\") {\n      unmountRef.current = wait(\n        () => setShouldRender(!props.hidden),\n        unmount * 1000\n      );\n    }\n\n    return () => {\n      renderRef.current?.();\n      renderRef.current = undefined;\n      unmountRef.current?.();\n      unmountRef.current = undefined;\n    };\n  }, [props.hidden, render, unmount]);\n\n  return <div {...props}>{shouldRender ? children : null}</div>;\n}\n","import * as React from \"react\";\n\nfunction usePrevious<T>(value: T) {\n  const ref = React.useRef<T>();\n\n  React.useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n}\n\nexport function useTabs<K extends string>(\n  tabs: K[],\n  defaultTab: K | null | undefined = tabs.at(0)\n) {\n  const state = React.useState(defaultTab);\n  const [selectedTab, setSelectedTab] = state;\n\n  const activeIndex = React.useMemo(() => {\n    if (selectedTab) {\n      return tabs.indexOf(selectedTab);\n    }\n\n    return -1;\n  }, [selectedTab, tabs]);\n\n  const previousActiveIndex = usePrevious(activeIndex);\n\n  React.useEffect(() => {\n    if (tabs.length === 0) {\n      setSelectedTab(undefined);\n\n      return;\n    }\n\n    if (selectedTab === null || (selectedTab && tabs.includes(selectedTab))) {\n      return;\n    }\n\n    if (\n      typeof previousActiveIndex === \"number\" &&\n      previousActiveIndex >= 0 &&\n      (tabs[previousActiveIndex] || tabs[previousActiveIndex - 1])\n    ) {\n      setSelectedTab(\n        tabs[previousActiveIndex] || tabs[previousActiveIndex - 1]\n      );\n\n      return;\n    }\n\n    if (defaultTab === null) {\n      return;\n    }\n\n    setSelectedTab(\n      defaultTab && tabs.includes(defaultTab) ? defaultTab : tabs[0]\n    );\n  }, [defaultTab, previousActiveIndex, selectedTab, setSelectedTab, tabs]);\n\n  return state;\n}\n"],"mappings":"0jBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,cAAAE,EAAA,YAAAC,IAAA,eAAAC,EAAAJ,GCAA,IAAAK,EAAuB,oBAEvB,SAASC,EAAKC,EAAgBC,EAAyB,CACrD,GAAI,CAACA,GAAM,wBAAyB,OAAQ,CAC1C,IAAMC,EAAM,oBAAoBF,CAAE,EAElC,MAAO,IAAM,mBAAmBE,CAAG,EAGrC,IAAMA,EAAM,WAAWF,EAAIC,CAAE,EAE7B,MAAO,IAAM,aAAaC,CAAG,CAC/B,CAEO,SAASC,EAAS,CACvB,SAAAC,EACA,OAAAC,EAAS,OACT,QAAAC,EAAU,QACV,GAAGC,CACL,EAWK,CACH,GAAM,CAACC,EAAcC,CAAe,EAAU,WAAS,CAACF,EAAM,MAAM,EAE9DG,EAAkB,SAAmB,EACrCC,EAAmB,SAAmB,EAE5C,OAAM,YAAU,KACTJ,EAAM,OAEAF,IAAW,OACpBK,EAAU,QAAUX,EAAK,IAAMU,EAAgB,EAAI,CAAC,EAC3CH,IAAY,SACrBK,EAAW,QAAUZ,EAAK,IAAMU,EAAgB,EAAK,CAAC,GAJtDA,EAAgB,EAAI,EAOlB,OAAOH,GAAY,WACrBK,EAAW,QAAUZ,EACnB,IAAMU,EAAgB,CAACF,EAAM,MAAM,EACnCD,EAAU,GACZ,GAGK,IAAM,CACXI,EAAU,UAAU,EACpBA,EAAU,QAAU,OACpBC,EAAW,UAAU,EACrBA,EAAW,QAAU,MACvB,GACC,CAACJ,EAAM,OAAQF,EAAQC,CAAO,CAAC,EAE3B,gBAAC,OAAK,GAAGC,GAAQC,EAAeJ,EAAW,IAAK,CACzD,CC7DA,IAAAQ,EAAuB,oBAEvB,SAASC,EAAeC,EAAU,CAChC,IAAMC,EAAY,SAAU,EAE5B,OAAM,YAAU,IAAM,CACpBA,EAAI,QAAUD,CAChB,CAAC,EAEMC,EAAI,OACb,CAEO,SAASC,EACdC,EACAC,EAAmCD,EAAK,GAAG,CAAC,EAC5C,CACA,IAAME,EAAc,WAASD,CAAU,EACjC,CAACE,EAAaC,CAAc,EAAIF,EAEhCG,EAAoB,UAAQ,IAC5BF,EACKH,EAAK,QAAQG,CAAW,EAG1B,GACN,CAACA,EAAaH,CAAI,CAAC,EAEhBM,EAAsBV,EAAYS,CAAW,EAEnD,OAAM,YAAU,IAAM,CACpB,GAAIL,EAAK,SAAW,EAAG,CACrBI,EAAe,MAAS,EAExB,OAGF,GAAI,EAAAD,IAAgB,MAASA,GAAeH,EAAK,SAASG,CAAW,GAIrE,IACE,OAAOG,GAAwB,UAC/BA,GAAuB,IACtBN,EAAKM,CAAmB,GAAKN,EAAKM,EAAsB,CAAC,GAC1D,CACAF,EACEJ,EAAKM,CAAmB,GAAKN,EAAKM,EAAsB,CAAC,CAC3D,EAEA,OAGEL,IAAe,MAInBG,EACEH,GAAcD,EAAK,SAASC,CAAU,EAAIA,EAAaD,EAAK,CAAC,CAC/D,EACF,EAAG,CAACC,EAAYK,EAAqBH,EAAaC,EAAgBJ,CAAI,CAAC,EAEhEE,CACT","names":["react_headless_tabs_exports","__export","TabPanel","useTabs","__toCommonJS","React","wait","fn","ms","ref","TabPanel","children","render","unmount","props","shouldRender","setShouldRender","renderRef","unmountRef","React","usePrevious","value","ref","useTabs","tabs","defaultTab","state","selectedTab","setSelectedTab","activeIndex","previousActiveIndex"]}