{"version":3,"file":"PostmessageTransport.js","names":["_events","require","_","_typeof","obj","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","_toPropertyKey","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","PostmessageTransport","_EventEmitter","_super","sendDirection","initialWidgetId","transportWindow","inboundWindow","_this","Map","AbortController","_widgetId","get","_ready","idBase","concat","Date","now","index","id","outboundRequests","has","set","sendInternal","message","console","log","targetOrigin","postMessage","reply","request","responseData","response","send","action","data","sendComplete","then","r","_this2","ready","widgetId","Promise","reject","Error","api","requestId","nextRequestId","WidgetApiToWidgetAction","UpdateVisibility","prResolve","prReject","resolve","cleanUp","err","timerId","setTimeout","timeoutSeconds","onStop","stopController","signal","addEventListener","clearTimeout","removeEventListener","start","_this3","ev","handleMessage","stop","abort","aborted","strictOriginCheck","origin","window","invertedDirection","handleRequest","handleResponse","emit","CustomEvent","detail","req","isErrorResponse","error","EventEmitter","exports"],"sources":["../../src/transport/PostmessageTransport.ts"],"sourcesContent":["/*\n * Copyright 2020 The Matrix.org Foundation C.I.C.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from \"events\";\nimport { ITransport } from \"./ITransport\";\nimport {\n    invertedDirection,\n    isErrorResponse,\n    IWidgetApiErrorResponseData,\n    IWidgetApiRequest,\n    IWidgetApiRequestData,\n    IWidgetApiResponse,\n    IWidgetApiResponseData,\n    WidgetApiAction,\n    WidgetApiDirection,\n    WidgetApiToWidgetAction,\n} from \"..\";\n\ninterface IOutboundRequest {\n    request: IWidgetApiRequest;\n    resolve: (response: IWidgetApiResponse) => void;\n    reject: (err: Error) => void;\n}\n\n/**\n * Transport for the Widget API over postMessage.\n */\nexport class PostmessageTransport extends EventEmitter implements ITransport {\n    public strictOriginCheck = false;\n    public targetOrigin = \"*\";\n    public timeoutSeconds = 10;\n\n    private _ready = false;\n    private _widgetId: string | null = null;\n    private outboundRequests = new Map<string, IOutboundRequest | null>();\n    private stopController = new AbortController();\n\n    public get ready(): boolean {\n        return this._ready;\n    }\n\n    public get widgetId(): string | null {\n        return this._widgetId || null;\n    }\n\n    public constructor(\n        private sendDirection: WidgetApiDirection,\n        private initialWidgetId: string | null,\n        private transportWindow: Window,\n        private inboundWindow: Window,\n    ) {\n        super();\n        this._widgetId = initialWidgetId;\n    }\n\n    private get nextRequestId(): string {\n        const idBase = `widgetapi-${Date.now()}`;\n        let index = 0;\n        let id = idBase;\n        while (this.outboundRequests.has(id)) {\n            id = `${idBase}-${index++}`;\n        }\n\n        // reserve the ID\n        this.outboundRequests.set(id, null);\n\n        return id;\n    }\n\n    private sendInternal(message: IWidgetApiRequest | IWidgetApiResponse) {\n        console.log(`[PostmessageTransport] Sending object to ${this.targetOrigin}: `, message);\n        this.transportWindow.postMessage(message, this.targetOrigin);\n    }\n\n    public reply<T extends IWidgetApiResponseData>(request: IWidgetApiRequest, responseData: T) {\n        return this.sendInternal(<IWidgetApiResponse>{\n            ...request,\n            response: responseData,\n        });\n    }\n\n    public send<T extends IWidgetApiRequestData, R extends IWidgetApiResponseData>(\n        action: WidgetApiAction, data: T,\n    ): Promise<R> {\n        return this.sendComplete(action, data).then(r => <R>r.response);\n    }\n\n    public sendComplete<T extends IWidgetApiRequestData, R extends IWidgetApiResponse>(\n        action: WidgetApiAction, data: T,\n    ): Promise<R> {\n        if (!this.ready || !this.widgetId) {\n            return Promise.reject(new Error(\"Not ready or unknown widget ID\"));\n        }\n        const request: IWidgetApiRequest = {\n            api: this.sendDirection,\n            widgetId: this.widgetId,\n            requestId: this.nextRequestId,\n            action: action,\n            data: data,\n        };\n        if (action === WidgetApiToWidgetAction.UpdateVisibility) {\n            request['visible'] = data['visible'];\n        }\n        return new Promise<R>((prResolve, prReject) => {\n            const resolve = (response: IWidgetApiResponse) => {\n                cleanUp();\n                prResolve(<R>response);\n            };\n            const reject = (err: Error) => {\n                cleanUp();\n                prReject(err);\n            };\n\n            const timerId = setTimeout(\n                () => reject(new Error(\"Request timed out\")),\n                (this.timeoutSeconds || 1) * 1000,\n            );\n\n            const onStop = () => reject(new Error(\"Transport stopped\"));\n            this.stopController.signal.addEventListener(\"abort\", onStop);\n\n            const cleanUp = () => {\n                this.outboundRequests.delete(request.requestId);\n                clearTimeout(timerId);\n                this.stopController.signal.removeEventListener(\"abort\", onStop);\n            };\n\n            this.outboundRequests.set(request.requestId, { request, resolve, reject });\n            this.sendInternal(request);\n        });\n    }\n\n    public start() {\n        this.inboundWindow.addEventListener(\"message\", (ev: MessageEvent) => {\n            this.handleMessage(ev);\n        });\n        this._ready = true;\n    }\n\n    public stop() {\n        this._ready = false;\n        this.stopController.abort();\n    }\n\n    private handleMessage(ev: MessageEvent) {\n        if (this.stopController.signal.aborted) return;\n        if (!ev.data) return; // invalid event\n\n        if (this.strictOriginCheck && ev.origin !== window.origin) return; // bad origin\n\n        // treat the message as a response first, then downgrade to a request\n        const response = <IWidgetApiResponse>ev.data;\n        if (!response.action || !response.requestId || !response.widgetId) return; // invalid request/response\n\n        if (!response.response) {\n            // it's a request\n            const request = <IWidgetApiRequest>response;\n            if (request.api !== invertedDirection(this.sendDirection)) return; // wrong direction\n            this.handleRequest(request);\n        } else {\n            // it's a response\n            if (response.api !== this.sendDirection) return; // wrong direction\n            this.handleResponse(response);\n        }\n    }\n\n    private handleRequest(request: IWidgetApiRequest) {\n        if (this.widgetId) {\n            if (this.widgetId !== request.widgetId) return; // wrong widget\n        } else {\n            this._widgetId = request.widgetId;\n        }\n\n        this.emit(\"message\", new CustomEvent(\"message\", {detail: request}));\n    }\n\n    private handleResponse(response: IWidgetApiResponse) {\n        if (response.widgetId !== this.widgetId) return; // wrong widget\n\n        const req = this.outboundRequests.get(response.requestId);\n        if (!req) return; // response to an unknown request\n\n        if (isErrorResponse(response.response)) {\n            const err = <IWidgetApiErrorResponseData>response.response;\n            req.reject(new Error(err.error.message));\n        } else {\n            req.resolve(response);\n        }\n    }\n}\n"],"mappings":"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"}