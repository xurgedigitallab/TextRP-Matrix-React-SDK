{"version":3,"file":"Widget.js","names":["_utils","require","_","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","Widget","definition","Error","assertPresent","get","creatorUserId","type","id","name","rawData","title","url","URL","templateUrl","origin","waitForIframeLoad","data","value","getCompleteUrl","params","runTemplate","exports"],"sources":["../../src/models/Widget.ts"],"sourcesContent":["/*\n * Copyright 2020 The Matrix.org Foundation C.I.C.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IWidget, IWidgetData, WidgetType } from \"..\";\nimport { assertPresent } from \"./validation/utils\";\nimport { ITemplateParams, runTemplate } from \"..\";\n\n/**\n * Represents the barest form of widget.\n */\nexport class Widget {\n    public constructor(private definition: IWidget) {\n        if (!this.definition) throw new Error(\"Definition is required\");\n\n        assertPresent(definition, \"id\");\n        assertPresent(definition, \"creatorUserId\");\n        assertPresent(definition, \"type\");\n        assertPresent(definition, \"url\");\n    }\n\n    /**\n     * The user ID who created the widget.\n     */\n    public get creatorUserId(): string {\n        return this.definition.creatorUserId;\n    }\n\n    /**\n     * The type of widget.\n     */\n    public get type(): WidgetType {\n        return this.definition.type;\n    }\n\n    /**\n     * The ID of the widget.\n     */\n    public get id(): string {\n        return this.definition.id;\n    }\n\n    /**\n     * The name of the widget, or null if not set.\n     */\n    public get name(): string | null {\n        return this.definition.name || null;\n    }\n\n    /**\n     * The title for the widget, or null if not set.\n     */\n    public get title(): string | null {\n        return this.rawData.title || null;\n    }\n\n    /**\n     * The templated URL for the widget.\n     */\n    public get templateUrl(): string {\n        return this.definition.url;\n    }\n\n    /**\n     * The origin for this widget.\n     */\n    public get origin(): string {\n        return new URL(this.templateUrl).origin;\n    }\n\n    /**\n     * Whether or not the client should wait for the iframe to load. Defaults\n     * to true.\n     */\n    public get waitForIframeLoad(): boolean {\n        if (this.definition.waitForIframeLoad === false) return false;\n        if (this.definition.waitForIframeLoad === true) return true;\n        return true; // default true\n    }\n\n    /**\n     * The raw data for the widget. This will always be defined, though\n     * may be empty.\n     */\n    public get rawData(): IWidgetData {\n        return this.definition.data || {};\n    }\n\n    /**\n     * Gets a complete widget URL for the client to render.\n     * @param {ITemplateParams} params The template parameters.\n     * @returns {string} A templated URL.\n     */\n    public getCompleteUrl(params: ITemplateParams): string {\n        return runTemplate(this.templateUrl, this.definition, params);\n    }\n}\n"],"mappings":"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"}