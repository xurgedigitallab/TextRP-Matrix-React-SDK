{"version":3,"file":"statsReport.js","names":["StatsReport","exports"],"sources":["../../../src/webrtc/stats/statsReport.ts"],"sourcesContent":["/*\nCopyright 2023 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { ConnectionStatsBandwidth, ConnectionStatsBitrate, PacketLoss } from \"./connectionStats\";\nimport { TransportStats } from \"./transportStats\";\nimport { Resolution } from \"./media/mediaTrackStats\";\n\nexport enum StatsReport {\n    CONNECTION_STATS = \"StatsReport.connection_stats\",\n    CALL_FEED_REPORT = \"StatsReport.call_feed_report\",\n    BYTE_SENT_STATS = \"StatsReport.byte_sent_stats\",\n    SUMMARY_STATS = \"StatsReport.summary_stats\",\n}\n\n/// ByteSentStatsReport ################################################################################################\nexport interface ByteSentStatsReport extends Map<TrackID, ByteSend> {\n    callId?: string;\n    opponentMemberId?: string;\n    // is a map: `local trackID` => byte send\n}\n\nexport type TrackID = string;\nexport type ByteSend = number;\n\n/// ConnectionStatsReport ##############################################################################################\nexport interface ConnectionStatsReport {\n    callId?: string;\n    opponentMemberId?: string;\n    bandwidth: ConnectionStatsBandwidth;\n    bitrate: ConnectionStatsBitrate;\n    packetLoss: PacketLoss;\n    audioConcealment: Map<TrackID, AudioConcealment>;\n    totalAudioConcealment: AudioConcealment;\n    resolution: ResolutionMap;\n    framerate: FramerateMap;\n    codec: CodecMap;\n    jitter: Map<TrackID, number>;\n    transport: TransportStats[];\n}\n\nexport interface AudioConcealment {\n    concealedAudio: number;\n    totalAudioDuration: number;\n}\n\nexport interface ResolutionMap {\n    local: Map<TrackID, Resolution>;\n    remote: Map<TrackID, Resolution>;\n}\n\nexport interface FramerateMap {\n    local: Map<TrackID, number>;\n    remote: Map<TrackID, number>;\n}\n\nexport interface CodecMap {\n    local: Map<TrackID, string>;\n    remote: Map<TrackID, string>;\n}\n\n/// SummaryStatsReport #################################################################################################\nexport interface SummaryStatsReport {\n    /**\n     * Aggregated the information for percentage of received media\n     *\n     * This measure whether the current user receive data from a call participants.\n     * As soon as a participant sends at least a byte media to this user, this counts as one measurement unit.\n     * The units of measure divided by the total number of participants is a value between 0 and 1.\n     */\n    percentageReceivedMedia: number;\n    percentageReceivedAudioMedia: number;\n    percentageReceivedVideoMedia: number;\n    maxJitter: number;\n    maxPacketLoss: number;\n    percentageConcealedAudio: number;\n    peerConnections: number;\n    opponentUsersInCall?: number;\n    opponentDevicesInCall?: number;\n    diffDevicesToPeerConnections?: number;\n    ratioPeerConnectionToDevices?: number;\n    // Todo: Decide if we want an index (or a timestamp) of this report in relation to the group call, to help differenciate when issues occur and ignore/track initial connection delays.\n}\n\n/// CallFeedReport #####################################################################################################\nexport interface CallFeedReport {\n    callId: string;\n    opponentMemberId: string;\n    transceiver: TransceiverStats[];\n    callFeeds: CallFeedStats[];\n}\n\nexport interface CallFeedStats {\n    stream: string;\n    type: \"remote\" | \"local\";\n    audio: TrackStats | null;\n    video: TrackStats | null;\n    purpose: string;\n    prefix: string;\n    isVideoMuted: boolean;\n    isAudioMuted: boolean;\n}\n\nexport interface TransceiverStats {\n    readonly mid: string;\n    readonly sender: TrackStats | null;\n    readonly receiver: TrackStats | null;\n    readonly direction: string;\n    readonly currentDirection: string;\n}\n\nexport interface TrackStats {\n    readonly id: string;\n    readonly kind: \"audio\" | \"video\";\n    readonly settingDeviceId: string;\n    readonly constrainDeviceId: string;\n    readonly muted: boolean;\n    readonly enabled: boolean;\n    readonly readyState: \"ended\" | \"live\";\n    readonly label: string;\n}\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA,IAoBYA,WAAW,0BAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA,OAOvB;AAUA;AAoCA;AAuBA;AAAAC,OAAA,CAAAD,WAAA,GAAAA,WAAA"}