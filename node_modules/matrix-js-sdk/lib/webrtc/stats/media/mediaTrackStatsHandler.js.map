{"version":3,"file":"mediaTrackStatsHandler.js","names":["_mediaTrackStats","require","MediaTrackStatsHandler","constructor","mediaSsrcHandler","mediaTrackHandler","_defineProperty2","default","Map","findTrack2Stats","report","type","trackID","trackIdentifier","mid","getRemoteTrackIdByMid","getLocalTrackIdByMid","ssrc","findMidBySsrc","undefined","trackStats","track2stats","get","track","getTackById","kind","MediaTrackStats","set","findLocalVideoTrackStats","localVideoTracks","getLocalTracks","length","getTrack2stats","findTransceiverByTrackId","getTransceiverByTrackId","exports"],"sources":["../../../../src/webrtc/stats/media/mediaTrackStatsHandler.ts"],"sourcesContent":["/*\nCopyright 2023 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { TrackID } from \"../statsReport\";\nimport { MediaTrackStats } from \"./mediaTrackStats\";\nimport { MediaTrackHandler, TrackId } from \"./mediaTrackHandler\";\nimport { MediaSsrcHandler } from \"./mediaSsrcHandler\";\n\nexport class MediaTrackStatsHandler {\n    private readonly track2stats = new Map<TrackID, MediaTrackStats>();\n\n    public constructor(\n        public readonly mediaSsrcHandler: MediaSsrcHandler,\n        public readonly mediaTrackHandler: MediaTrackHandler,\n    ) {}\n\n    /**\n     * Find tracks by rtc stats\n     * Argument report is any because the stats api is not consistent:\n     * For example `trackIdentifier`, `mid` not existing in every implementations\n     * https://www.w3.org/TR/webrtc-stats/#dom-rtcinboundrtpstreamstats\n     * https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats\n     */\n    public findTrack2Stats(report: any, type: \"remote\" | \"local\"): MediaTrackStats | undefined {\n        let trackID;\n        if (report.trackIdentifier) {\n            trackID = report.trackIdentifier;\n        } else if (report.mid) {\n            trackID =\n                type === \"remote\"\n                    ? this.mediaTrackHandler.getRemoteTrackIdByMid(report.mid)\n                    : this.mediaTrackHandler.getLocalTrackIdByMid(report.mid);\n        } else if (report.ssrc) {\n            const mid = this.mediaSsrcHandler.findMidBySsrc(report.ssrc, type);\n            if (!mid) {\n                return undefined;\n            }\n            trackID =\n                type === \"remote\"\n                    ? this.mediaTrackHandler.getRemoteTrackIdByMid(report.mid)\n                    : this.mediaTrackHandler.getLocalTrackIdByMid(report.mid);\n        }\n\n        if (!trackID) {\n            return undefined;\n        }\n\n        let trackStats = this.track2stats.get(trackID);\n\n        if (!trackStats) {\n            const track = this.mediaTrackHandler.getTackById(trackID);\n            if (track !== undefined) {\n                const kind: \"audio\" | \"video\" = track.kind === \"audio\" ? track.kind : \"video\";\n                trackStats = new MediaTrackStats(trackID, type, kind);\n                this.track2stats.set(trackID, trackStats);\n            } else {\n                return undefined;\n            }\n        }\n        return trackStats;\n    }\n\n    public findLocalVideoTrackStats(report: any): MediaTrackStats | undefined {\n        const localVideoTracks = this.mediaTrackHandler.getLocalTracks(\"video\");\n        if (localVideoTracks.length === 0) {\n            return undefined;\n        }\n        return this.findTrack2Stats(report, \"local\");\n    }\n\n    public getTrack2stats(): Map<TrackID, MediaTrackStats> {\n        return this.track2stats;\n    }\n\n    public findTransceiverByTrackId(trackID: TrackId): undefined | RTCRtpTransceiver {\n        return this.mediaTrackHandler.getTransceiverByTrackId(trackID);\n    }\n}\n"],"mappings":";;;;;;;;AAgBA,IAAAA,gBAAA,GAAAC,OAAA;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMO,MAAMC,sBAAsB,CAAC;EAGzBC,WAAWA,CACEC,gBAAkC,EAClCC,iBAAoC,EACtD;IAAA,KAFkBD,gBAAkC,GAAlCA,gBAAkC;IAAA,KAClCC,iBAAoC,GAApCA,iBAAoC;IAAA,IAAAC,gBAAA,CAAAC,OAAA,uBAJzB,IAAIC,GAAG,CAA2B,CAAC;EAK/D;;EAEH;AACJ;AACA;AACA;AACA;AACA;AACA;EACWC,eAAeA,CAACC,MAAW,EAAEC,IAAwB,EAA+B;IACvF,IAAIC,OAAO;IACX,IAAIF,MAAM,CAACG,eAAe,EAAE;MACxBD,OAAO,GAAGF,MAAM,CAACG,eAAe;IACpC,CAAC,MAAM,IAAIH,MAAM,CAACI,GAAG,EAAE;MACnBF,OAAO,GACHD,IAAI,KAAK,QAAQ,GACX,IAAI,CAACN,iBAAiB,CAACU,qBAAqB,CAACL,MAAM,CAACI,GAAG,CAAC,GACxD,IAAI,CAACT,iBAAiB,CAACW,oBAAoB,CAACN,MAAM,CAACI,GAAG,CAAC;IACrE,CAAC,MAAM,IAAIJ,MAAM,CAACO,IAAI,EAAE;MACpB,MAAMH,GAAG,GAAG,IAAI,CAACV,gBAAgB,CAACc,aAAa,CAACR,MAAM,CAACO,IAAI,EAAEN,IAAI,CAAC;MAClE,IAAI,CAACG,GAAG,EAAE;QACN,OAAOK,SAAS;MACpB;MACAP,OAAO,GACHD,IAAI,KAAK,QAAQ,GACX,IAAI,CAACN,iBAAiB,CAACU,qBAAqB,CAACL,MAAM,CAACI,GAAG,CAAC,GACxD,IAAI,CAACT,iBAAiB,CAACW,oBAAoB,CAACN,MAAM,CAACI,GAAG,CAAC;IACrE;IAEA,IAAI,CAACF,OAAO,EAAE;MACV,OAAOO,SAAS;IACpB;IAEA,IAAIC,UAAU,GAAG,IAAI,CAACC,WAAW,CAACC,GAAG,CAACV,OAAO,CAAC;IAE9C,IAAI,CAACQ,UAAU,EAAE;MACb,MAAMG,KAAK,GAAG,IAAI,CAAClB,iBAAiB,CAACmB,WAAW,CAACZ,OAAO,CAAC;MACzD,IAAIW,KAAK,KAAKJ,SAAS,EAAE;QACrB,MAAMM,IAAuB,GAAGF,KAAK,CAACE,IAAI,KAAK,OAAO,GAAGF,KAAK,CAACE,IAAI,GAAG,OAAO;QAC7EL,UAAU,GAAG,IAAIM,gCAAe,CAACd,OAAO,EAAED,IAAI,EAAEc,IAAI,CAAC;QACrD,IAAI,CAACJ,WAAW,CAACM,GAAG,CAACf,OAAO,EAAEQ,UAAU,CAAC;MAC7C,CAAC,MAAM;QACH,OAAOD,SAAS;MACpB;IACJ;IACA,OAAOC,UAAU;EACrB;EAEOQ,wBAAwBA,CAAClB,MAAW,EAA+B;IACtE,MAAMmB,gBAAgB,GAAG,IAAI,CAACxB,iBAAiB,CAACyB,cAAc,CAAC,OAAO,CAAC;IACvE,IAAID,gBAAgB,CAACE,MAAM,KAAK,CAAC,EAAE;MAC/B,OAAOZ,SAAS;IACpB;IACA,OAAO,IAAI,CAACV,eAAe,CAACC,MAAM,EAAE,OAAO,CAAC;EAChD;EAEOsB,cAAcA,CAAA,EAAkC;IACnD,OAAO,IAAI,CAACX,WAAW;EAC3B;EAEOY,wBAAwBA,CAACrB,OAAgB,EAAiC;IAC7E,OAAO,IAAI,CAACP,iBAAiB,CAAC6B,uBAAuB,CAACtB,OAAO,CAAC;EAClE;AACJ;AAACuB,OAAA,CAAAjC,sBAAA,GAAAA,sBAAA"}