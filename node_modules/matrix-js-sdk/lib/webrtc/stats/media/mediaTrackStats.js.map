{"version":3,"file":"mediaTrackStats.js","names":["MediaTrackStats","constructor","trackId","type","kind","_defineProperty2","default","packetsTotal","packetsLost","isDownloadStream","download","upload","width","height","concealedAudio","totalAudioDuration","getType","setLoss","loss","getLoss","setResolution","resolution","getResolution","setFramerate","framerate","getFramerate","setBitrate","bitrate","getBitrate","setCodec","codecShortType","codec","getCodec","resetBitrate","alive","isAlive","muted","isMuted","enabled","isEnabled","setJitter","jitter","getJitter","setAudioConcealment","concealedAudioDuration","audioConcealment","getAudioConcealment","exports"],"sources":["../../../../src/webrtc/stats/media/mediaTrackStats.ts"],"sourcesContent":["/*\nCopyright 2023 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { AudioConcealment } from \"../statsReport\";\nimport { TrackId } from \"./mediaTrackHandler\";\n\nexport interface PacketLoss {\n    packetsTotal: number;\n    packetsLost: number;\n    isDownloadStream: boolean;\n}\n\nexport interface Bitrate {\n    /**\n     * bytes per second\n     */\n    download: number;\n    /**\n     * bytes per second\n     */\n    upload: number;\n}\nexport interface ConcealedAudio {\n    /**\n     * duration in ms\n     */\n    duration: number;\n\n    ratio: number;\n}\nexport interface Resolution {\n    width: number;\n    height: number;\n}\n\nexport type TrackStatsType = \"local\" | \"remote\";\n\nexport class MediaTrackStats {\n    private loss: PacketLoss = { packetsTotal: 0, packetsLost: 0, isDownloadStream: false };\n    private bitrate: Bitrate = { download: 0, upload: 0 };\n    private resolution: Resolution = { width: -1, height: -1 };\n    private audioConcealment: AudioConcealment = { concealedAudio: 0, totalAudioDuration: 0 };\n    private framerate = 0;\n    private jitter = 0;\n    private codec = \"\";\n    private isAlive = true;\n    private isMuted = false;\n    private isEnabled = true;\n\n    public constructor(\n        public readonly trackId: TrackId,\n        public readonly type: TrackStatsType,\n        public readonly kind: \"audio\" | \"video\",\n    ) {}\n\n    public getType(): TrackStatsType {\n        return this.type;\n    }\n\n    public setLoss(loss: PacketLoss): void {\n        this.loss = loss;\n    }\n\n    public getLoss(): PacketLoss {\n        return this.loss;\n    }\n\n    public setResolution(resolution: Resolution): void {\n        this.resolution = resolution;\n    }\n\n    public getResolution(): Resolution {\n        return this.resolution;\n    }\n\n    public setFramerate(framerate: number): void {\n        this.framerate = framerate;\n    }\n\n    public getFramerate(): number {\n        return this.framerate;\n    }\n\n    public setBitrate(bitrate: Bitrate): void {\n        this.bitrate = bitrate;\n    }\n\n    public getBitrate(): Bitrate {\n        return this.bitrate;\n    }\n\n    public setCodec(codecShortType: string): boolean {\n        this.codec = codecShortType;\n        return true;\n    }\n\n    public getCodec(): string {\n        return this.codec;\n    }\n\n    public resetBitrate(): void {\n        this.bitrate = { download: 0, upload: 0 };\n    }\n\n    public set alive(isAlive: boolean) {\n        this.isAlive = isAlive;\n    }\n\n    /**\n     * A MediaTrackState is alive if the corresponding MediaStreamTrack track bound to a transceiver and the\n     * MediaStreamTrack is in state MediaStreamTrack.readyState === live\n     */\n    public get alive(): boolean {\n        return this.isAlive;\n    }\n\n    public set muted(isMuted: boolean) {\n        this.isMuted = isMuted;\n    }\n\n    /**\n     * A MediaTrackState.isMuted corresponding to MediaStreamTrack.muted.\n     * But these values only match if MediaTrackState.isAlive.\n     */\n    public get muted(): boolean {\n        return this.isMuted;\n    }\n\n    public set enabled(isEnabled: boolean) {\n        this.isEnabled = isEnabled;\n    }\n\n    /**\n     * A MediaTrackState.isEnabled corresponding to MediaStreamTrack.enabled.\n     * But these values only match if MediaTrackState.isAlive.\n     */\n    public get enabled(): boolean {\n        return this.isEnabled;\n    }\n\n    public setJitter(jitter: number): void {\n        this.jitter = jitter;\n    }\n\n    /**\n     * Jitter in milliseconds\n     */\n    public getJitter(): number {\n        return this.jitter;\n    }\n\n    /**\n     * Audio concealment ration (conceled duration / total duration)\n     */\n    public setAudioConcealment(concealedAudioDuration: number, totalAudioDuration: number): void {\n        this.audioConcealment.concealedAudio = concealedAudioDuration;\n        this.audioConcealment.totalAudioDuration = totalAudioDuration;\n    }\n\n    public getAudioConcealment(): AudioConcealment {\n        return this.audioConcealment;\n    }\n}\n"],"mappings":"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"}