{"version":3,"file":"mediaSsrcHandler.js","names":["_sdpTransform","require","MediaSsrcHandler","constructor","_defineProperty2","default","local","Map","remote","findMidBySsrc","ssrc","type","mid","ssrcToMid","forEach","ssrcs","m","find","s","parse","description","sdp","parseSdp","media","_m$ssrcs","attribute","push","id","set","getSsrcToMidMap","exports"],"sources":["../../../../src/webrtc/stats/media/mediaSsrcHandler.ts"],"sourcesContent":["/*\nCopyright 2023 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { parse as parseSdp } from \"sdp-transform\";\n\nexport type Mid = string;\nexport type Ssrc = string;\nexport type MapType = \"local\" | \"remote\";\n\nexport class MediaSsrcHandler {\n    private readonly ssrcToMid = { local: new Map<Mid, Ssrc[]>(), remote: new Map<Mid, Ssrc[]>() };\n\n    public findMidBySsrc(ssrc: Ssrc, type: \"local\" | \"remote\"): Mid | undefined {\n        let mid: Mid | undefined;\n        this.ssrcToMid[type].forEach((ssrcs, m) => {\n            if (ssrcs.find((s) => s == ssrc)) {\n                mid = m;\n                return;\n            }\n        });\n        return mid;\n    }\n\n    public parse(description: string, type: MapType): void {\n        const sdp = parseSdp(description);\n        const ssrcToMid = new Map<Mid, Ssrc[]>();\n        sdp.media.forEach((m) => {\n            if ((!!m.mid && m.type === \"video\") || m.type === \"audio\") {\n                const ssrcs: Ssrc[] = [];\n                m.ssrcs?.forEach((ssrc) => {\n                    if (ssrc.attribute === \"cname\") {\n                        ssrcs.push(`${ssrc.id}`);\n                    }\n                });\n                ssrcToMid.set(`${m.mid}`, ssrcs);\n            }\n        });\n        this.ssrcToMid[type] = ssrcToMid;\n    }\n\n    public getSsrcToMidMap(type: MapType): Map<Mid, Ssrc[]> {\n        return this.ssrcToMid[type];\n    }\n}\n"],"mappings":";;;;;;;;AAgBA,IAAAA,aAAA,GAAAC,OAAA;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQO,MAAMC,gBAAgB,CAAC;EAAAC,YAAA;IAAA,IAAAC,gBAAA,CAAAC,OAAA,qBACG;MAAEC,KAAK,EAAE,IAAIC,GAAG,CAAc,CAAC;MAAEC,MAAM,EAAE,IAAID,GAAG,CAAc;IAAE,CAAC;EAAA;EAEvFE,aAAaA,CAACC,IAAU,EAAEC,IAAwB,EAAmB;IACxE,IAAIC,GAAoB;IACxB,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,CAACG,OAAO,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;MACvC,IAAID,KAAK,CAACE,IAAI,CAAEC,CAAC,IAAKA,CAAC,IAAIR,IAAI,CAAC,EAAE;QAC9BE,GAAG,GAAGI,CAAC;QACP;MACJ;IACJ,CAAC,CAAC;IACF,OAAOJ,GAAG;EACd;EAEOO,KAAKA,CAACC,WAAmB,EAAET,IAAa,EAAQ;IACnD,MAAMU,GAAG,GAAG,IAAAC,mBAAQ,EAACF,WAAW,CAAC;IACjC,MAAMP,SAAS,GAAG,IAAIN,GAAG,CAAc,CAAC;IACxCc,GAAG,CAACE,KAAK,CAACT,OAAO,CAAEE,CAAC,IAAK;MACrB,IAAK,CAAC,CAACA,CAAC,CAACJ,GAAG,IAAII,CAAC,CAACL,IAAI,KAAK,OAAO,IAAKK,CAAC,CAACL,IAAI,KAAK,OAAO,EAAE;QAAA,IAAAa,QAAA;QACvD,MAAMT,KAAa,GAAG,EAAE;QACxB,CAAAS,QAAA,GAAAR,CAAC,CAACD,KAAK,cAAAS,QAAA,uBAAPA,QAAA,CAASV,OAAO,CAAEJ,IAAI,IAAK;UACvB,IAAIA,IAAI,CAACe,SAAS,KAAK,OAAO,EAAE;YAC5BV,KAAK,CAACW,IAAI,CAAE,GAAEhB,IAAI,CAACiB,EAAG,EAAC,CAAC;UAC5B;QACJ,CAAC,CAAC;QACFd,SAAS,CAACe,GAAG,CAAE,GAAEZ,CAAC,CAACJ,GAAI,EAAC,EAAEG,KAAK,CAAC;MACpC;IACJ,CAAC,CAAC;IACF,IAAI,CAACF,SAAS,CAACF,IAAI,CAAC,GAAGE,SAAS;EACpC;EAEOgB,eAAeA,CAAClB,IAAa,EAAoB;IACpD,OAAO,IAAI,CAACE,SAAS,CAACF,IAAI,CAAC;EAC/B;AACJ;AAACmB,OAAA,CAAA5B,gBAAA,GAAAA,gBAAA"}