import { IClientWellKnown, IDelegatedAuthConfig } from "../client";
export declare enum OidcDiscoveryError {
    NotSupported = "OIDC authentication not supported",
    Misconfigured = "OIDC is misconfigured",
    General = "Something went wrong with OIDC discovery",
    OpSupport = "Configured OIDC OP does not support required functions"
}
export type ValidatedIssuerConfig = {
    authorizationEndpoint: string;
    tokenEndpoint: string;
    registrationEndpoint?: string;
};
/**
 * Validates MSC2965 m.authentication config
 * Returns valid configuration
 * @param wellKnown - client well known as returned from ./well-known/client/matrix
 * @returns config - when present and valid
 * @throws when config is not found or invalid
 */
export declare const validateWellKnownAuthentication: (wellKnown: IClientWellKnown) => IDelegatedAuthConfig;
/**
 * Validates issue `.well-known/openid-configuration`
 * As defined in RFC5785 https://openid.net/specs/openid-connect-discovery-1_0.html
 * validates that OP is compatible with Element's OIDC flow
 * @param wellKnown - json object
 * @returns valid issuer config
 * @throws Error - when issuer config is not found or is invalid
 */
export declare const validateOIDCIssuerWellKnown: (wellKnown: unknown) => ValidatedIssuerConfig;
//# sourceMappingURL=validate.d.ts.map