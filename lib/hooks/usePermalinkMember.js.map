{"version":3,"file":"usePermalinkMember.js","names":["_matrix","require","_react","_Pill","_SDKContext","createMemberFromProfile","userId","profile","member","RoomMember","name","displayname","rawDisplayName","events","getContent","avatar_url","getDirectionalContent","determineUserId","type","parseResult","event","PillType","EventInSameRoom","EventInOtherRoom","includes","getSender","determineMember","targetRoom","targetRoomMember","getMember","knownProfile","SdkContextClass","instance","userProfilesStore","getOnlyKnownProfile","usePermalinkMember","shouldLookUpUser","UserMention","userInRoom","setMember","useState","useEffect","doProfileLookup","fetchedProfile","fetchOnlyKnownProfile","newMember","exports"],"sources":["../../src/hooks/usePermalinkMember.ts"],"sourcesContent":["/*\r\nCopyright 2023 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { IMatrixProfile, MatrixEvent, Room, RoomMember } from \"matrix-js-sdk/src/matrix\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { PillType } from \"../components/views/elements/Pill\";\r\nimport { SdkContextClass } from \"../contexts/SDKContext\";\r\nimport { PermalinkParts } from \"../utils/permalinks/PermalinkConstructor\";\r\n\r\nconst createMemberFromProfile = (userId: string, profile: IMatrixProfile): RoomMember => {\r\n    const member = new RoomMember(\"\", userId);\r\n    member.name = profile.displayname ?? userId;\r\n    member.rawDisplayName = member.name;\r\n    member.events.member = {\r\n        getContent: () => {\r\n            return { avatar_url: profile.avatar_url };\r\n        },\r\n        getDirectionalContent: function () {\r\n            // eslint-disable-next-line\r\n            return this.getContent();\r\n        },\r\n    } as MatrixEvent;\r\n    return member;\r\n};\r\n\r\n/**\r\n * Tries to determine the user Id of a permalink.\r\n * In case of a user permalink it is the user id.\r\n * In case of an event permalink it is the sender user Id of the event if that event is available.\r\n * Otherwise returns null.\r\n *\r\n * @param type - pill type\r\n * @param parseResult - permalink parse result\r\n * @param event - permalink event, if available\r\n * @returns permalink user Id. null if the Id cannot be determined.\r\n */\r\nconst determineUserId = (\r\n    type: PillType | null,\r\n    parseResult: PermalinkParts | null,\r\n    event: MatrixEvent | null,\r\n): string | null => {\r\n    if (type === null) return null;\r\n\r\n    if (parseResult?.userId) return parseResult.userId;\r\n\r\n    if (event && [PillType.EventInSameRoom, PillType.EventInOtherRoom].includes(type)) {\r\n        return event.getSender() ?? null;\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\n/**\r\n * Tries to determine a RoomMember.\r\n *\r\n * @param userId - User Id to get the member for\r\n * @param targetRoom - permalink target room\r\n * @returns RoomMember of the target room if it exists.\r\n *          If sharing at least one room with the user, then the result will be the profile fetched via API.\r\n *          null in all other cases.\r\n */\r\nconst determineMember = (userId: string, targetRoom: Room): RoomMember | null => {\r\n    const targetRoomMember = targetRoom.getMember(userId);\r\n\r\n    if (targetRoomMember) return targetRoomMember;\r\n\r\n    const knownProfile = SdkContextClass.instance.userProfilesStore.getOnlyKnownProfile(userId);\r\n\r\n    if (knownProfile) {\r\n        return createMemberFromProfile(userId, knownProfile);\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\n/**\r\n * Hook to get the permalink member\r\n *\r\n * @param type - Permalink type\r\n * @param parseResult - Permalink parse result\r\n * @param targetRoom - Permalink target room {@link ./usePermalinkTargetRoom.ts}\r\n * @param event - Permalink event\r\n * @returns The permalink member:\r\n *          - The room member for a user mention\r\n *          - The sender for a permalink to an event in the same room\r\n *          - Null in other cases or the user cannot be loaded.\r\n */\r\nexport const usePermalinkMember = (\r\n    type: PillType | null,\r\n    parseResult: PermalinkParts | null,\r\n    targetRoom: Room | null,\r\n    event: MatrixEvent | null,\r\n): RoomMember | null => {\r\n    // User mentions and permalinks to events in the same room require to know the user.\r\n    // If it cannot be initially determined, it will be looked up later by a memo hook.\r\n    const shouldLookUpUser = type && [PillType.UserMention, PillType.EventInSameRoom].includes(type);\r\n    const userId = determineUserId(type, parseResult, event);\r\n    const userInRoom = shouldLookUpUser && userId && targetRoom ? determineMember(userId, targetRoom) : null;\r\n    const [member, setMember] = useState<RoomMember | null>(userInRoom);\r\n\r\n    useEffect(() => {\r\n        if (!shouldLookUpUser || !userId || member) {\r\n            // nothing to do here\r\n            return;\r\n        }\r\n\r\n        const doProfileLookup = async (): Promise<void> => {\r\n            const fetchedProfile = await SdkContextClass.instance.userProfilesStore.fetchOnlyKnownProfile(userId);\r\n\r\n            if (fetchedProfile) {\r\n                const newMember = createMemberFromProfile(userId, fetchedProfile);\r\n                setMember(newMember);\r\n            }\r\n        };\r\n\r\n        doProfileLookup();\r\n    }, [member, shouldLookUpUser, targetRoom, userId]);\r\n\r\n    return member;\r\n};\r\n"],"mappings":"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"}