{"version":3,"file":"useProfileInfo.js","names":["_react","require","_axios","_interopRequireDefault","_MatrixClientPeg","_useLatestResult","_rippleAddressCodec","_SdkConfig","useProfileInfo","profile","setProfile","useState","isActive","setIsActive","loading","setLoading","updateQuery","updateResult","useLatestResult","extractWalletAddress","inputString","addressRegex","match","exec","search","useCallback","_ref","query","term","length","startsWith","includes","result","MatrixClientPeg","get","getProfileInfo","user_id","avatar_url","display_name","displayname","e","isValidClassicAddress","response","axios","SdkConfig","then","data","active","console","error","ready","exports"],"sources":["../../src/hooks/useProfileInfo.ts"],"sourcesContent":["/*\r\nCopyright 2022 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { useCallback, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { MatrixClientPeg } from \"../MatrixClientPeg\";\r\nimport { useLatestResult } from \"./useLatestResult\";\r\nimport { isValidClassicAddress } from \"ripple-address-codec\";\r\nimport SdkConfig from \"../SdkConfig\";\r\nexport interface IProfileInfoOpts {\r\n    query?: string;\r\n}\r\n\r\nexport interface IProfileInfo {\r\n    user_id: string;\r\n    avatar_url?: string;\r\n    display_name?: string;\r\n    address_link?: string;\r\n}\r\n\r\nexport const useProfileInfo = (): {\r\n    ready: boolean;\r\n    loading: boolean;\r\n    profile: IProfileInfo | null;\r\n    isActive: boolean;\r\n    search(opts: IProfileInfoOpts): Promise<boolean>;\r\n} => {\r\n    const [profile, setProfile] = useState<IProfileInfo | null>(null);\r\n\r\n    const [isActive, setIsActive] = useState<boolean>(false);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [updateQuery, updateResult] = useLatestResult<string | undefined, IProfileInfo | null>(setProfile);\r\n\r\n    const extractWalletAddress = (inputString: string) => {\r\n        // Define a regular expression pattern to match XRPL addresses\r\n        const addressRegex = /@([a-zA-Z0-9]{25,34})/;\r\n\r\n        // Use the RegExp.exec method to find the address in the input string\r\n        const match = addressRegex.exec(inputString);\r\n\r\n        // Check if a match was found and extract the address\r\n        if (match && match[1]) {\r\n            return match[1];\r\n        }\r\n        // Return null if no address was found\r\n        return null;\r\n    };\r\n\r\n    const search = useCallback(\r\n        async ({ query: term }: IProfileInfoOpts): Promise<boolean> => {\r\n            updateQuery(term);\r\n            if (!term?.length || !term.startsWith(\"@\") || !term.includes(\":\")) {\r\n                setProfile(null);\r\n                setIsActive(false);\r\n                return true;\r\n            }\r\n\r\n            setLoading(true);\r\n            try {\r\n                const result: any = await MatrixClientPeg.get().getProfileInfo(term);\r\n                updateResult(term, {\r\n                    user_id: result.user_id ? result.user_id : term,\r\n                    avatar_url: result.avatar_url,\r\n                    display_name: result.displayname,\r\n                });\r\n                return true;\r\n            } catch (e) {\r\n                if (isValidClassicAddress(extractWalletAddress(term))) {\r\n                    const response = await axios\r\n                        .get(`${SdkConfig.get(\"backend_url\")}/verify-address/${extractWalletAddress(term)}`)\r\n                        .then((response) => response.data);\r\n                    if (response.active) setIsActive(true);\r\n                    else setIsActive(false);\r\n                    // if(response.active){\r\n                    //   const link= await axios.post(`${SdkConfig.get(\"backend_url\")}/accounts/${extractWalletAddress(term)}/payments`,{\r\n                    //         message:\"my first transaction\",\r\n                    //         amount:\"2000\",\r\n                    //     },{\r\n                    //         headers: {\r\n                    //           'Content-Type': 'application/json', // Set the content type to JSON\r\n                    //         },\r\n                    //       }).then((response)=>response.data);\r\n                    //     console.log('!!!!!!!!!ACTIVE',link);\r\n                    // }\r\n                } else {\r\n                    setIsActive(false);\r\n                }\r\n\r\n                console.error(\"Could not fetch profile info for params\", { term }, e);\r\n                updateResult(term, null);\r\n                return false;\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        },\r\n        [updateQuery, updateResult],\r\n    );\r\n\r\n    return {\r\n        ready: true,\r\n        loading,\r\n        profile,\r\n        isActive,\r\n        search,\r\n    } as const;\r\n};\r\n"],"mappings":"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"}