{"version":3,"file":"useUserOnboardingContext.js","names":["_logger","require","_matrix","_react","_MatrixClientPeg","_Notifier","_DMRoomMap","_interopRequireDefault","USER_ONBOARDING_CONTEXT_INTERVAL","useRefOf","value","ref","useRef","current","useCallback","arguments","useUserOnboardingContextValue","defaultValue","callback","setValue","useState","cli","MatrixClientPeg","get","handler","useEffect","handle","enabled","repeater","clearTimeout","window","setTimeout","catch","err","logger","warn","on","ClientEvent","AccountData","off","useUserOnboardingContext","hasAvatar","profile","getProfileInfo","getUserId","Boolean","avatar_url","hasDevices","myDevice","getDeviceId","devices","getDevices","find","device","device_id","hasDmRooms","dmRooms","DMRoomMap","shared","getUniqueRoomsWithIndividuals","Object","keys","length","hasNotificationsEnabled","Notifier","isPossible","useMemo"],"sources":["../../src/hooks/useUserOnboardingContext.ts"],"sourcesContent":["/*\r\nCopyright 2022 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { logger } from \"matrix-js-sdk/src/logger\";\r\nimport { ClientEvent, MatrixClient } from \"matrix-js-sdk/src/matrix\";\r\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\r\n\r\nimport { MatrixClientPeg } from \"../MatrixClientPeg\";\r\nimport { Notifier } from \"../Notifier\";\r\nimport DMRoomMap from \"../utils/DMRoomMap\";\r\n\r\nexport interface UserOnboardingContext {\r\n    hasAvatar: boolean;\r\n    hasDevices: boolean;\r\n    hasDmRooms: boolean;\r\n    hasNotificationsEnabled: boolean;\r\n}\r\n\r\nconst USER_ONBOARDING_CONTEXT_INTERVAL = 5000;\r\n\r\n/**\r\n * Returns a persistent, non-changing reference to a function\r\n * This function proxies all its calls to the current value of the given input callback\r\n *\r\n * This allows you to use the current value of e.g., a state in a callback thatâ€™s used by e.g., a useEventEmitter or\r\n * similar hook without re-registering the hook when the state changes\r\n * @param value changing callback\r\n */\r\nfunction useRefOf<T extends any[], R>(value: (...values: T) => R): (...values: T) => R {\r\n    const ref = useRef(value);\r\n    ref.current = value;\r\n    return useCallback((...values: T) => ref.current(...values), []);\r\n}\r\n\r\nfunction useUserOnboardingContextValue<T>(defaultValue: T, callback: (cli: MatrixClient) => Promise<T>): T {\r\n    const [value, setValue] = useState<T>(defaultValue);\r\n    const cli = MatrixClientPeg.get();\r\n\r\n    const handler = useRefOf(callback);\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            return;\r\n        }\r\n\r\n        let handle: number | null = null;\r\n        let enabled = true;\r\n        const repeater = async (): Promise<void> => {\r\n            if (handle !== null) {\r\n                clearTimeout(handle);\r\n                handle = null;\r\n            }\r\n            setValue(await handler(cli));\r\n            if (enabled) {\r\n                handle = window.setTimeout(repeater, USER_ONBOARDING_CONTEXT_INTERVAL);\r\n            }\r\n        };\r\n        repeater().catch((err) => logger.warn(\"could not update user onboarding context\", err));\r\n        cli.on(ClientEvent.AccountData, repeater);\r\n        return () => {\r\n            enabled = false;\r\n            cli.off(ClientEvent.AccountData, repeater);\r\n            if (handle !== null) {\r\n                clearTimeout(handle);\r\n                handle = null;\r\n            }\r\n        };\r\n    }, [cli, handler, value]);\r\n    return value;\r\n}\r\n\r\nexport function useUserOnboardingContext(): UserOnboardingContext {\r\n    const hasAvatar = useUserOnboardingContextValue(false, async (cli) => {\r\n        const profile = await cli.getProfileInfo(cli.getUserId()!);\r\n        return Boolean(profile?.avatar_url);\r\n    });\r\n    const hasDevices = useUserOnboardingContextValue(false, async (cli) => {\r\n        const myDevice = cli.getDeviceId();\r\n        const devices = await cli.getDevices();\r\n        return Boolean(devices.devices.find((device) => device.device_id !== myDevice));\r\n    });\r\n    const hasDmRooms = useUserOnboardingContextValue(false, async () => {\r\n        const dmRooms = DMRoomMap.shared().getUniqueRoomsWithIndividuals() ?? {};\r\n        return Boolean(Object.keys(dmRooms).length);\r\n    });\r\n    const hasNotificationsEnabled = useUserOnboardingContextValue(false, async () => {\r\n        return Notifier.isPossible();\r\n    });\r\n\r\n    return useMemo(\r\n        () => ({ hasAvatar, hasDevices, hasDmRooms, hasNotificationsEnabled }),\r\n        [hasAvatar, hasDevices, hasDmRooms, hasNotificationsEnabled],\r\n    );\r\n}\r\n"],"mappings":"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"}