{"version":3,"file":"usePermalinkTargetRoom.js","names":["_react","require","_Pill","_MatrixClientPeg","determineInitialRoom","type","parseResult","permalinkRoom","PillType","AtRoomMention","UserMention","roomIdOrAlias","room","findRoom","client","MatrixClientPeg","get","getRooms","find","r","getCanonicalAlias","getAltAliases","includes","getRoom","usePermalinkTargetRoom","shouldLookUpRoom","RoomMention","EventInSameRoom","EventInOtherRoom","initialRoom","targetRoom","setTargetRoom","useState","useEffect","newRoom","exports"],"sources":["../../src/hooks/usePermalinkTargetRoom.ts"],"sourcesContent":["/*\r\nCopyright 2023 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { Room } from \"matrix-js-sdk/src/matrix\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { PillType } from \"../components/views/elements/Pill\";\r\nimport { MatrixClientPeg } from \"../MatrixClientPeg\";\r\nimport { PermalinkParts } from \"../utils/permalinks/PermalinkConstructor\";\r\n\r\n/**\r\n * Tries to determine the initial room.\r\n * Initial here means it should be possible to load the room without sending API requests.\r\n * For an @room or a user mention it is the permalinkRoom.\r\n * If the parse result contains a room Id or alias try to find it with {@link findRoom}.\r\n * Otherwise returns null.\r\n *\r\n * @param type - Pill type\r\n * @param permalinkRoom - Room in which the permalink is displayed.\r\n * @param parseResult - Permalink parser result\r\n * @returns Initial room or null if it cannot be determined.\r\n */\r\nconst determineInitialRoom = (\r\n    type: PillType | null,\r\n    parseResult: PermalinkParts | null,\r\n    permalinkRoom: Room | undefined,\r\n): Room | null => {\r\n    if (type === PillType.AtRoomMention && permalinkRoom) return permalinkRoom;\r\n\r\n    if (type === PillType.UserMention && permalinkRoom) {\r\n        return permalinkRoom;\r\n    }\r\n\r\n    if (parseResult?.roomIdOrAlias) {\r\n        const room = findRoom(parseResult.roomIdOrAlias);\r\n        if (room) return room;\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\n/**\r\n * Tries to find a room by room Id or searching all rooms for an alias.\r\n *\r\n * @param roomIdOrAlias - Id or alias of the room to find.\r\n * @returns Room if found, else null.\r\n */\r\nconst findRoom = (roomIdOrAlias: string): Room | null => {\r\n    const client = MatrixClientPeg.get();\r\n\r\n    return roomIdOrAlias[0] === \"#\"\r\n        ? client.getRooms().find((r) => {\r\n              return r.getCanonicalAlias() === roomIdOrAlias || r.getAltAliases().includes(roomIdOrAlias);\r\n          }) ?? null\r\n        : client.getRoom(roomIdOrAlias);\r\n};\r\n\r\n/**\r\n * Hook to get the permalink target room:\r\n *\r\n * @param type - Permalink type\r\n * @param parseResult - Permalink parse result\r\n * @param permalinkRoom - Room in which the permalink is rendered\r\n * @returns Returns the target room:\r\n *          - The permalinkRoom for an @room or user mention\r\n *          - The room of the parse result for a room mention\r\n *          - The room of the event for an event permalink\r\n *          - Null in other cases or if the room cannot be found\r\n */\r\nexport const usePermalinkTargetRoom = (\r\n    type: PillType | null,\r\n    parseResult: PermalinkParts | null,\r\n    permalinkRoom: Room | undefined,\r\n): Room | null => {\r\n    // The listed permalink types require a room.\r\n    // If it cannot be initially determined, it will be looked up later by a memo hook.\r\n    const shouldLookUpRoom =\r\n        type && [PillType.RoomMention, PillType.EventInSameRoom, PillType.EventInOtherRoom, \"space\"].includes(type);\r\n    const initialRoom = determineInitialRoom(type, parseResult, permalinkRoom);\r\n    const [targetRoom, setTargetRoom] = useState<Room | null>(initialRoom);\r\n\r\n    useEffect(() => {\r\n        if (shouldLookUpRoom && !targetRoom && parseResult?.roomIdOrAlias) {\r\n            const newRoom = findRoom(parseResult.roomIdOrAlias);\r\n            setTargetRoom(newRoom);\r\n        }\r\n    }, [parseResult?.roomIdOrAlias, shouldLookUpRoom, targetRoom]);\r\n\r\n    return targetRoom;\r\n};\r\n"],"mappings":";;;;;;AAiBA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,KAAA,GAAAD,OAAA;AACA,IAAAE,gBAAA,GAAAF,OAAA;AApBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,oBAAoB,GAAGA,CACzBC,IAAqB,EACrBC,WAAkC,EAClCC,aAA+B,KACjB;EACd,IAAIF,IAAI,KAAKG,cAAQ,CAACC,aAAa,IAAIF,aAAa,EAAE,OAAOA,aAAa;EAE1E,IAAIF,IAAI,KAAKG,cAAQ,CAACE,WAAW,IAAIH,aAAa,EAAE;IAChD,OAAOA,aAAa;EACxB;EAEA,IAAID,WAAW,EAAEK,aAAa,EAAE;IAC5B,MAAMC,IAAI,GAAGC,QAAQ,CAACP,WAAW,CAACK,aAAa,CAAC;IAChD,IAAIC,IAAI,EAAE,OAAOA,IAAI;EACzB;EAEA,OAAO,IAAI;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,QAAQ,GAAIF,aAAqB,IAAkB;EACrD,MAAMG,MAAM,GAAGC,gCAAe,CAACC,GAAG,CAAC,CAAC;EAEpC,OAAOL,aAAa,CAAC,CAAC,CAAC,KAAK,GAAG,GACzBG,MAAM,CAACG,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAK;IAC1B,OAAOA,CAAC,CAACC,iBAAiB,CAAC,CAAC,KAAKT,aAAa,IAAIQ,CAAC,CAACE,aAAa,CAAC,CAAC,CAACC,QAAQ,CAACX,aAAa,CAAC;EAC/F,CAAC,CAAC,IAAI,IAAI,GACVG,MAAM,CAACS,OAAO,CAACZ,aAAa,CAAC;AACvC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMa,sBAAsB,GAAGA,CAClCnB,IAAqB,EACrBC,WAAkC,EAClCC,aAA+B,KACjB;EACd;EACA;EACA,MAAMkB,gBAAgB,GAClBpB,IAAI,IAAI,CAACG,cAAQ,CAACkB,WAAW,EAAElB,cAAQ,CAACmB,eAAe,EAAEnB,cAAQ,CAACoB,gBAAgB,EAAE,OAAO,CAAC,CAACN,QAAQ,CAACjB,IAAI,CAAC;EAC/G,MAAMwB,WAAW,GAAGzB,oBAAoB,CAACC,IAAI,EAAEC,WAAW,EAAEC,aAAa,CAAC;EAC1E,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAG,IAAAC,eAAQ,EAAcH,WAAW,CAAC;EAEtE,IAAAI,gBAAS,EAAC,MAAM;IACZ,IAAIR,gBAAgB,IAAI,CAACK,UAAU,IAAIxB,WAAW,EAAEK,aAAa,EAAE;MAC/D,MAAMuB,OAAO,GAAGrB,QAAQ,CAACP,WAAW,CAACK,aAAa,CAAC;MACnDoB,aAAa,CAACG,OAAO,CAAC;IAC1B;EACJ,CAAC,EAAE,CAAC5B,WAAW,EAAEK,aAAa,EAAEc,gBAAgB,EAAEK,UAAU,CAAC,CAAC;EAE9D,OAAOA,UAAU;AACrB,CAAC;AAACK,OAAA,CAAAX,sBAAA,GAAAA,sBAAA"}