{"version":3,"file":"ThreepidInviteStore.js","names":["_events","_interopRequireDefault","require","_rfc","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","STORAGE_PREFIX","ThreepidInviteStore","EventEmitter","instance","_instance","storeInvite","roomId","wireInvite","invite","id","generateIdOf","localStorage","setItem","JSON","stringify","translateInvite","getWireInvites","results","keyName","startsWith","parse","getItem","e","console","warn","getInvites","map","pickBestInvite","resolveInvite","removeItem","persisted","base32","Buffer","from","toEmail","email","signUrl","signurl","roomName","room_name","roomAvatarUrl","room_avatar_url","inviterName","inviter_name","translateToWireFormat","exports"],"sources":["../../src/stores/ThreepidInviteStore.ts"],"sourcesContent":["/*\r\nCopyright 2020 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport EventEmitter from \"events\";\r\nimport { base32 } from \"rfc4648\";\r\nimport { RoomType } from \"matrix-js-sdk/src/@types/event\";\r\n\r\n// Dev note: the interface is split in two so we don't have to disable the\r\n// linter across the whole project.\r\nexport interface IThreepidInviteWireFormat {\r\n    email: string;\r\n    signurl: string;\r\n    room_name: string; // eslint-disable-line camelcase\r\n    room_avatar_url: string; // eslint-disable-line camelcase\r\n    inviter_name: string; // eslint-disable-line camelcase\r\n\r\n    // TODO: Figure out if these are ever populated\r\n    guest_access_token?: string; // eslint-disable-line camelcase\r\n    guest_user_id?: string; // eslint-disable-line camelcase\r\n}\r\n\r\ninterface IPersistedThreepidInvite extends IThreepidInviteWireFormat {\r\n    roomId: string;\r\n}\r\n\r\nexport interface IThreepidInvite {\r\n    id: string; // generated by us\r\n    roomId: string;\r\n    toEmail: string;\r\n    signUrl: string;\r\n    roomName: string;\r\n    roomAvatarUrl: string;\r\n    inviterName: string;\r\n}\r\n\r\n// Any data about the room that would normally come from the homeserver\r\n// but has been passed out-of-band, eg. the room name and avatar URL\r\n// from an email invite (a workaround for the fact that we can't\r\n// get this information from the HS using an email invite).\r\nexport interface IOOBData {\r\n    name?: string; // The room's name\r\n    avatarUrl?: string; // The mxc:// avatar URL for the room\r\n    inviterName?: string; // The display name of the person who invited us to the room\r\n    // eslint-disable-next-line camelcase\r\n    room_name?: string; // The name of the room, to be used until we are told better by the server\r\n    roomType?: RoomType | string; // The type of the room, to be used until we are told better by the server\r\n}\r\n\r\nconst STORAGE_PREFIX = \"mx_threepid_invite_\";\r\n\r\nexport default class ThreepidInviteStore extends EventEmitter {\r\n    private static _instance: ThreepidInviteStore;\r\n\r\n    public static get instance(): ThreepidInviteStore {\r\n        if (!ThreepidInviteStore._instance) {\r\n            ThreepidInviteStore._instance = new ThreepidInviteStore();\r\n        }\r\n        return ThreepidInviteStore._instance;\r\n    }\r\n\r\n    public storeInvite(roomId: string, wireInvite: IThreepidInviteWireFormat): IThreepidInvite {\r\n        const invite = <IPersistedThreepidInvite>{ roomId, ...wireInvite };\r\n        const id = this.generateIdOf(invite);\r\n        localStorage.setItem(`${STORAGE_PREFIX}${id}`, JSON.stringify(invite));\r\n        return this.translateInvite(invite);\r\n    }\r\n\r\n    public getWireInvites(): IPersistedThreepidInvite[] {\r\n        const results: IPersistedThreepidInvite[] = [];\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            const keyName = localStorage.key(i);\r\n            if (!keyName?.startsWith(STORAGE_PREFIX)) continue;\r\n            try {\r\n                results.push(JSON.parse(localStorage.getItem(keyName)!) as IPersistedThreepidInvite);\r\n            } catch (e) {\r\n                console.warn(\"Failed to parse 3pid invite\", e);\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    public getInvites(): IThreepidInvite[] {\r\n        return this.getWireInvites().map((i) => this.translateInvite(i));\r\n    }\r\n\r\n    // Currently Element can only handle one invite at a time, so handle that\r\n    public pickBestInvite(): IThreepidInvite {\r\n        return this.getInvites()[0];\r\n    }\r\n\r\n    public resolveInvite(invite: IThreepidInvite): void {\r\n        localStorage.removeItem(`${STORAGE_PREFIX}${invite.id}`);\r\n    }\r\n\r\n    private generateIdOf(persisted: IPersistedThreepidInvite): string {\r\n        // Use a consistent \"hash\" to form an ID.\r\n        return base32.stringify(Buffer.from(JSON.stringify(persisted)));\r\n    }\r\n\r\n    private translateInvite(persisted: IPersistedThreepidInvite): IThreepidInvite {\r\n        return {\r\n            id: this.generateIdOf(persisted),\r\n            roomId: persisted.roomId,\r\n            toEmail: persisted.email,\r\n            signUrl: persisted.signurl,\r\n            roomName: persisted.room_name,\r\n            roomAvatarUrl: persisted.room_avatar_url,\r\n            inviterName: persisted.inviter_name,\r\n        };\r\n    }\r\n\r\n    public translateToWireFormat(invite: IThreepidInvite): IThreepidInviteWireFormat {\r\n        return {\r\n            email: invite.toEmail,\r\n            signurl: invite.signUrl,\r\n            room_name: invite.roomName,\r\n            room_avatar_url: invite.roomAvatarUrl,\r\n            inviter_name: invite.inviterName,\r\n        };\r\n    }\r\n}\r\n"],"mappings":"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"}