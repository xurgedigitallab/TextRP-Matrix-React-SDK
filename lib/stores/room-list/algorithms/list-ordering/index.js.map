{"version":3,"file":"index.js","names":["_ImportanceAlgorithm","require","_models","_NaturalAlgorithm","ALGORITHM_FACTORIES","ListAlgorithm","Natural","tagId","initSort","NaturalAlgorithm","Importance","ImportanceAlgorithm","getListAlgorithmInstance","algorithm","Error"],"sources":["../../../../../src/stores/room-list/algorithms/list-ordering/index.ts"],"sourcesContent":["/*\r\nCopyright 2020 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { ImportanceAlgorithm } from \"./ImportanceAlgorithm\";\r\nimport { ListAlgorithm, SortAlgorithm } from \"../models\";\r\nimport { NaturalAlgorithm } from \"./NaturalAlgorithm\";\r\nimport { TagID } from \"../../models\";\r\nimport { OrderingAlgorithm } from \"./OrderingAlgorithm\";\r\n\r\ninterface AlgorithmFactory {\r\n    (tagId: TagID, initialSortingAlgorithm: SortAlgorithm): OrderingAlgorithm;\r\n}\r\n\r\nconst ALGORITHM_FACTORIES: { [algorithm in ListAlgorithm]: AlgorithmFactory } = {\r\n    [ListAlgorithm.Natural]: (tagId, initSort) => new NaturalAlgorithm(tagId, initSort),\r\n    [ListAlgorithm.Importance]: (tagId, initSort) => new ImportanceAlgorithm(tagId, initSort),\r\n};\r\n\r\n/**\r\n * Gets an instance of the defined algorithm\r\n * @param {ListAlgorithm} algorithm The algorithm to get an instance of.\r\n * @param {TagID} tagId The tag the algorithm is for.\r\n * @param {SortAlgorithm} initSort The initial sorting algorithm for the ordering algorithm.\r\n * @returns {Algorithm} The algorithm instance.\r\n */\r\nexport function getListAlgorithmInstance(\r\n    algorithm: ListAlgorithm,\r\n    tagId: TagID,\r\n    initSort: SortAlgorithm,\r\n): OrderingAlgorithm {\r\n    if (!ALGORITHM_FACTORIES[algorithm]) {\r\n        throw new Error(`${algorithm} is not a known algorithm`);\r\n    }\r\n\r\n    return ALGORITHM_FACTORIES[algorithm](tagId, initSort);\r\n}\r\n"],"mappings":";;;;;;AAgBA,IAAAA,oBAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AACA,IAAAE,iBAAA,GAAAF,OAAA;AAlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYA,MAAMG,mBAAuE,GAAG;EAC5E,CAACC,qBAAa,CAACC,OAAO,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK,IAAIC,kCAAgB,CAACF,KAAK,EAAEC,QAAQ,CAAC;EACnF,CAACH,qBAAa,CAACK,UAAU,GAAG,CAACH,KAAK,EAAEC,QAAQ,KAAK,IAAIG,wCAAmB,CAACJ,KAAK,EAAEC,QAAQ;AAC5F,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASI,wBAAwBA,CACpCC,SAAwB,EACxBN,KAAY,EACZC,QAAuB,EACN;EACjB,IAAI,CAACJ,mBAAmB,CAACS,SAAS,CAAC,EAAE;IACjC,MAAM,IAAIC,KAAK,CAAE,GAAED,SAAU,2BAA0B,CAAC;EAC5D;EAEA,OAAOT,mBAAmB,CAACS,SAAS,CAAC,CAACN,KAAK,EAAEC,QAAQ,CAAC;AAC1D"}