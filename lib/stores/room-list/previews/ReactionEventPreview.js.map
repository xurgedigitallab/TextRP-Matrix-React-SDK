{"version":3,"file":"ReactionEventPreview.js","names":["_utils","require","_languageHandler","_MatrixClientPeg","_MessagePreviewStore","ReactionEventPreview","getTextFor","event","tagId","isThread","roomId","getRoomId","relation","getRelation","reaction","key","cli","MatrixClientPeg","get","room","getRoom","relatedEvent","event_id","findEventById","message","MessagePreviewStore","instance","generatePreviewForEvent","isSelf","_t","sender","getSenderName","exports"],"sources":["../../../../src/stores/room-list/previews/ReactionEventPreview.ts"],"sourcesContent":["/*\r\nCopyright 2020 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { MatrixEvent } from \"matrix-js-sdk/src/models/event\";\r\n\r\nimport { IPreview } from \"./IPreview\";\r\nimport { TagID } from \"../models\";\r\nimport { getSenderName, isSelf } from \"./utils\";\r\nimport { _t } from \"../../../languageHandler\";\r\nimport { MatrixClientPeg } from \"../../../MatrixClientPeg\";\r\nimport { MessagePreviewStore } from \"../MessagePreviewStore\";\r\n\r\nexport class ReactionEventPreview implements IPreview {\r\n    public getTextFor(event: MatrixEvent, tagId?: TagID, isThread?: boolean): string | null {\r\n        const roomId = event.getRoomId();\r\n        if (!roomId) return null; // not a room event\r\n\r\n        const relation = event.getRelation();\r\n        if (!relation) return null; // invalid reaction (probably redacted)\r\n\r\n        const reaction = relation.key;\r\n        if (!reaction) return null; // invalid reaction (unknown format)\r\n\r\n        const cli = MatrixClientPeg.get();\r\n        const room = cli?.getRoom(roomId);\r\n        const relatedEvent = relation.event_id ? room?.findEventById(relation.event_id) : null;\r\n        if (!relatedEvent) return null;\r\n\r\n        const message = MessagePreviewStore.instance.generatePreviewForEvent(relatedEvent);\r\n        if (isSelf(event)) {\r\n            return _t(\"You reacted %(reaction)s to %(message)s\", {\r\n                reaction,\r\n                message,\r\n            });\r\n        }\r\n\r\n        return _t(\"%(sender)s reacted %(reaction)s to %(message)s\", {\r\n            sender: getSenderName(event),\r\n            reaction,\r\n            message,\r\n        });\r\n    }\r\n}\r\n"],"mappings":";;;;;;AAoBA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,gBAAA,GAAAD,OAAA;AACA,IAAAE,gBAAA,GAAAF,OAAA;AACA,IAAAG,oBAAA,GAAAH,OAAA;AAvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAWO,MAAMI,oBAAoB,CAAqB;EAC3CC,UAAUA,CAACC,KAAkB,EAAEC,KAAa,EAAEC,QAAkB,EAAiB;IACpF,MAAMC,MAAM,GAAGH,KAAK,CAACI,SAAS,CAAC,CAAC;IAChC,IAAI,CAACD,MAAM,EAAE,OAAO,IAAI,CAAC,CAAC;;IAE1B,MAAME,QAAQ,GAAGL,KAAK,CAACM,WAAW,CAAC,CAAC;IACpC,IAAI,CAACD,QAAQ,EAAE,OAAO,IAAI,CAAC,CAAC;;IAE5B,MAAME,QAAQ,GAAGF,QAAQ,CAACG,GAAG;IAC7B,IAAI,CAACD,QAAQ,EAAE,OAAO,IAAI,CAAC,CAAC;;IAE5B,MAAME,GAAG,GAAGC,gCAAe,CAACC,GAAG,CAAC,CAAC;IACjC,MAAMC,IAAI,GAAGH,GAAG,EAAEI,OAAO,CAACV,MAAM,CAAC;IACjC,MAAMW,YAAY,GAAGT,QAAQ,CAACU,QAAQ,GAAGH,IAAI,EAAEI,aAAa,CAACX,QAAQ,CAACU,QAAQ,CAAC,GAAG,IAAI;IACtF,IAAI,CAACD,YAAY,EAAE,OAAO,IAAI;IAE9B,MAAMG,OAAO,GAAGC,wCAAmB,CAACC,QAAQ,CAACC,uBAAuB,CAACN,YAAY,CAAC;IAClF,IAAI,IAAAO,aAAM,EAACrB,KAAK,CAAC,EAAE;MACf,OAAO,IAAAsB,mBAAE,EAAC,yCAAyC,EAAE;QACjDf,QAAQ;QACRU;MACJ,CAAC,CAAC;IACN;IAEA,OAAO,IAAAK,mBAAE,EAAC,gDAAgD,EAAE;MACxDC,MAAM,EAAE,IAAAC,oBAAa,EAACxB,KAAK,CAAC;MAC5BO,QAAQ;MACRU;IACJ,CAAC,CAAC;EACN;AACJ;AAACQ,OAAA,CAAA3B,oBAAA,GAAAA,oBAAA"}