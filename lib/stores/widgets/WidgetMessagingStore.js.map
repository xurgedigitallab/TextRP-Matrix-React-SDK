{"version":3,"file":"WidgetMessagingStore.js","names":["_AsyncStoreWithClient","require","_dispatcher","_interopRequireDefault","_maps","_WidgetUtils","WidgetMessagingStoreEvent","exports","WidgetMessagingStore","AsyncStoreWithClient","constructor","defaultDispatcher","_defineProperty2","default","EnhancedMap","instance","internalInstance","onAction","payload","onReady","widgetMap","clear","storeMessaging","widget","roomId","widgetApi","stopMessaging","uid","WidgetUtils","calcWidgetUid","id","set","emit","StoreMessaging","stopMessagingByUid","getMessaging","get","widgetUid","remove","stop","StopMessaging","getMessagingForUid","start"],"sources":["../../../src/stores/widgets/WidgetMessagingStore.ts"],"sourcesContent":["/*\r\n * Copyright 2020 The Matrix.org Foundation C.I.C.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *         http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { ClientWidgetApi, Widget } from \"matrix-widget-api\";\r\n\r\nimport { AsyncStoreWithClient } from \"../AsyncStoreWithClient\";\r\nimport defaultDispatcher from \"../../dispatcher/dispatcher\";\r\nimport { ActionPayload } from \"../../dispatcher/payloads\";\r\nimport { EnhancedMap } from \"../../utils/maps\";\r\nimport WidgetUtils from \"../../utils/WidgetUtils\";\r\n\r\nexport enum WidgetMessagingStoreEvent {\r\n    StoreMessaging = \"store_messaging\",\r\n    StopMessaging = \"stop_messaging\",\r\n}\r\n\r\n/**\r\n * Temporary holding store for widget messaging instances. This is eventually\r\n * going to be merged with a more complete WidgetStore, but for now it's\r\n * easiest to split this into a single place.\r\n */\r\nexport class WidgetMessagingStore extends AsyncStoreWithClient<{}> {\r\n    private static readonly internalInstance = (() => {\r\n        const instance = new WidgetMessagingStore();\r\n        instance.start();\r\n        return instance;\r\n    })();\r\n\r\n    private widgetMap = new EnhancedMap<string, ClientWidgetApi>(); // <widget UID, ClientWidgetAPi>\r\n\r\n    public constructor() {\r\n        super(defaultDispatcher);\r\n    }\r\n\r\n    public static get instance(): WidgetMessagingStore {\r\n        return WidgetMessagingStore.internalInstance;\r\n    }\r\n\r\n    protected async onAction(payload: ActionPayload): Promise<void> {\r\n        // nothing to do\r\n    }\r\n\r\n    protected async onReady(): Promise<any> {\r\n        // just in case\r\n        this.widgetMap.clear();\r\n    }\r\n\r\n    public storeMessaging(widget: Widget, roomId: string | undefined, widgetApi: ClientWidgetApi): void {\r\n        this.stopMessaging(widget, roomId);\r\n        const uid = WidgetUtils.calcWidgetUid(widget.id, roomId);\r\n        this.widgetMap.set(uid, widgetApi);\r\n\r\n        this.emit(WidgetMessagingStoreEvent.StoreMessaging, uid, widgetApi);\r\n    }\r\n\r\n    public stopMessaging(widget: Widget, roomId: string | undefined): void {\r\n        this.stopMessagingByUid(WidgetUtils.calcWidgetUid(widget.id, roomId));\r\n    }\r\n\r\n    public getMessaging(widget: Widget, roomId: string | undefined): ClientWidgetApi | undefined {\r\n        return this.widgetMap.get(WidgetUtils.calcWidgetUid(widget.id, roomId));\r\n    }\r\n\r\n    /**\r\n     * Stops the widget messaging instance for a given widget UID.\r\n     * @param {string} widgetUid The widget UID.\r\n     */\r\n    public stopMessagingByUid(widgetUid: string): void {\r\n        this.widgetMap.remove(widgetUid)?.stop();\r\n        this.emit(WidgetMessagingStoreEvent.StopMessaging, widgetUid);\r\n    }\r\n\r\n    /**\r\n     * Gets the widget messaging class for a given widget UID.\r\n     * @param {string} widgetUid The widget UID.\r\n     * @returns {ClientWidgetApi} The widget API, or a falsy value if not found.\r\n     */\r\n    public getMessagingForUid(widgetUid: string): ClientWidgetApi | undefined {\r\n        return this.widgetMap.get(widgetUid);\r\n    }\r\n}\r\n"],"mappings":";;;;;;;;AAkBA,IAAAA,qBAAA,GAAAC,OAAA;AACA,IAAAC,WAAA,GAAAC,sBAAA,CAAAF,OAAA;AAEA,IAAAG,KAAA,GAAAH,OAAA;AACA,IAAAI,YAAA,GAAAF,sBAAA,CAAAF,OAAA;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA,IAwBYK,yBAAyB,0BAAzBA,yBAAyB;EAAzBA,yBAAyB;EAAzBA,yBAAyB;EAAA,OAAzBA,yBAAyB;AAAA;AAKrC;AACA;AACA;AACA;AACA;AAJAC,OAAA,CAAAD,yBAAA,GAAAA,yBAAA;AAKO,MAAME,oBAAoB,SAASC,0CAAoB,CAAK;EAOC;;EAEzDC,WAAWA,CAAA,EAAG;IACjB,KAAK,CAACC,mBAAiB,CAAC;IAAC,IAAAC,gBAAA,CAAAC,OAAA,qBAHT,IAAIC,iBAAW,CAA0B,CAAC;EAI9D;EAEA,WAAkBC,QAAQA,CAAA,EAAyB;IAC/C,OAAOP,oBAAoB,CAACQ,gBAAgB;EAChD;EAEA,MAAgBC,QAAQA,CAACC,OAAsB,EAAiB;IAC5D;EAAA;EAGJ,MAAgBC,OAAOA,CAAA,EAAiB;IACpC;IACA,IAAI,CAACC,SAAS,CAACC,KAAK,CAAC,CAAC;EAC1B;EAEOC,cAAcA,CAACC,MAAc,EAAEC,MAA0B,EAAEC,SAA0B,EAAQ;IAChG,IAAI,CAACC,aAAa,CAACH,MAAM,EAAEC,MAAM,CAAC;IAClC,MAAMG,GAAG,GAAGC,oBAAW,CAACC,aAAa,CAACN,MAAM,CAACO,EAAE,EAAEN,MAAM,CAAC;IACxD,IAAI,CAACJ,SAAS,CAACW,GAAG,CAACJ,GAAG,EAAEF,SAAS,CAAC;IAElC,IAAI,CAACO,IAAI,CAAC1B,yBAAyB,CAAC2B,cAAc,EAAEN,GAAG,EAAEF,SAAS,CAAC;EACvE;EAEOC,aAAaA,CAACH,MAAc,EAAEC,MAA0B,EAAQ;IACnE,IAAI,CAACU,kBAAkB,CAACN,oBAAW,CAACC,aAAa,CAACN,MAAM,CAACO,EAAE,EAAEN,MAAM,CAAC,CAAC;EACzE;EAEOW,YAAYA,CAACZ,MAAc,EAAEC,MAA0B,EAA+B;IACzF,OAAO,IAAI,CAACJ,SAAS,CAACgB,GAAG,CAACR,oBAAW,CAACC,aAAa,CAACN,MAAM,CAACO,EAAE,EAAEN,MAAM,CAAC,CAAC;EAC3E;;EAEA;AACJ;AACA;AACA;EACWU,kBAAkBA,CAACG,SAAiB,EAAQ;IAC/C,IAAI,CAACjB,SAAS,CAACkB,MAAM,CAACD,SAAS,CAAC,EAAEE,IAAI,CAAC,CAAC;IACxC,IAAI,CAACP,IAAI,CAAC1B,yBAAyB,CAACkC,aAAa,EAAEH,SAAS,CAAC;EACjE;;EAEA;AACJ;AACA;AACA;AACA;EACWI,kBAAkBA,CAACJ,SAAiB,EAA+B;IACtE,OAAO,IAAI,CAACjB,SAAS,CAACgB,GAAG,CAACC,SAAS,CAAC;EACxC;AACJ;AAAC9B,OAAA,CAAAC,oBAAA,GAAAA,oBAAA;AAAA,IAAAI,gBAAA,CAAAC,OAAA,EA3DYL,oBAAoB,sBACc,CAAC,MAAM;EAC9C,MAAMO,QAAQ,GAAG,IAAIP,oBAAoB,CAAC,CAAC;EAC3CO,QAAQ,CAAC2B,KAAK,CAAC,CAAC;EAChB,OAAO3B,QAAQ;AACnB,CAAC,EAAE,CAAC"}