{"version":3,"file":"ElementWidgetActions.js","names":["ElementWidgetActions","exports"],"sources":["../../../src/stores/widgets/ElementWidgetActions.ts"],"sourcesContent":["/*\r\n * Copyright 2020-2022 The Matrix.org Foundation C.I.C.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *         http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { IWidgetApiRequest } from \"matrix-widget-api\";\r\n\r\nexport enum ElementWidgetActions {\r\n    // All of these actions are currently specific to Jitsi and Element Call\r\n    JoinCall = \"io.element.join\",\r\n    HangupCall = \"im.vector.hangup\",\r\n    CallParticipants = \"io.element.participants\",\r\n    MuteAudio = \"io.element.mute_audio\",\r\n    UnmuteAudio = \"io.element.unmute_audio\",\r\n    MuteVideo = \"io.element.mute_video\",\r\n    UnmuteVideo = \"io.element.unmute_video\",\r\n    StartLiveStream = \"im.vector.start_live_stream\",\r\n\r\n    // Element Call -> host requesting to start a screenshare\r\n    // (ie. expects a ScreenshareStart once the user has picked a source)\r\n    // replies with { pending } where pending is true if the host has asked\r\n    // the user to choose a window and false if not (ie. if the host isn't\r\n    // running within Electron)\r\n    ScreenshareRequest = \"io.element.screenshare_request\",\r\n    // host -> Element Call telling EC to start screen sharing with\r\n    // the given source\r\n    ScreenshareStart = \"io.element.screenshare_start\",\r\n    // host -> Element Call telling EC to stop screen sharing, or that\r\n    // the user cancelled when selecting a source after a ScreenshareRequest\r\n    ScreenshareStop = \"io.element.screenshare_stop\",\r\n\r\n    // Actions for switching layouts\r\n    TileLayout = \"io.element.tile_layout\",\r\n    SpotlightLayout = \"io.element.spotlight_layout\",\r\n\r\n    OpenIntegrationManager = \"integration_manager_open\",\r\n\r\n    /**\r\n     * @deprecated Use MSC2931 instead\r\n     */\r\n    ViewRoom = \"io.element.view_room\",\r\n}\r\n\r\nexport interface IHangupCallApiRequest extends IWidgetApiRequest {\r\n    data: {\r\n        errorMessage?: string;\r\n    };\r\n}\r\n\r\n/**\r\n * @deprecated Use MSC2931 instead\r\n */\r\nexport interface IViewRoomApiRequest extends IWidgetApiRequest {\r\n    data: {\r\n        room_id: string; // eslint-disable-line camelcase\r\n    };\r\n}\r\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA,IAkBYA,oBAAoB,0BAApBA,oBAAoB;EAApBA,oBAAoB;EAApBA,oBAAoB;EAApBA,oBAAoB;EAApBA,oBAAoB;EAApBA,oBAAoB;EAApBA,oBAAoB;EAApBA,oBAAoB;EAApBA,oBAAoB;EAApBA,oBAAoB;EAApBA,oBAAoB;EAApBA,oBAAoB;EAApBA,oBAAoB;EAApBA,oBAAoB;EAApBA,oBAAoB;EAApBA,oBAAoB;EAAA,OAApBA,oBAAoB;AAAA;AA0ChC;AACA;AACA;AAFAC,OAAA,CAAAD,oBAAA,GAAAA,oBAAA"}