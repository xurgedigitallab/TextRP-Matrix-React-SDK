{"version":3,"file":"RoomNotificationState.js","names":["_event","require","_room","_client","_MatrixClientPeg","_readReceipts","RoomNotifs","_interopRequireWildcard","_NotificationState","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","RoomNotificationState","NotificationState","constructor","room","_defineProperty2","updateNotificationState","event","readReceiptChangeIsFor","MatrixClientPeg","roomId","getRoomId","ev","getType","cli","client","on","RoomEvent","Receipt","handleReadReceipt","MyMembership","handleMembershipUpdate","LocalEchoUpdated","handleLocalEchoUpdated","Timeline","handleRoomEventUpdate","Redaction","UnreadNotifications","handleNotificationCountUpdate","MatrixEventEvent","Decrypted","onEventDecrypted","ClientEvent","AccountData","handleAccountDataUpdate","destroy","removeListener","snapshot","color","symbol","count","determineUnreadState","muted","getRoomNotifsState","RoomNotifState","Mute","_color","_symbol","_count","_muted","emitIfUpdated","exports"],"sources":["../../../src/stores/notifications/RoomNotificationState.ts"],"sourcesContent":["/*\r\nCopyright 2020, 2023 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { MatrixEventEvent } from \"matrix-js-sdk/src/models/event\";\r\nimport { RoomEvent } from \"matrix-js-sdk/src/models/room\";\r\nimport { ClientEvent } from \"matrix-js-sdk/src/client\";\r\n\r\nimport type { Room } from \"matrix-js-sdk/src/models/room\";\r\nimport type { MatrixEvent } from \"matrix-js-sdk/src/models/event\";\r\nimport type { IDestroyable } from \"../../utils/IDestroyable\";\r\nimport { MatrixClientPeg } from \"../../MatrixClientPeg\";\r\nimport { readReceiptChangeIsFor } from \"../../utils/read-receipts\";\r\nimport * as RoomNotifs from \"../../RoomNotifs\";\r\nimport { NotificationState } from \"./NotificationState\";\r\n\r\nexport class RoomNotificationState extends NotificationState implements IDestroyable {\r\n    public constructor(public readonly room: Room) {\r\n        super();\r\n        const cli = this.room.client;\r\n        this.room.on(RoomEvent.Receipt, this.handleReadReceipt);\r\n        this.room.on(RoomEvent.MyMembership, this.handleMembershipUpdate);\r\n        this.room.on(RoomEvent.LocalEchoUpdated, this.handleLocalEchoUpdated);\r\n        this.room.on(RoomEvent.Timeline, this.handleRoomEventUpdate);\r\n        this.room.on(RoomEvent.Redaction, this.handleRoomEventUpdate);\r\n\r\n        this.room.on(RoomEvent.UnreadNotifications, this.handleNotificationCountUpdate); // for server-sent counts\r\n        cli.on(MatrixEventEvent.Decrypted, this.onEventDecrypted);\r\n        cli.on(ClientEvent.AccountData, this.handleAccountDataUpdate);\r\n        this.updateNotificationState();\r\n    }\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        const cli = this.room.client;\r\n        this.room.removeListener(RoomEvent.Receipt, this.handleReadReceipt);\r\n        this.room.removeListener(RoomEvent.MyMembership, this.handleMembershipUpdate);\r\n        this.room.removeListener(RoomEvent.LocalEchoUpdated, this.handleLocalEchoUpdated);\r\n        this.room.removeListener(RoomEvent.Timeline, this.handleRoomEventUpdate);\r\n        this.room.removeListener(RoomEvent.Redaction, this.handleRoomEventUpdate);\r\n        cli.removeListener(MatrixEventEvent.Decrypted, this.onEventDecrypted);\r\n        cli.removeListener(ClientEvent.AccountData, this.handleAccountDataUpdate);\r\n    }\r\n\r\n    private handleLocalEchoUpdated = (): void => {\r\n        this.updateNotificationState();\r\n    };\r\n\r\n    private handleReadReceipt = (event: MatrixEvent, room: Room): void => {\r\n        if (!readReceiptChangeIsFor(event, MatrixClientPeg.get())) return; // not our own - ignore\r\n        if (room.roomId !== this.room.roomId) return; // not for us - ignore\r\n        this.updateNotificationState();\r\n    };\r\n\r\n    private handleMembershipUpdate = (): void => {\r\n        this.updateNotificationState();\r\n    };\r\n\r\n    private handleNotificationCountUpdate = (): void => {\r\n        this.updateNotificationState();\r\n    };\r\n\r\n    private onEventDecrypted = (event: MatrixEvent): void => {\r\n        if (event.getRoomId() !== this.room.roomId) return; // ignore - not for us or notifications timeline\r\n\r\n        this.updateNotificationState();\r\n    };\r\n\r\n    private handleRoomEventUpdate = (event: MatrixEvent): void => {\r\n        if (event?.getRoomId() !== this.room.roomId) return; // ignore - not for us or notifications timeline\r\n        this.updateNotificationState();\r\n    };\r\n\r\n    private handleAccountDataUpdate = (ev: MatrixEvent): void => {\r\n        if (ev.getType() === \"m.push_rules\") {\r\n            this.updateNotificationState();\r\n        }\r\n    };\r\n\r\n    private updateNotificationState(): void {\r\n        const snapshot = this.snapshot();\r\n\r\n        const { color, symbol, count } = RoomNotifs.determineUnreadState(this.room);\r\n        const muted =\r\n            RoomNotifs.getRoomNotifsState(this.room.client, this.room.roomId) === RoomNotifs.RoomNotifState.Mute;\r\n        this._color = color;\r\n        this._symbol = symbol;\r\n        this._count = count;\r\n        this._muted = muted;\r\n\r\n        // finally, publish an update if needed\r\n        this.emitIfUpdated(snapshot);\r\n    }\r\n}\r\n"],"mappings":"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"}