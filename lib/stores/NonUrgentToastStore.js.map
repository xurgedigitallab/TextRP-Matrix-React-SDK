{"version":3,"file":"NonUrgentToastStore.js","names":["_events","_interopRequireDefault","require","_AsyncStore","NonUrgentToastStore","EventEmitter","constructor","arguments","_defineProperty2","default","Map","instance","_instance","components","Array","from","toasts","values","addToast","c","ref","Symbol","set","emit","UPDATE_EVENT","removeToast","delete","exports"],"sources":["../../src/stores/NonUrgentToastStore.ts"],"sourcesContent":["/*\r\nCopyright 2020 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport EventEmitter from \"events\";\r\n\r\nimport { ComponentClass } from \"../@types/common\";\r\nimport { UPDATE_EVENT } from \"./AsyncStore\";\r\n\r\nexport type ToastReference = symbol;\r\n\r\nexport default class NonUrgentToastStore extends EventEmitter {\r\n    private static _instance: NonUrgentToastStore;\r\n\r\n    private toasts = new Map<ToastReference, ComponentClass>();\r\n\r\n    public static get instance(): NonUrgentToastStore {\r\n        if (!NonUrgentToastStore._instance) {\r\n            NonUrgentToastStore._instance = new NonUrgentToastStore();\r\n        }\r\n        return NonUrgentToastStore._instance;\r\n    }\r\n\r\n    public get components(): ComponentClass[] {\r\n        return Array.from(this.toasts.values());\r\n    }\r\n\r\n    public addToast(c: ComponentClass): ToastReference {\r\n        const ref: ToastReference = Symbol();\r\n        this.toasts.set(ref, c);\r\n        this.emit(UPDATE_EVENT);\r\n        return ref;\r\n    }\r\n\r\n    public removeToast(ref: ToastReference): void {\r\n        this.toasts.delete(ref);\r\n        this.emit(UPDATE_EVENT);\r\n    }\r\n}\r\n"],"mappings":";;;;;;;;AAgBA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AAGA,IAAAC,WAAA,GAAAD,OAAA;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASe,MAAME,mBAAmB,SAASC,eAAY,CAAC;EAAAC,YAAA;IAAA,SAAAC,SAAA;IAAA,IAAAC,gBAAA,CAAAC,OAAA,kBAGzC,IAAIC,GAAG,CAAiC,CAAC;EAAA;EAE1D,WAAkBC,QAAQA,CAAA,EAAwB;IAC9C,IAAI,CAACP,mBAAmB,CAACQ,SAAS,EAAE;MAChCR,mBAAmB,CAACQ,SAAS,GAAG,IAAIR,mBAAmB,CAAC,CAAC;IAC7D;IACA,OAAOA,mBAAmB,CAACQ,SAAS;EACxC;EAEA,IAAWC,UAAUA,CAAA,EAAqB;IACtC,OAAOC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC;EAC3C;EAEOC,QAAQA,CAACC,CAAiB,EAAkB;IAC/C,MAAMC,GAAmB,GAAGC,MAAM,CAAC,CAAC;IACpC,IAAI,CAACL,MAAM,CAACM,GAAG,CAACF,GAAG,EAAED,CAAC,CAAC;IACvB,IAAI,CAACI,IAAI,CAACC,wBAAY,CAAC;IACvB,OAAOJ,GAAG;EACd;EAEOK,WAAWA,CAACL,GAAmB,EAAQ;IAC1C,IAAI,CAACJ,MAAM,CAACU,MAAM,CAACN,GAAG,CAAC;IACvB,IAAI,CAACG,IAAI,CAACC,wBAAY,CAAC;EAC3B;AACJ;AAACG,OAAA,CAAAlB,OAAA,GAAAL,mBAAA;AAAA,IAAAI,gBAAA,CAAAC,OAAA,EA3BoBL,mBAAmB"}