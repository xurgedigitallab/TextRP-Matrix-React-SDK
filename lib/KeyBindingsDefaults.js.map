{"version":3,"file":"KeyBindingsDefaults.js","names":["_Keyboard","require","_SettingsStore","_interopRequireDefault","_SdkConfig","_KeyboardShortcuts","_KeyboardShortcutUtils","getBindingsByCategory","category","CATEGORIES","settingNames","reduce","bindings","action","keyCombo","getKeyboardShortcuts","default","push","exports","messageComposerBindings","CategoryName","COMPOSER","SettingsStore","getValue","KeyBindingAction","SendMessage","key","Key","ENTER","ctrlOrCmdKey","NewLine","shiftKey","IS_MAC","altKey","autocompleteBindings","AUTOCOMPLETE","ForceCompleteAutocomplete","TAB","ctrlKey","CompleteAutocomplete","roomListBindings","ROOM_LIST","roomBindings","ROOM","SearchInRoom","F","navigationBindings","NAVIGATION","accessibilityBindings","ACCESSIBILITY","callBindings","CALLS","labsBindings","SdkConfig","get","LABS","defaultBindingsProvider","getMessageComposerBindings","getAutocompleteBindings","getRoomListBindings","getRoomBindings","getNavigationBindings","getAccessibilityBindings","getCallBindings","getLabsBindings"],"sources":["../src/KeyBindingsDefaults.ts"],"sourcesContent":["/*\r\nCopyright 2021 Clemens Zeidler\r\nCopyright 2022 Å imon Brandner <simon.bra.ag@gmail.com>\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { IS_MAC, Key } from \"./Keyboard\";\r\nimport SettingsStore from \"./settings/SettingsStore\";\r\nimport SdkConfig from \"./SdkConfig\";\r\nimport { IKeyBindingsProvider, KeyBinding } from \"./KeyBindingsManager\";\r\nimport { CATEGORIES, CategoryName, KeyBindingAction } from \"./accessibility/KeyboardShortcuts\";\r\nimport { getKeyboardShortcuts } from \"./accessibility/KeyboardShortcutUtils\";\r\n\r\nexport const getBindingsByCategory = (category: CategoryName): KeyBinding[] => {\r\n    return CATEGORIES[category].settingNames.reduce<KeyBinding[]>((bindings, action) => {\r\n        const keyCombo = getKeyboardShortcuts()[action]?.default;\r\n        if (keyCombo) {\r\n            bindings.push({ action, keyCombo });\r\n        }\r\n        return bindings;\r\n    }, []);\r\n};\r\n\r\nconst messageComposerBindings = (): KeyBinding[] => {\r\n    const bindings = getBindingsByCategory(CategoryName.COMPOSER);\r\n\r\n    if (SettingsStore.getValue(\"MessageComposerInput.ctrlEnterToSend\")) {\r\n        bindings.push({\r\n            action: KeyBindingAction.SendMessage,\r\n            keyCombo: {\r\n                key: Key.ENTER,\r\n                ctrlOrCmdKey: true,\r\n            },\r\n        });\r\n        bindings.push({\r\n            action: KeyBindingAction.NewLine,\r\n            keyCombo: {\r\n                key: Key.ENTER,\r\n            },\r\n        });\r\n        bindings.push({\r\n            action: KeyBindingAction.NewLine,\r\n            keyCombo: {\r\n                key: Key.ENTER,\r\n                shiftKey: true,\r\n            },\r\n        });\r\n    } else {\r\n        bindings.push({\r\n            action: KeyBindingAction.SendMessage,\r\n            keyCombo: {\r\n                key: Key.ENTER,\r\n            },\r\n        });\r\n        bindings.push({\r\n            action: KeyBindingAction.NewLine,\r\n            keyCombo: {\r\n                key: Key.ENTER,\r\n                shiftKey: true,\r\n            },\r\n        });\r\n        if (IS_MAC) {\r\n            bindings.push({\r\n                action: KeyBindingAction.NewLine,\r\n                keyCombo: {\r\n                    key: Key.ENTER,\r\n                    altKey: true,\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    return bindings;\r\n};\r\n\r\nconst autocompleteBindings = (): KeyBinding[] => {\r\n    const bindings = getBindingsByCategory(CategoryName.AUTOCOMPLETE);\r\n\r\n    bindings.push({\r\n        action: KeyBindingAction.ForceCompleteAutocomplete,\r\n        keyCombo: {\r\n            key: Key.TAB,\r\n        },\r\n    });\r\n    bindings.push({\r\n        action: KeyBindingAction.ForceCompleteAutocomplete,\r\n        keyCombo: {\r\n            key: Key.TAB,\r\n            ctrlKey: true,\r\n        },\r\n    });\r\n    bindings.push({\r\n        action: KeyBindingAction.CompleteAutocomplete,\r\n        keyCombo: {\r\n            key: Key.ENTER,\r\n        },\r\n    });\r\n    bindings.push({\r\n        action: KeyBindingAction.CompleteAutocomplete,\r\n        keyCombo: {\r\n            key: Key.ENTER,\r\n            ctrlKey: true,\r\n        },\r\n    });\r\n\r\n    return bindings;\r\n};\r\n\r\nconst roomListBindings = (): KeyBinding[] => {\r\n    return getBindingsByCategory(CategoryName.ROOM_LIST);\r\n};\r\n\r\nconst roomBindings = (): KeyBinding[] => {\r\n    const bindings = getBindingsByCategory(CategoryName.ROOM);\r\n\r\n    if (SettingsStore.getValue(\"ctrlFForSearch\")) {\r\n        bindings.push({\r\n            action: KeyBindingAction.SearchInRoom,\r\n            keyCombo: {\r\n                key: Key.F,\r\n                ctrlOrCmdKey: true,\r\n            },\r\n        });\r\n    }\r\n\r\n    return bindings;\r\n};\r\n\r\nconst navigationBindings = (): KeyBinding[] => {\r\n    return getBindingsByCategory(CategoryName.NAVIGATION);\r\n};\r\n\r\nconst accessibilityBindings = (): KeyBinding[] => {\r\n    return getBindingsByCategory(CategoryName.ACCESSIBILITY);\r\n};\r\n\r\nconst callBindings = (): KeyBinding[] => {\r\n    return getBindingsByCategory(CategoryName.CALLS);\r\n};\r\n\r\nconst labsBindings = (): KeyBinding[] => {\r\n    if (!SdkConfig.get(\"show_labs_settings\")) return [];\r\n\r\n    return getBindingsByCategory(CategoryName.LABS);\r\n};\r\n\r\nexport const defaultBindingsProvider: IKeyBindingsProvider = {\r\n    getMessageComposerBindings: messageComposerBindings,\r\n    getAutocompleteBindings: autocompleteBindings,\r\n    getRoomListBindings: roomListBindings,\r\n    getRoomBindings: roomBindings,\r\n    getNavigationBindings: navigationBindings,\r\n    getAccessibilityBindings: accessibilityBindings,\r\n    getCallBindings: callBindings,\r\n    getLabsBindings: labsBindings,\r\n};\r\n"],"mappings":"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"}