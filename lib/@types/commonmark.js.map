{"version":3,"file":"commonmark.js","names":[],"sources":["../../src/@types/commonmark.ts"],"sourcesContent":["/*\r\nCopyright 2022 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\nhttp://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport * as commonmark from \"commonmark\";\r\n\r\ndeclare module \"commonmark\" {\r\n    export type Attr = [key: string, value: string];\r\n\r\n    /* eslint-disable @typescript-eslint/naming-convention */\r\n    export interface HtmlRenderer {\r\n        // As far as @types/commonmark is concerned, these are not public, so add them\r\n        // https://github.com/commonmark/commonmark.js/blob/master/lib/render/html.js#L272-L296\r\n        text: (this: commonmark.HtmlRenderer, node: commonmark.Node) => void;\r\n        html_inline: (this: commonmark.HtmlRenderer, node: commonmark.Node) => void;\r\n        html_block: (this: commonmark.HtmlRenderer, node: commonmark.Node) => void;\r\n        // softbreak: () => void; // This one can't be correctly specified as it is wrongly defined in @types/commonmark\r\n        linebreak: (this: commonmark.HtmlRenderer) => void;\r\n        link: (this: commonmark.HtmlRenderer, node: commonmark.Node, entering: boolean) => void;\r\n        image: (this: commonmark.HtmlRenderer, node: commonmark.Node, entering: boolean) => void;\r\n        emph: (this: commonmark.HtmlRenderer, node: commonmark.Node, entering: boolean) => void;\r\n        strong: (this: commonmark.HtmlRenderer, node: commonmark.Node, entering: boolean) => void;\r\n        paragraph: (this: commonmark.HtmlRenderer, node: commonmark.Node, entering: boolean) => void;\r\n        heading: (this: commonmark.HtmlRenderer, node: commonmark.Node, entering: boolean) => void;\r\n        code: (this: commonmark.HtmlRenderer, node: commonmark.Node) => void;\r\n        code_block: (this: commonmark.HtmlRenderer, node: commonmark.Node) => void;\r\n        thematic_break: (this: commonmark.HtmlRenderer, node: commonmark.Node) => void;\r\n        block_quote: (this: commonmark.HtmlRenderer, node: commonmark.Node, entering: boolean) => void;\r\n        list: (this: commonmark.HtmlRenderer, node: commonmark.Node, entering: boolean) => void;\r\n        item: (this: commonmark.HtmlRenderer, node: commonmark.Node, entering: boolean) => void;\r\n        custom_inline: (this: commonmark.HtmlRenderer, node: commonmark.Node, entering: boolean) => void;\r\n        custom_block: (this: commonmark.HtmlRenderer, node: commonmark.Node, entering: boolean) => void;\r\n        esc: (s: string) => string;\r\n        out: (this: commonmark.HtmlRenderer, text: string) => void;\r\n        tag: (this: commonmark.HtmlRenderer, name: string, attrs?: Attr[], selfClosing?: boolean) => void;\r\n        attrs: (this: commonmark.HtmlRenderer, node: commonmark.Node) => Attr[];\r\n        // These are inherited from the base Renderer\r\n        lit: (this: commonmark.HtmlRenderer, text: string) => void;\r\n        cr: (this: commonmark.HtmlRenderer) => void;\r\n    }\r\n    /* eslint-enable @typescript-eslint/naming-convention */\r\n}\r\n"],"mappings":""}