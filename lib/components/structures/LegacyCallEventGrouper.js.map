{"version":3,"file":"LegacyCallEventGrouper.js","names":["_event","require","_call","_events","_LegacyCallHandler","_interopRequireWildcard","_MatrixClientPeg","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","LegacyCallEventGrouperEvent","exports","CONNECTING_STATES","CallState","Connecting","WaitLocalMedia","CreateOffer","CreateAnswer","SUPPORTED_STATES","Connected","Ringing","Ended","isCallEventType","eventType","startsWith","isCallEvent","event","getType","buildLegacyCallEventGroupers","callEventGroupers","events","newCallEventGroupers","Map","forEach","ev","callId","getContent","call_id","LegacyCallEventGrouper","add","EventEmitter","constructor","_defineProperty2","Set","newState","LegacyCallHandler","instance","isCallSilenced","emit","SilencedChanged","length","LengthChanged","roomId","answerCall","hangupOrReject","placeCall","isVoice","CallType","Voice","Video","silenced","unSilenceCall","silenceCall","includes","state","reject","hangup","invite","StateChanged","getCallById","setCallListeners","setState","addListener","LegacyCallHandlerEvent","CallsChanged","setCall","SilencedCallsChanged","onSilencedCallsChanged","find","EventType","CallInvite","CallHangup","CallReject","selectAnswer","CallSelectAnswer","undefined","offer","sdp","indexOf","hangupReason","reason","rejectParty","getSender","gotRejected","Boolean","duration","getDate","getTime","callWasMissed","some","sender","userId","MatrixClientPeg","getUserId","getRoomId","CallEvent","State","onLengthChanged"],"sources":["../../../src/components/structures/LegacyCallEventGrouper.ts"],"sourcesContent":["/*\r\nCopyright 2021 Å imon Brandner <simon.bra.ag@gmail.com>\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { EventType } from \"matrix-js-sdk/src/@types/event\";\r\nimport { MatrixEvent } from \"matrix-js-sdk/src/models/event\";\r\nimport { CallEvent, CallState, CallType, MatrixCall } from \"matrix-js-sdk/src/webrtc/call\";\r\nimport { EventEmitter } from \"events\";\r\n\r\nimport LegacyCallHandler, { LegacyCallHandlerEvent } from \"../../LegacyCallHandler\";\r\nimport { MatrixClientPeg } from \"../../MatrixClientPeg\";\r\n\r\nexport enum LegacyCallEventGrouperEvent {\r\n    StateChanged = \"state_changed\",\r\n    SilencedChanged = \"silenced_changed\",\r\n    LengthChanged = \"length_changed\",\r\n}\r\n\r\nconst CONNECTING_STATES = [\r\n    CallState.Connecting,\r\n    CallState.WaitLocalMedia,\r\n    CallState.CreateOffer,\r\n    CallState.CreateAnswer,\r\n];\r\n\r\nconst SUPPORTED_STATES = [CallState.Connected, CallState.Ringing, CallState.Ended];\r\n\r\nconst isCallEventType = (eventType: string): boolean =>\r\n    eventType.startsWith(\"m.call.\") || eventType.startsWith(\"org.matrix.call.\");\r\n\r\nexport const isCallEvent = (event: MatrixEvent): boolean => isCallEventType(event.getType());\r\n\r\nexport function buildLegacyCallEventGroupers(\r\n    callEventGroupers: Map<string, LegacyCallEventGrouper>,\r\n    events?: MatrixEvent[],\r\n): Map<string, LegacyCallEventGrouper> {\r\n    const newCallEventGroupers = new Map();\r\n    events?.forEach((ev) => {\r\n        if (!isCallEvent(ev)) {\r\n            return;\r\n        }\r\n\r\n        const callId = ev.getContent().call_id;\r\n        if (!newCallEventGroupers.has(callId)) {\r\n            if (callEventGroupers.has(callId)) {\r\n                // reuse the LegacyCallEventGrouper object where possible\r\n                newCallEventGroupers.set(callId, callEventGroupers.get(callId));\r\n            } else {\r\n                newCallEventGroupers.set(callId, new LegacyCallEventGrouper());\r\n            }\r\n        }\r\n        newCallEventGroupers.get(callId).add(ev);\r\n    });\r\n    return newCallEventGroupers;\r\n}\r\n\r\nexport default class LegacyCallEventGrouper extends EventEmitter {\r\n    private events: Set<MatrixEvent> = new Set<MatrixEvent>();\r\n    private call: MatrixCall | null = null;\r\n    public state?: CallState;\r\n\r\n    public constructor() {\r\n        super();\r\n\r\n        LegacyCallHandler.instance.addListener(LegacyCallHandlerEvent.CallsChanged, this.setCall);\r\n        LegacyCallHandler.instance.addListener(\r\n            LegacyCallHandlerEvent.SilencedCallsChanged,\r\n            this.onSilencedCallsChanged,\r\n        );\r\n    }\r\n\r\n    private get invite(): MatrixEvent | undefined {\r\n        return [...this.events].find((event) => event.getType() === EventType.CallInvite);\r\n    }\r\n\r\n    private get hangup(): MatrixEvent | undefined {\r\n        return [...this.events].find((event) => event.getType() === EventType.CallHangup);\r\n    }\r\n\r\n    private get reject(): MatrixEvent | undefined {\r\n        return [...this.events].find((event) => event.getType() === EventType.CallReject);\r\n    }\r\n\r\n    private get selectAnswer(): MatrixEvent | undefined {\r\n        return [...this.events].find((event) => event.getType() === EventType.CallSelectAnswer);\r\n    }\r\n\r\n    public get isVoice(): boolean | undefined {\r\n        const invite = this.invite;\r\n        if (!invite) return undefined;\r\n\r\n        // FIXME: Find a better way to determine this from the event?\r\n        if (invite.getContent()?.offer?.sdp?.indexOf(\"m=video\") !== -1) return false;\r\n        return true;\r\n    }\r\n\r\n    public get hangupReason(): string | null {\r\n        return this.call?.hangupReason ?? this.hangup?.getContent()?.reason ?? null;\r\n    }\r\n\r\n    public get rejectParty(): string | undefined {\r\n        return this.reject?.getSender();\r\n    }\r\n\r\n    public get gotRejected(): boolean {\r\n        return Boolean(this.reject);\r\n    }\r\n\r\n    public get duration(): number | null {\r\n        if (!this.hangup?.getDate() || !this.selectAnswer?.getDate()) return null;\r\n        return this.hangup.getDate()!.getTime() - this.selectAnswer.getDate()!.getTime();\r\n    }\r\n\r\n    /**\r\n     * Returns true if there are only events from the other side - we missed the call\r\n     */\r\n    public get callWasMissed(): boolean {\r\n        return (\r\n            this.state === CallState.Ended &&\r\n            ![...this.events].some((event) => event.sender?.userId === MatrixClientPeg.get().getUserId())\r\n        );\r\n    }\r\n\r\n    private get callId(): string | undefined {\r\n        return [...this.events][0]?.getContent()?.call_id;\r\n    }\r\n\r\n    private get roomId(): string | undefined {\r\n        return [...this.events][0]?.getRoomId();\r\n    }\r\n\r\n    private onSilencedCallsChanged = (): void => {\r\n        const newState = LegacyCallHandler.instance.isCallSilenced(this.callId);\r\n        this.emit(LegacyCallEventGrouperEvent.SilencedChanged, newState);\r\n    };\r\n\r\n    private onLengthChanged = (length: number): void => {\r\n        this.emit(LegacyCallEventGrouperEvent.LengthChanged, length);\r\n    };\r\n\r\n    public answerCall = (): void => {\r\n        const roomId = this.roomId;\r\n        if (!roomId) return;\r\n        LegacyCallHandler.instance.answerCall(roomId);\r\n    };\r\n\r\n    public rejectCall = (): void => {\r\n        const roomId = this.roomId;\r\n        if (!roomId) return;\r\n        LegacyCallHandler.instance.hangupOrReject(roomId, true);\r\n    };\r\n\r\n    public callBack = (): void => {\r\n        const roomId = this.roomId;\r\n        if (!roomId) return;\r\n        LegacyCallHandler.instance.placeCall(roomId, this.isVoice ? CallType.Voice : CallType.Video);\r\n    };\r\n\r\n    public toggleSilenced = (): void => {\r\n        const silenced = LegacyCallHandler.instance.isCallSilenced(this.callId);\r\n        silenced\r\n            ? LegacyCallHandler.instance.unSilenceCall(this.callId)\r\n            : LegacyCallHandler.instance.silenceCall(this.callId);\r\n    };\r\n\r\n    private setCallListeners(): void {\r\n        if (!this.call) return;\r\n        this.call.addListener(CallEvent.State, this.setState);\r\n        this.call.addListener(CallEvent.LengthChanged, this.onLengthChanged);\r\n    }\r\n\r\n    private setState = (): void => {\r\n        if (this.call && CONNECTING_STATES.includes(this.call.state)) {\r\n            this.state = CallState.Connecting;\r\n        } else if (this.call && SUPPORTED_STATES.includes(this.call.state)) {\r\n            this.state = this.call.state;\r\n        } else {\r\n            if (this.reject) {\r\n                this.state = CallState.Ended;\r\n            } else if (this.hangup) {\r\n                this.state = CallState.Ended;\r\n            } else if (this.invite && this.call) {\r\n                this.state = CallState.Connecting;\r\n            }\r\n        }\r\n        this.emit(LegacyCallEventGrouperEvent.StateChanged, this.state);\r\n    };\r\n\r\n    private setCall = (): void => {\r\n        const callId = this.callId;\r\n        if (!callId || this.call) return;\r\n\r\n        this.call = LegacyCallHandler.instance.getCallById(callId);\r\n        this.setCallListeners();\r\n        this.setState();\r\n    };\r\n\r\n    public add(event: MatrixEvent): void {\r\n        if (this.events.has(event)) return; // nothing to do\r\n        this.events.add(event);\r\n        this.setCall();\r\n    }\r\n}\r\n"],"mappings":"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"}