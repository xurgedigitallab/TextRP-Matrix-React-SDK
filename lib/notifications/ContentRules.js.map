{"version":3,"file":"ContentRules.js","names":["_PushRules","require","_PushRuleVectorState","ContentRules","parseContentRules","rulesets","contentRules","categoriseContentRules","loud","length","vectorState","VectorState","Loud","rules","externalRules","loud_but_disabled","on","on_but_disabled","other","Off","On","kind","global","i","Object","keys","r","rule_id","PushRuleKind","ContentSpecific","PushRuleVectorState","contentRuleVectorStateKind","enabled","push","exports"],"sources":["../../src/notifications/ContentRules.ts"],"sourcesContent":["/*\r\nCopyright 2016 - 2021 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { IAnnotatedPushRule, IPushRules, PushRuleKind, PushRuleSet } from \"matrix-js-sdk/src/@types/PushRules\";\r\n\r\nimport { PushRuleVectorState, VectorState } from \"./PushRuleVectorState\";\r\n\r\nexport interface IContentRules {\r\n    vectorState: VectorState;\r\n    rules: IAnnotatedPushRule[];\r\n    externalRules: IAnnotatedPushRule[];\r\n}\r\n\r\nexport class ContentRules {\r\n    /**\r\n     * Extract the keyword rules from a list of rules, and parse them\r\n     * into a form which is useful for Vector's UI.\r\n     *\r\n     * Returns an object containing:\r\n     *   rules: the primary list of keyword rules\r\n     *   vectorState: a PushRuleVectorState indicating whether those rules are\r\n     *      OFF/ON/LOUD\r\n     *   externalRules: a list of other keyword rules, with states other than\r\n     *      vectorState\r\n     */\r\n    public static parseContentRules(rulesets: IPushRules): IContentRules {\r\n        // first categorise the keyword rules in terms of their actions\r\n        const contentRules = ContentRules.categoriseContentRules(rulesets);\r\n\r\n        // Decide which content rules to display in Vector UI.\r\n        // Vector displays a single global rule for a list of keywords\r\n        // whereas Matrix has a push rule per keyword.\r\n        // Vector can set the unique rule in ON, LOUD or OFF state.\r\n        // Matrix has enabled/disabled plus a combination of (highlight, sound) tweaks.\r\n\r\n        // The code below determines which set of user's content push rules can be\r\n        // displayed by the vector UI.\r\n        // Push rules that does not fit, ie defined by another Matrix client, ends\r\n        // in externalRules.\r\n        // There is priority in the determination of which set will be the displayed one.\r\n        // The set with rules that have LOUD tweaks is the first choice. Then, the ones\r\n        // with ON tweaks (no tweaks).\r\n\r\n        if (contentRules.loud.length) {\r\n            return {\r\n                vectorState: VectorState.Loud,\r\n                rules: contentRules.loud,\r\n                externalRules: [\r\n                    ...contentRules.loud_but_disabled,\r\n                    ...contentRules.on,\r\n                    ...contentRules.on_but_disabled,\r\n                    ...contentRules.other,\r\n                ],\r\n            };\r\n        } else if (contentRules.loud_but_disabled.length) {\r\n            return {\r\n                vectorState: VectorState.Off,\r\n                rules: contentRules.loud_but_disabled,\r\n                externalRules: [...contentRules.on, ...contentRules.on_but_disabled, ...contentRules.other],\r\n            };\r\n        } else if (contentRules.on.length) {\r\n            return {\r\n                vectorState: VectorState.On,\r\n                rules: contentRules.on,\r\n                externalRules: [...contentRules.on_but_disabled, ...contentRules.other],\r\n            };\r\n        } else if (contentRules.on_but_disabled.length) {\r\n            return {\r\n                vectorState: VectorState.Off,\r\n                rules: contentRules.on_but_disabled,\r\n                externalRules: contentRules.other,\r\n            };\r\n        } else {\r\n            return {\r\n                vectorState: VectorState.On,\r\n                rules: [],\r\n                externalRules: contentRules.other,\r\n            };\r\n        }\r\n    }\r\n\r\n    private static categoriseContentRules(\r\n        rulesets: IPushRules,\r\n    ): Record<\"on\" | \"on_but_disabled\" | \"loud\" | \"loud_but_disabled\" | \"other\", IAnnotatedPushRule[]> {\r\n        const contentRules: Record<\r\n            \"on\" | \"on_but_disabled\" | \"loud\" | \"loud_but_disabled\" | \"other\",\r\n            IAnnotatedPushRule[]\r\n        > = {\r\n            on: [],\r\n            on_but_disabled: [],\r\n            loud: [],\r\n            loud_but_disabled: [],\r\n            other: [],\r\n        };\r\n\r\n        for (const kind in rulesets.global) {\r\n            for (let i = 0; i < Object.keys(rulesets.global[kind as keyof PushRuleSet]!).length; ++i) {\r\n                const r = rulesets.global[kind as keyof PushRuleSet]![i] as IAnnotatedPushRule;\r\n\r\n                // check it's not a default rule\r\n                if (r.rule_id[0] === \".\" || kind !== PushRuleKind.ContentSpecific) {\r\n                    continue;\r\n                }\r\n\r\n                // this is needed as we are flattening an object of arrays into a single array\r\n                r.kind = kind;\r\n\r\n                switch (PushRuleVectorState.contentRuleVectorStateKind(r)) {\r\n                    case VectorState.On:\r\n                        if (r.enabled) {\r\n                            contentRules.on.push(r);\r\n                        } else {\r\n                            contentRules.on_but_disabled.push(r);\r\n                        }\r\n                        break;\r\n                    case VectorState.Loud:\r\n                        if (r.enabled) {\r\n                            contentRules.loud.push(r);\r\n                        } else {\r\n                            contentRules.loud_but_disabled.push(r);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        contentRules.other.push(r);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        return contentRules;\r\n    }\r\n}\r\n"],"mappings":"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"}