{"version":3,"file":"parseUserAgent.js","names":["_uaParserJs","_interopRequireDefault","require","DeviceType","exports","IOS_KEYWORD","BROWSER_KEYWORD","getDeviceType","userAgent","device","browser","operatingSystem","name","Desktop","Web","type","includes","indexOf","Mobile","Unknown","checkForCustomValues","mightHaveDevice","deviceInfoSegments","substring","split","customDeviceModel","undefined","customDeviceOS","concatenateNameAndVersion","version","filter","Boolean","join","parseUserAgent","deviceType","parser","UAParser","getBrowser","getDevice","getOS","shouldIgnoreOSVersion","deviceOperatingSystem","deviceModel","vendor","model","client"],"sources":["../../../src/utils/device/parseUserAgent.ts"],"sourcesContent":["/*\r\nCopyright 2022 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport UAParser from \"ua-parser-js\";\r\n\r\nexport enum DeviceType {\r\n    Desktop = \"Desktop\",\r\n    Mobile = \"Mobile\",\r\n    Web = \"Web\",\r\n    Unknown = \"Unknown\",\r\n}\r\nexport type ExtendedDeviceInformation = {\r\n    deviceType: DeviceType;\r\n    // eg Google Pixel 6\r\n    deviceModel?: string;\r\n    // eg Android 11\r\n    deviceOperatingSystem?: string;\r\n    // eg Firefox 1.1.0\r\n    client?: string;\r\n};\r\n\r\n// Element/1.8.21 (iPhone XS Max; iOS 15.2; Scale/3.00)\r\nconst IOS_KEYWORD = \"; iOS \";\r\nconst BROWSER_KEYWORD = \"Mozilla/\";\r\n\r\nconst getDeviceType = (\r\n    userAgent: string,\r\n    device: UAParser.IDevice,\r\n    browser: UAParser.IBrowser,\r\n    operatingSystem: UAParser.IOS,\r\n): DeviceType => {\r\n    if (browser.name === \"Electron\") {\r\n        return DeviceType.Desktop;\r\n    }\r\n    if (!!browser.name) {\r\n        return DeviceType.Web;\r\n    }\r\n    if (device.type === \"mobile\" || operatingSystem.name?.includes(\"Android\") || userAgent.indexOf(IOS_KEYWORD) > -1) {\r\n        return DeviceType.Mobile;\r\n    }\r\n    return DeviceType.Unknown;\r\n};\r\n\r\ninterface CustomValues {\r\n    customDeviceModel?: string;\r\n    customDeviceOS?: string;\r\n}\r\n/**\r\n * Some mobile model and OS strings are not recognised\r\n * by the UA parsing library\r\n * check they exist by hand\r\n */\r\nconst checkForCustomValues = (userAgent: string): CustomValues => {\r\n    if (userAgent.includes(BROWSER_KEYWORD)) {\r\n        return {};\r\n    }\r\n\r\n    const mightHaveDevice = userAgent.includes(\"(\");\r\n    if (!mightHaveDevice) {\r\n        return {};\r\n    }\r\n    const deviceInfoSegments = userAgent.substring(userAgent.indexOf(\"(\") + 1).split(\"; \");\r\n    const customDeviceModel = deviceInfoSegments[0] || undefined;\r\n    const customDeviceOS = deviceInfoSegments[1] || undefined;\r\n    return { customDeviceModel, customDeviceOS };\r\n};\r\n\r\nconst concatenateNameAndVersion = (name?: string, version?: string): string | undefined =>\r\n    name && [name, version].filter(Boolean).join(\" \");\r\n\r\nexport const parseUserAgent = (userAgent?: string): ExtendedDeviceInformation => {\r\n    if (!userAgent) {\r\n        return {\r\n            deviceType: DeviceType.Unknown,\r\n        };\r\n    }\r\n\r\n    const parser = new UAParser(userAgent);\r\n\r\n    const browser = parser.getBrowser();\r\n    const device = parser.getDevice();\r\n    const operatingSystem = parser.getOS();\r\n\r\n    const deviceType = getDeviceType(userAgent, device, browser, operatingSystem);\r\n\r\n    // OSX versions are frozen at 10.15.17 in UA strings https://chromestatus.com/feature/5452592194781184\r\n    // ignore OS version in browser based sessions\r\n    const shouldIgnoreOSVersion = deviceType === DeviceType.Web || deviceType === DeviceType.Desktop;\r\n    const deviceOperatingSystem = concatenateNameAndVersion(\r\n        operatingSystem.name,\r\n        shouldIgnoreOSVersion ? undefined : operatingSystem.version,\r\n    );\r\n    const deviceModel = concatenateNameAndVersion(device.vendor, device.model);\r\n    const client = concatenateNameAndVersion(browser.name, browser.version);\r\n\r\n    // only try to parse custom model and OS when device type is known\r\n    const { customDeviceModel, customDeviceOS } =\r\n        deviceType !== DeviceType.Unknown ? checkForCustomValues(userAgent) : ({} as CustomValues);\r\n\r\n    return {\r\n        deviceType,\r\n        deviceModel: deviceModel || customDeviceModel,\r\n        deviceOperatingSystem: deviceOperatingSystem || customDeviceOS,\r\n        client,\r\n    };\r\n};\r\n"],"mappings":"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"}