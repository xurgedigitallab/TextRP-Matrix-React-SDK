{"version":3,"file":"clientInformation.js","names":["formatUrl","window","electron","undefined","url","URL","location","href","host","pathname","replace","join","clientInformationEventPrefix","getClientInformationEventType","deviceId","exports","recordClientInformation","matrixClient","sdkConfig","platform","getDeviceId","brand","version","getAppVersion","type","setAccountData","name","pruneClientInformation","validDeviceIds","Array","from","store","accountData","values","forEach","event","getType","startsWith","split","includes","deleteAccountData","removeClientInformation","clientInformation","getDeviceClientInformation","sanitizeContentString","value","getAccountData","getContent"],"sources":["../../../src/utils/device/clientInformation.ts"],"sourcesContent":["/*\r\nCopyright 2022 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { MatrixClient } from \"matrix-js-sdk/src/client\";\r\n\r\nimport BasePlatform from \"../../BasePlatform\";\r\nimport { IConfigOptions } from \"../../IConfigOptions\";\r\nimport { DeepReadonly } from \"../../@types/common\";\r\n\r\nexport type DeviceClientInformation = {\r\n    name?: string;\r\n    version?: string;\r\n    url?: string;\r\n};\r\n\r\nconst formatUrl = (): string | undefined => {\r\n    // don't record url for electron clients\r\n    if (window.electron) {\r\n        return undefined;\r\n    }\r\n\r\n    // strip query-string and fragment from uri\r\n    const url = new URL(window.location.href);\r\n\r\n    return [\r\n        url.host,\r\n        url.pathname.replace(/\\/$/, \"\"), // Remove trailing slash if present\r\n    ].join(\"\");\r\n};\r\n\r\nconst clientInformationEventPrefix = \"io.element.matrix_client_information.\";\r\nexport const getClientInformationEventType = (deviceId: string): string => `${clientInformationEventPrefix}${deviceId}`;\r\n\r\n/**\r\n * Record extra client information for the current device\r\n * https://github.com/vector-im/element-meta/blob/develop/spec/matrix_client_information.md\r\n */\r\nexport const recordClientInformation = async (\r\n    matrixClient: MatrixClient,\r\n    sdkConfig: DeepReadonly<IConfigOptions>,\r\n    platform?: BasePlatform,\r\n): Promise<void> => {\r\n    const deviceId = matrixClient.getDeviceId()!;\r\n    const { brand } = sdkConfig;\r\n    const version = await platform?.getAppVersion();\r\n    const type = getClientInformationEventType(deviceId);\r\n    const url = formatUrl();\r\n\r\n    await matrixClient.setAccountData(type, {\r\n        name: brand,\r\n        version,\r\n        url,\r\n    });\r\n};\r\n\r\n/**\r\n * Remove client information events for devices that no longer exist\r\n * @param validDeviceIds - ids of current devices,\r\n *                      client information for devices NOT in this list will be removed\r\n */\r\nexport const pruneClientInformation = (validDeviceIds: string[], matrixClient: MatrixClient): void => {\r\n    Array.from(matrixClient.store.accountData.values()).forEach((event) => {\r\n        if (!event.getType().startsWith(clientInformationEventPrefix)) {\r\n            return;\r\n        }\r\n        const [, deviceId] = event.getType().split(clientInformationEventPrefix);\r\n        if (deviceId && !validDeviceIds.includes(deviceId)) {\r\n            matrixClient.deleteAccountData(event.getType());\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Remove extra client information for current device\r\n */\r\nexport const removeClientInformation = async (matrixClient: MatrixClient): Promise<void> => {\r\n    const deviceId = matrixClient.getDeviceId()!;\r\n    const type = getClientInformationEventType(deviceId);\r\n    const clientInformation = getDeviceClientInformation(matrixClient, deviceId);\r\n\r\n    // if a non-empty client info event exists, remove it\r\n    if (clientInformation.name || clientInformation.version || clientInformation.url) {\r\n        await matrixClient.deleteAccountData(type);\r\n    }\r\n};\r\n\r\nconst sanitizeContentString = (value: unknown): string | undefined =>\r\n    value && typeof value === \"string\" ? value : undefined;\r\n\r\nexport const getDeviceClientInformation = (matrixClient: MatrixClient, deviceId: string): DeviceClientInformation => {\r\n    const event = matrixClient.getAccountData(getClientInformationEventType(deviceId));\r\n\r\n    if (!event) {\r\n        return {};\r\n    }\r\n\r\n    const { name, version, url } = event.getContent();\r\n\r\n    return {\r\n        name: sanitizeContentString(name),\r\n        version: sanitizeContentString(version),\r\n        url: sanitizeContentString(url),\r\n    };\r\n};\r\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAcA,MAAMA,SAAS,GAAGA,CAAA,KAA0B;EACxC;EACA,IAAIC,MAAM,CAACC,QAAQ,EAAE;IACjB,OAAOC,SAAS;EACpB;;EAEA;EACA,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAACJ,MAAM,CAACK,QAAQ,CAACC,IAAI,CAAC;EAEzC,OAAO,CACHH,GAAG,CAACI,IAAI,EACRJ,GAAG,CAACK,QAAQ,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAE;EAAA,CACpC,CAACC,IAAI,CAAC,EAAE,CAAC;AACd,CAAC;AAED,MAAMC,4BAA4B,GAAG,uCAAuC;AACrE,MAAMC,6BAA6B,GAAIC,QAAgB,IAAc,GAAEF,4BAA6B,GAAEE,QAAS,EAAC;;AAEvH;AACA;AACA;AACA;AAHAC,OAAA,CAAAF,6BAAA,GAAAA,6BAAA;AAIO,MAAMG,uBAAuB,GAAG,MAAAA,CACnCC,YAA0B,EAC1BC,SAAuC,EACvCC,QAAuB,KACP;EAChB,MAAML,QAAQ,GAAGG,YAAY,CAACG,WAAW,CAAC,CAAE;EAC5C,MAAM;IAAEC;EAAM,CAAC,GAAGH,SAAS;EAC3B,MAAMI,OAAO,GAAG,MAAMH,QAAQ,EAAEI,aAAa,CAAC,CAAC;EAC/C,MAAMC,IAAI,GAAGX,6BAA6B,CAACC,QAAQ,CAAC;EACpD,MAAMV,GAAG,GAAGJ,SAAS,CAAC,CAAC;EAEvB,MAAMiB,YAAY,CAACQ,cAAc,CAACD,IAAI,EAAE;IACpCE,IAAI,EAAEL,KAAK;IACXC,OAAO;IACPlB;EACJ,CAAC,CAAC;AACN,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJAW,OAAA,CAAAC,uBAAA,GAAAA,uBAAA;AAKO,MAAMW,sBAAsB,GAAGA,CAACC,cAAwB,EAAEX,YAA0B,KAAW;EAClGY,KAAK,CAACC,IAAI,CAACb,YAAY,CAACc,KAAK,CAACC,WAAW,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,OAAO,CAAEC,KAAK,IAAK;IACnE,IAAI,CAACA,KAAK,CAACC,OAAO,CAAC,CAAC,CAACC,UAAU,CAACzB,4BAA4B,CAAC,EAAE;MAC3D;IACJ;IACA,MAAM,GAAGE,QAAQ,CAAC,GAAGqB,KAAK,CAACC,OAAO,CAAC,CAAC,CAACE,KAAK,CAAC1B,4BAA4B,CAAC;IACxE,IAAIE,QAAQ,IAAI,CAACc,cAAc,CAACW,QAAQ,CAACzB,QAAQ,CAAC,EAAE;MAChDG,YAAY,CAACuB,iBAAiB,CAACL,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC;IACnD;EACJ,CAAC,CAAC;AACN,CAAC;;AAED;AACA;AACA;AAFArB,OAAA,CAAAY,sBAAA,GAAAA,sBAAA;AAGO,MAAMc,uBAAuB,GAAG,MAAOxB,YAA0B,IAAoB;EACxF,MAAMH,QAAQ,GAAGG,YAAY,CAACG,WAAW,CAAC,CAAE;EAC5C,MAAMI,IAAI,GAAGX,6BAA6B,CAACC,QAAQ,CAAC;EACpD,MAAM4B,iBAAiB,GAAGC,0BAA0B,CAAC1B,YAAY,EAAEH,QAAQ,CAAC;;EAE5E;EACA,IAAI4B,iBAAiB,CAAChB,IAAI,IAAIgB,iBAAiB,CAACpB,OAAO,IAAIoB,iBAAiB,CAACtC,GAAG,EAAE;IAC9E,MAAMa,YAAY,CAACuB,iBAAiB,CAAChB,IAAI,CAAC;EAC9C;AACJ,CAAC;AAACT,OAAA,CAAA0B,uBAAA,GAAAA,uBAAA;AAEF,MAAMG,qBAAqB,GAAIC,KAAc,IACzCA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG1C,SAAS;AAEnD,MAAMwC,0BAA0B,GAAGA,CAAC1B,YAA0B,EAAEH,QAAgB,KAA8B;EACjH,MAAMqB,KAAK,GAAGlB,YAAY,CAAC6B,cAAc,CAACjC,6BAA6B,CAACC,QAAQ,CAAC,CAAC;EAElF,IAAI,CAACqB,KAAK,EAAE;IACR,OAAO,CAAC,CAAC;EACb;EAEA,MAAM;IAAET,IAAI;IAAEJ,OAAO;IAAElB;EAAI,CAAC,GAAG+B,KAAK,CAACY,UAAU,CAAC,CAAC;EAEjD,OAAO;IACHrB,IAAI,EAAEkB,qBAAqB,CAAClB,IAAI,CAAC;IACjCJ,OAAO,EAAEsB,qBAAqB,CAACtB,OAAO,CAAC;IACvClB,GAAG,EAAEwC,qBAAqB,CAACxC,GAAG;EAClC,CAAC;AACL,CAAC;AAACW,OAAA,CAAA4B,0BAAA,GAAAA,0BAAA"}