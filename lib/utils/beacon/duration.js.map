{"version":3,"file":"duration.js","names":["msUntilExpiry","startTimestamp","durationMs","Math","max","Date","now","exports","getBeaconMsUntilExpiry","beaconInfo","timestamp","timeout","getBeaconExpiryTimestamp","beacon","sortBeaconsByLatestExpiry","left","right","sortBeaconsByLatestCreation","isBeaconWaitingToStart","isLive"],"sources":["../../../src/utils/beacon/duration.ts"],"sourcesContent":["/*\r\nCopyright 2022 The Matrix.org Foundation C.I.C\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { BeaconInfoState } from \"matrix-js-sdk/src/content-helpers\";\r\nimport { Beacon } from \"matrix-js-sdk/src/matrix\";\r\n\r\n/**\r\n * Get ms until expiry\r\n * Returns 0 when expiry is already passed\r\n * @param startTimestamp\r\n * @param durationMs\r\n * @returns remainingMs\r\n */\r\nexport const msUntilExpiry = (startTimestamp: number, durationMs: number): number =>\r\n    Math.max(0, startTimestamp + durationMs - Date.now());\r\n\r\nexport const getBeaconMsUntilExpiry = (beaconInfo: BeaconInfoState): number =>\r\n    msUntilExpiry(beaconInfo.timestamp || 0, beaconInfo.timeout);\r\n\r\nexport const getBeaconExpiryTimestamp = (beacon: Beacon): number =>\r\n    (beacon.beaconInfo.timestamp || 0) + beacon.beaconInfo.timeout;\r\n\r\nexport const sortBeaconsByLatestExpiry = (left: Beacon, right: Beacon): number =>\r\n    getBeaconExpiryTimestamp(right) - getBeaconExpiryTimestamp(left);\r\n\r\n// aka sort by timestamp descending\r\nexport const sortBeaconsByLatestCreation = (left: Beacon, right: Beacon): number =>\r\n    (right.beaconInfo.timestamp || 0) - (left.beaconInfo.timestamp || 0);\r\n\r\n// a beacon's starting timestamp can be in the future\r\n// (either from small deviations in system clock times, or on purpose from another client)\r\n// a beacon is only live between its start timestamp and expiry\r\n// detect when a beacon is waiting to become live\r\nexport const isBeaconWaitingToStart = (beacon: Beacon): boolean =>\r\n    !beacon.isLive &&\r\n    !!beacon.beaconInfo.timestamp &&\r\n    beacon.beaconInfo.timestamp > Date.now() &&\r\n    getBeaconExpiryTimestamp(beacon) > Date.now();\r\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,aAAa,GAAGA,CAACC,cAAsB,EAAEC,UAAkB,KACpEC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEH,cAAc,GAAGC,UAAU,GAAGG,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;AAACC,OAAA,CAAAP,aAAA,GAAAA,aAAA;AAEnD,MAAMQ,sBAAsB,GAAIC,UAA2B,IAC9DT,aAAa,CAACS,UAAU,CAACC,SAAS,IAAI,CAAC,EAAED,UAAU,CAACE,OAAO,CAAC;AAACJ,OAAA,CAAAC,sBAAA,GAAAA,sBAAA;AAE1D,MAAMI,wBAAwB,GAAIC,MAAc,IACnD,CAACA,MAAM,CAACJ,UAAU,CAACC,SAAS,IAAI,CAAC,IAAIG,MAAM,CAACJ,UAAU,CAACE,OAAO;AAACJ,OAAA,CAAAK,wBAAA,GAAAA,wBAAA;AAE5D,MAAME,yBAAyB,GAAGA,CAACC,IAAY,EAAEC,KAAa,KACjEJ,wBAAwB,CAACI,KAAK,CAAC,GAAGJ,wBAAwB,CAACG,IAAI,CAAC;;AAEpE;AAAAR,OAAA,CAAAO,yBAAA,GAAAA,yBAAA;AACO,MAAMG,2BAA2B,GAAGA,CAACF,IAAY,EAAEC,KAAa,KACnE,CAACA,KAAK,CAACP,UAAU,CAACC,SAAS,IAAI,CAAC,KAAKK,IAAI,CAACN,UAAU,CAACC,SAAS,IAAI,CAAC,CAAC;;AAExE;AACA;AACA;AACA;AAAAH,OAAA,CAAAU,2BAAA,GAAAA,2BAAA;AACO,MAAMC,sBAAsB,GAAIL,MAAc,IACjD,CAACA,MAAM,CAACM,MAAM,IACd,CAAC,CAACN,MAAM,CAACJ,UAAU,CAACC,SAAS,IAC7BG,MAAM,CAACJ,UAAU,CAACC,SAAS,GAAGL,IAAI,CAACC,GAAG,CAAC,CAAC,IACxCM,wBAAwB,CAACC,MAAM,CAAC,GAAGR,IAAI,CAACC,GAAG,CAAC,CAAC;AAACC,OAAA,CAAAW,sBAAA,GAAAA,sBAAA"}