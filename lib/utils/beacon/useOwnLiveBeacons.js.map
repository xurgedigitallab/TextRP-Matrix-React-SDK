{"version":3,"file":"useOwnLiveBeacons.js","names":["_react","require","_useEventEmitter","_OwnBeaconStore","_duration","useOwnLiveBeacons","liveBeaconIds","stoppingInProgress","setStoppingInProgress","useState","hasLocationPublishError","useEventEmitterState","OwnBeaconStore","instance","OwnBeaconStoreEvent","LocationPublishError","some","beaconHasLocationPublishError","hasStopSharingError","BeaconUpdateError","id","beaconUpdateErrors","has","useEffect","beacon","map","beaconId","getBeaconById","sort","sortBeaconsByLatestExpiry","shift","onStopSharing","Promise","all","stopBeacon","error","onResetLocationPublishError","forEach","resetLocationPublishError","exports"],"sources":["../../../src/utils/beacon/useOwnLiveBeacons.ts"],"sourcesContent":["/*\r\nCopyright 2022 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { Beacon, BeaconIdentifier } from \"matrix-js-sdk/src/matrix\";\r\n\r\nimport { useEventEmitterState } from \"../../hooks/useEventEmitter\";\r\nimport { OwnBeaconStore, OwnBeaconStoreEvent } from \"../../stores/OwnBeaconStore\";\r\nimport { sortBeaconsByLatestExpiry } from \"./duration\";\r\n\r\ntype LiveBeaconsState = {\r\n    beacon?: Beacon;\r\n    onStopSharing: () => void;\r\n    onResetLocationPublishError: () => void;\r\n    stoppingInProgress: boolean;\r\n    hasStopSharingError: boolean;\r\n    hasLocationPublishError: boolean;\r\n};\r\n\r\n/**\r\n * Monitor the current users own beacons\r\n * While current implementation only allows one live beacon per user per room\r\n * In future it will be possible to have multiple live beacons in one room\r\n * Select the latest expiry to display,\r\n * and kill all beacons on stop sharing\r\n */\r\nexport const useOwnLiveBeacons = (liveBeaconIds: BeaconIdentifier[]): LiveBeaconsState => {\r\n    const [stoppingInProgress, setStoppingInProgress] = useState(false);\r\n\r\n    const hasLocationPublishError = useEventEmitterState(\r\n        OwnBeaconStore.instance,\r\n        OwnBeaconStoreEvent.LocationPublishError,\r\n        () => liveBeaconIds.some(OwnBeaconStore.instance.beaconHasLocationPublishError),\r\n    );\r\n\r\n    const hasStopSharingError = useEventEmitterState(\r\n        OwnBeaconStore.instance,\r\n        OwnBeaconStoreEvent.BeaconUpdateError,\r\n        () => liveBeaconIds.some((id) => OwnBeaconStore.instance.beaconUpdateErrors.has(id)),\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (hasStopSharingError) {\r\n            setStoppingInProgress(false);\r\n        }\r\n    }, [hasStopSharingError]);\r\n\r\n    // reset stopping in progress on change in live ids\r\n    useEffect(() => {\r\n        setStoppingInProgress(false);\r\n    }, [liveBeaconIds]);\r\n\r\n    // select the beacon with latest expiry to display expiry time\r\n    const beacon = liveBeaconIds\r\n        .map((beaconId) => OwnBeaconStore.instance.getBeaconById(beaconId)!)\r\n        .sort(sortBeaconsByLatestExpiry)\r\n        .shift();\r\n\r\n    const onStopSharing = async (): Promise<void> => {\r\n        setStoppingInProgress(true);\r\n        try {\r\n            await Promise.all(liveBeaconIds.map((beaconId) => OwnBeaconStore.instance.stopBeacon(beaconId)));\r\n        } catch (error) {\r\n            setStoppingInProgress(false);\r\n        }\r\n    };\r\n\r\n    const onResetLocationPublishError = (): void => {\r\n        liveBeaconIds.forEach((beaconId) => {\r\n            OwnBeaconStore.instance.resetLocationPublishError(beaconId);\r\n        });\r\n    };\r\n\r\n    return {\r\n        onStopSharing,\r\n        onResetLocationPublishError,\r\n        beacon,\r\n        stoppingInProgress,\r\n        hasLocationPublishError,\r\n        hasStopSharingError,\r\n    };\r\n};\r\n"],"mappings":";;;;;;AAgBA,IAAAA,MAAA,GAAAC,OAAA;AAGA,IAAAC,gBAAA,GAAAD,OAAA;AACA,IAAAE,eAAA,GAAAF,OAAA;AACA,IAAAG,SAAA,GAAAH,OAAA;AArBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMI,iBAAiB,GAAIC,aAAiC,IAAuB;EACtF,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG,IAAAC,eAAQ,EAAC,KAAK,CAAC;EAEnE,MAAMC,uBAAuB,GAAG,IAAAC,qCAAoB,EAChDC,8BAAc,CAACC,QAAQ,EACvBC,mCAAmB,CAACC,oBAAoB,EACxC,MAAMT,aAAa,CAACU,IAAI,CAACJ,8BAAc,CAACC,QAAQ,CAACI,6BAA6B,CAClF,CAAC;EAED,MAAMC,mBAAmB,GAAG,IAAAP,qCAAoB,EAC5CC,8BAAc,CAACC,QAAQ,EACvBC,mCAAmB,CAACK,iBAAiB,EACrC,MAAMb,aAAa,CAACU,IAAI,CAAEI,EAAE,IAAKR,8BAAc,CAACC,QAAQ,CAACQ,kBAAkB,CAACC,GAAG,CAACF,EAAE,CAAC,CACvF,CAAC;EAED,IAAAG,gBAAS,EAAC,MAAM;IACZ,IAAIL,mBAAmB,EAAE;MACrBV,qBAAqB,CAAC,KAAK,CAAC;IAChC;EACJ,CAAC,EAAE,CAACU,mBAAmB,CAAC,CAAC;;EAEzB;EACA,IAAAK,gBAAS,EAAC,MAAM;IACZf,qBAAqB,CAAC,KAAK,CAAC;EAChC,CAAC,EAAE,CAACF,aAAa,CAAC,CAAC;;EAEnB;EACA,MAAMkB,MAAM,GAAGlB,aAAa,CACvBmB,GAAG,CAAEC,QAAQ,IAAKd,8BAAc,CAACC,QAAQ,CAACc,aAAa,CAACD,QAAQ,CAAE,CAAC,CACnEE,IAAI,CAACC,mCAAyB,CAAC,CAC/BC,KAAK,CAAC,CAAC;EAEZ,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAA2B;IAC7CvB,qBAAqB,CAAC,IAAI,CAAC;IAC3B,IAAI;MACA,MAAMwB,OAAO,CAACC,GAAG,CAAC3B,aAAa,CAACmB,GAAG,CAAEC,QAAQ,IAAKd,8BAAc,CAACC,QAAQ,CAACqB,UAAU,CAACR,QAAQ,CAAC,CAAC,CAAC;IACpG,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZ3B,qBAAqB,CAAC,KAAK,CAAC;IAChC;EACJ,CAAC;EAED,MAAM4B,2BAA2B,GAAGA,CAAA,KAAY;IAC5C9B,aAAa,CAAC+B,OAAO,CAAEX,QAAQ,IAAK;MAChCd,8BAAc,CAACC,QAAQ,CAACyB,yBAAyB,CAACZ,QAAQ,CAAC;IAC/D,CAAC,CAAC;EACN,CAAC;EAED,OAAO;IACHK,aAAa;IACbK,2BAA2B;IAC3BZ,MAAM;IACNjB,kBAAkB;IAClBG,uBAAuB;IACvBQ;EACJ,CAAC;AACL,CAAC;AAACqB,OAAA,CAAAlC,iBAAA,GAAAA,iBAAA"}