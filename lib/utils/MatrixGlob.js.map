{"version":3,"file":"MatrixGlob.js","names":["_globToRegexp","_interopRequireDefault","require","MatrixGlob","constructor","glob","_defineProperty2","default","globRegex","globToRegexp","extended","globstar","replaced","toString","replace","regex","RegExp","substring","length","test","val","exports"],"sources":["../../src/utils/MatrixGlob.ts"],"sourcesContent":["/*\r\nCopyright 2019 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport globToRegexp from \"glob-to-regexp\";\r\n\r\n// Taken with permission from matrix-bot-sdk:\r\n// https://github.com/turt2live/matrix-js-bot-sdk/blob/eb148c2ecec7bf3ade801d73deb43df042d55aef/src/MatrixGlob.ts\r\n\r\n/**\r\n * Represents a common Matrix glob. This is commonly used\r\n * for server ACLs and similar functions.\r\n */\r\nexport class MatrixGlob {\r\n    private regex: RegExp;\r\n\r\n    /**\r\n     * Creates a new Matrix Glob\r\n     * @param {string} glob The glob to convert. Eg: \"*.example.org\"\r\n     */\r\n    public constructor(glob: string) {\r\n        const globRegex = globToRegexp(glob, {\r\n            extended: false,\r\n            globstar: false,\r\n        });\r\n\r\n        // We need to convert `?` manually because globToRegexp's extended mode\r\n        // does more than we want it to.\r\n        const replaced = globRegex.toString().replace(/\\\\\\?/g, \".\");\r\n        this.regex = new RegExp(replaced.substring(1, replaced.length - 1));\r\n    }\r\n\r\n    /**\r\n     * Tests the glob against a value, returning true if it matches.\r\n     * @param {string} val The value to test.\r\n     * @returns {boolean} True if the value matches the glob, false otherwise.\r\n     */\r\n    public test(val: string): boolean {\r\n        return this.regex.test(val);\r\n    }\r\n}\r\n"],"mappings":";;;;;;;;AAgBA,IAAAA,aAAA,GAAAC,sBAAA,CAAAC,OAAA;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACO,MAAMC,UAAU,CAAC;EAGpB;AACJ;AACA;AACA;EACWC,WAAWA,CAACC,IAAY,EAAE;IAAA,IAAAC,gBAAA,CAAAC,OAAA;IAC7B,MAAMC,SAAS,GAAG,IAAAC,qBAAY,EAACJ,IAAI,EAAE;MACjCK,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE;IACd,CAAC,CAAC;;IAEF;IACA;IACA,MAAMC,QAAQ,GAAGJ,SAAS,CAACK,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC;IAC3D,IAAI,CAACC,KAAK,GAAG,IAAIC,MAAM,CAACJ,QAAQ,CAACK,SAAS,CAAC,CAAC,EAAEL,QAAQ,CAACM,MAAM,GAAG,CAAC,CAAC,CAAC;EACvE;;EAEA;AACJ;AACA;AACA;AACA;EACWC,IAAIA,CAACC,GAAW,EAAW;IAC9B,OAAO,IAAI,CAACL,KAAK,CAACI,IAAI,CAACC,GAAG,CAAC;EAC/B;AACJ;AAACC,OAAA,CAAAlB,UAAA,GAAAA,UAAA"}