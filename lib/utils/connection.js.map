{"version":3,"file":"connection.js","names":["_sync","require","createReconnectedListener","callback","syncState","prevState","SyncState","Error","exports"],"sources":["../../src/utils/connection.ts"],"sourcesContent":["/*\r\nCopyright 2022 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { ClientEvent, ClientEventHandlerMap } from \"matrix-js-sdk/src/matrix\";\r\nimport { SyncState } from \"matrix-js-sdk/src/sync\";\r\n\r\n/**\r\n * Creates a MatrixClient event listener function that can be used to get notified about reconnects.\r\n * @param callback The callback to be called on reconnect\r\n */\r\nexport const createReconnectedListener = (callback: () => void): ClientEventHandlerMap[ClientEvent.Sync] => {\r\n    return (syncState: SyncState, prevState: SyncState | null) => {\r\n        if (syncState !== SyncState.Error && prevState !== syncState) {\r\n            // Consider the client reconnected if there is no error with syncing.\r\n            // This means the state could be RECONNECTING, SYNCING, PREPARED or CATCHUP.\r\n            callback();\r\n        }\r\n    };\r\n};\r\n"],"mappings":";;;;;;AAiBA,IAAAA,KAAA,GAAAC,OAAA;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACO,MAAMC,yBAAyB,GAAIC,QAAoB,IAA8C;EACxG,OAAO,CAACC,SAAoB,EAAEC,SAA2B,KAAK;IAC1D,IAAID,SAAS,KAAKE,eAAS,CAACC,KAAK,IAAIF,SAAS,KAAKD,SAAS,EAAE;MAC1D;MACA;MACAD,QAAQ,CAAC,CAAC;IACd;EACJ,CAAC;AACL,CAAC;AAACK,OAAA,CAAAN,yBAAA,GAAAA,yBAAA"}