{"version":3,"file":"Image.js","names":["_arrays","require","mayBeAnimated","mimeType","includes","arrayBufferRead","arr","start","len","Uint8Array","slice","arrayBufferReadInt","dv","DataView","getUint32","arrayBufferReadStr","String","fromCharCode","apply","Array","from","blobIsAnimated","blob","arrayBuffer","flags","animationFlagMask","globalColorTable","getUint8","globalColorTableSize","Math","pow","offset","extensionIntroducer","graphicsControlLabel","delayTime","getUint16","arrayHasDiff","i","size","length","type"],"sources":["../../src/utils/Image.ts"],"sourcesContent":["/*\r\n * Copyright 2022 The Matrix.org Foundation C.I.C.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *         http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { arrayHasDiff } from \"./arrays\";\r\n\r\nexport function mayBeAnimated(mimeType?: string): boolean {\r\n    // AVIF animation support at the time of writing is only available in Chrome hence not having `blobIsAnimated` check\r\n    return [\"image/gif\", \"image/webp\", \"image/png\", \"image/apng\", \"image/avif\"].includes(mimeType!);\r\n}\r\n\r\nfunction arrayBufferRead(arr: ArrayBuffer, start: number, len: number): Uint8Array {\r\n    return new Uint8Array(arr.slice(start, start + len));\r\n}\r\n\r\nfunction arrayBufferReadInt(arr: ArrayBuffer, start: number): number {\r\n    const dv = new DataView(arr, start, 4);\r\n    return dv.getUint32(0);\r\n}\r\n\r\nfunction arrayBufferReadStr(arr: ArrayBuffer, start: number, len: number): string {\r\n    return String.fromCharCode.apply(null, Array.from(arrayBufferRead(arr, start, len)));\r\n}\r\n\r\nexport async function blobIsAnimated(mimeType: string | undefined, blob: Blob): Promise<boolean> {\r\n    switch (mimeType) {\r\n        case \"image/webp\": {\r\n            // Only extended file format WEBP images support animation, so grab the expected data range and verify header.\r\n            // Based on https://developers.google.com/speed/webp/docs/riff_container#extended_file_format\r\n            const arr = await blob.slice(0, 17).arrayBuffer();\r\n            if (\r\n                arrayBufferReadStr(arr, 0, 4) === \"RIFF\" &&\r\n                arrayBufferReadStr(arr, 8, 4) === \"WEBP\" &&\r\n                arrayBufferReadStr(arr, 12, 4) === \"VP8X\"\r\n            ) {\r\n                const [flags] = arrayBufferRead(arr, 16, 1);\r\n                // Flags: R R I L E X _A_ R (reversed)\r\n                const animationFlagMask = 1 << 1;\r\n                return (flags & animationFlagMask) != 0;\r\n            }\r\n            break;\r\n        }\r\n\r\n        case \"image/gif\": {\r\n            // Based on https://gist.github.com/zakirt/faa4a58cec5a7505b10e3686a226f285\r\n            // More info at http://www.matthewflickinger.com/lab/whatsinagif/bits_and_bytes.asp\r\n            const dv = new DataView(await blob.arrayBuffer(), 10);\r\n\r\n            const globalColorTable = dv.getUint8(0);\r\n            let globalColorTableSize = 0;\r\n            // check first bit, if 0, then we don't have a Global Color Table\r\n            if (globalColorTable & 0x80) {\r\n                // grab the last 3 bits, to calculate the global color table size -> RGB * 2^(N+1)\r\n                // N is the value in the last 3 bits.\r\n                globalColorTableSize = 3 * Math.pow(2, (globalColorTable & 0x7) + 1);\r\n            }\r\n\r\n            // move on to the Graphics Control Extension\r\n            const offset = 3 + globalColorTableSize;\r\n\r\n            const extensionIntroducer = dv.getUint8(offset);\r\n            const graphicsControlLabel = dv.getUint8(offset + 1);\r\n            let delayTime = 0;\r\n\r\n            // Graphics Control Extension section is where GIF animation data is stored\r\n            // First 2 bytes must be 0x21 and 0xF9\r\n            if (extensionIntroducer & 0x21 && graphicsControlLabel & 0xf9) {\r\n                // skip to the 2 bytes with the delay time\r\n                delayTime = dv.getUint16(offset + 4);\r\n            }\r\n\r\n            return !!delayTime;\r\n        }\r\n\r\n        case \"image/png\":\r\n        case \"image/apng\": {\r\n            // Based on https://stackoverflow.com/a/68618296\r\n            const arr = await blob.arrayBuffer();\r\n            if (\r\n                arrayHasDiff([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a], Array.from(arrayBufferRead(arr, 0, 8)))\r\n            ) {\r\n                return false;\r\n            }\r\n\r\n            for (let i = 8; i < blob.size; ) {\r\n                const length = arrayBufferReadInt(arr, i);\r\n                i += 4;\r\n                const type = arrayBufferReadStr(arr, i, 4);\r\n                i += 4;\r\n\r\n                switch (type) {\r\n                    case \"acTL\":\r\n                        return true;\r\n                    case \"IDAT\":\r\n                        return false;\r\n                }\r\n                i += length + 4;\r\n            }\r\n            break;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n"],"mappings":"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"}