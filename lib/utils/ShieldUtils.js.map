{"version":3,"file":"ShieldUtils.js","names":["_logger","require","_DMRoomMap","_interopRequireDefault","_arrays","E2EStatus","exports","shieldStatusForRoom","client","room","crypto","getCrypto","Warning","members","getEncryptionTargetMembers","map","_ref","userId","inDMMap","DMRoomMap","shared","getUserIdForRoomId","roomId","verified","unverified","filter","getUserId","forEach","checkUserTrust","isCrossSigningVerified","push","wasCrossSigningVerified","includeUser","length","targets","devicesByUser","getUserDeviceInfo","devices","get","logger","warn","anyDeviceNotVerified","asyncSome","keys","deviceId","verificationStatus","getDeviceVerificationStatus","isVerified","Verified","Normal"],"sources":["../../src/utils/ShieldUtils.ts"],"sourcesContent":["/*\r\nCopyright 2021 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { MatrixClient } from \"matrix-js-sdk/src/client\";\r\nimport { Room } from \"matrix-js-sdk/src/models/room\";\r\nimport { logger } from \"matrix-js-sdk/src/logger\";\r\n\r\nimport DMRoomMap from \"./DMRoomMap\";\r\nimport { asyncSome } from \"./arrays\";\r\n\r\nexport enum E2EStatus {\r\n    Warning = \"warning\",\r\n    Verified = \"verified\",\r\n    Normal = \"normal\",\r\n}\r\n\r\nexport async function shieldStatusForRoom(client: MatrixClient, room: Room): Promise<E2EStatus> {\r\n    const crypto = client.getCrypto();\r\n    if (!crypto) {\r\n        return E2EStatus.Warning;\r\n    }\r\n\r\n    const members = (await room.getEncryptionTargetMembers()).map(({ userId }) => userId);\r\n    const inDMMap = !!DMRoomMap.shared().getUserIdForRoomId(room.roomId);\r\n\r\n    const verified: string[] = [];\r\n    const unverified: string[] = [];\r\n    members\r\n        .filter((userId) => userId !== client.getUserId())\r\n        .forEach((userId) => {\r\n            (client.checkUserTrust(userId).isCrossSigningVerified() ? verified : unverified).push(userId);\r\n        });\r\n\r\n    /* Alarm if any unverified users were verified before. */\r\n    for (const userId of unverified) {\r\n        if (client.checkUserTrust(userId).wasCrossSigningVerified()) {\r\n            return E2EStatus.Warning;\r\n        }\r\n    }\r\n\r\n    /* Check all verified user devices. */\r\n    /* Don't alarm if no other users are verified  */\r\n    const includeUser =\r\n        (verified.length > 0 && // Don't alarm for self in rooms where nobody else is verified\r\n            !inDMMap && // Don't alarm for self in DMs with other users\r\n            members.length !== 2) || // Don't alarm for self in 1:1 chats with other users\r\n        members.length === 1; // Do alarm for self if we're alone in a room\r\n    const targets = includeUser ? [...verified, client.getUserId()!] : verified;\r\n    const devicesByUser = await crypto.getUserDeviceInfo(targets);\r\n    for (const userId of targets) {\r\n        const devices = devicesByUser.get(userId);\r\n        if (!devices) {\r\n            // getUserDeviceInfo returned nothing about this user, which means we know nothing about their device list.\r\n            // That seems odd, so treat it as a warning.\r\n            logger.warn(`No device info for user ${userId}`);\r\n            return E2EStatus.Warning;\r\n        }\r\n\r\n        const anyDeviceNotVerified = await asyncSome(devices.keys(), async (deviceId) => {\r\n            const verificationStatus = await crypto.getDeviceVerificationStatus(userId, deviceId);\r\n            return !verificationStatus?.isVerified();\r\n        });\r\n        if (anyDeviceNotVerified) {\r\n            return E2EStatus.Warning;\r\n        }\r\n    }\r\n\r\n    return unverified.length === 0 ? E2EStatus.Verified : E2EStatus.Normal;\r\n}\r\n"],"mappings":"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"}