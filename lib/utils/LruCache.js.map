{"version":3,"file":"LruCache.js","names":["_logger","require","LruCache","constructor","capacity","_defineProperty2","default","Error","map","Map","has","key","getItem","undefined","e","onError","get","value","set","safeSet","delete","item","removeItemFromList","clear","head","tail","values","newItem","next","prev","setHeadTail","size","logger","warn","exports"],"sources":["../../src/utils/LruCache.ts"],"sourcesContent":["/*\r\nCopyright 2023 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { logger } from \"matrix-js-sdk/src/logger\";\r\n\r\ninterface CacheItem<K, V> {\r\n    key: K;\r\n    value: V;\r\n    /** Next item in the list */\r\n    next: CacheItem<K, V> | null;\r\n    /** Previous item in the list */\r\n    prev: CacheItem<K, V> | null;\r\n}\r\n\r\n/**\r\n * Least Recently Used cache.\r\n * Can be initialised with a capacity and drops the least recently used items.\r\n * This cache should be error robust: Cache miss on error.\r\n *\r\n * Implemented via a key lookup map and a double linked list:\r\n *             head              tail\r\n *              a next → b next → c → next null\r\n *  null ← prev a ← prev b ← prev c\r\n *\r\n * @template K - Type of the key used to look up the values inside the cache\r\n * @template V - Type of the values inside the cache\r\n */\r\nexport class LruCache<K, V> {\r\n    /** Head of the list. */\r\n    private head: CacheItem<K, V> | null = null;\r\n    /** Tail of the list */\r\n    private tail: CacheItem<K, V> | null = null;\r\n    /** Key lookup map */\r\n    private map: Map<K, CacheItem<K, V>>;\r\n\r\n    /**\r\n     * @param capacity - Cache capcity.\r\n     * @throws {Error} - Raises an error if the cache capacity is less than 1.\r\n     */\r\n    public constructor(private capacity: number) {\r\n        if (this.capacity < 1) {\r\n            throw new Error(\"Cache capacity must be at least 1\");\r\n        }\r\n\r\n        this.map = new Map();\r\n    }\r\n\r\n    /**\r\n     * Whether the cache contains an item under this key.\r\n     * Marks the item as most recently used.\r\n     *\r\n     * @param key - Key of the item\r\n     * @returns true: item in cache, else false\r\n     */\r\n    public has(key: K): boolean {\r\n        try {\r\n            return this.getItem(key) !== undefined;\r\n        } catch (e) {\r\n            // Should not happen but makes it more robust to the unknown.\r\n            this.onError(e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns an item from the cache.\r\n     * Marks the item as most recently used.\r\n     *\r\n     * @param key - Key of the item\r\n     * @returns The value if found, else undefined\r\n     */\r\n    public get(key: K): V | undefined {\r\n        try {\r\n            return this.getItem(key)?.value;\r\n        } catch (e) {\r\n            // Should not happen but makes it more robust to the unknown.\r\n            this.onError(e);\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds an item to the cache.\r\n     * A newly added item will be the set as the most recently used.\r\n     *\r\n     * @param key - Key of the item\r\n     * @param value - Item value\r\n     */\r\n    public set(key: K, value: V): void {\r\n        try {\r\n            this.safeSet(key, value);\r\n        } catch (e) {\r\n            // Should not happen but makes it more robust to the unknown.\r\n            this.onError(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Deletes an item from the cache.\r\n     *\r\n     * @param key - Key of the item to be removed\r\n     */\r\n    public delete(key: K): void {\r\n        const item = this.map.get(key);\r\n\r\n        // Unknown item.\r\n        if (!item) return;\r\n\r\n        try {\r\n            this.removeItemFromList(item);\r\n            this.map.delete(key);\r\n        } catch (e) {\r\n            // Should not happen but makes it more robust to the unknown.\r\n            this.onError(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clears the cache.\r\n     */\r\n    public clear(): void {\r\n        this.map = new Map();\r\n        this.head = null;\r\n        this.tail = null;\r\n    }\r\n\r\n    /**\r\n     * Returns an iterator over the cached values.\r\n     */\r\n    public *values(): IterableIterator<V> {\r\n        for (const item of this.map.values()) {\r\n            yield item.value;\r\n        }\r\n    }\r\n\r\n    private safeSet(key: K, value: V): void {\r\n        const item = this.getItem(key);\r\n\r\n        if (item) {\r\n            // The item is already stored under this key. Update the value.\r\n            item.value = value;\r\n            return;\r\n        }\r\n\r\n        const newItem: CacheItem<K, V> = {\r\n            key,\r\n            value,\r\n            next: null,\r\n            prev: null,\r\n        };\r\n\r\n        if (this.head) {\r\n            // Put item in front of the list.\r\n            this.head.prev = newItem;\r\n            newItem.next = this.head;\r\n        }\r\n\r\n        this.setHeadTail(newItem);\r\n\r\n        // Store item in lookup map.\r\n        this.map.set(key, newItem);\r\n\r\n        if (this.tail && this.map.size > this.capacity) {\r\n            // Map size exceeded cache capcity. Drop tail item.\r\n            this.delete(this.tail.key);\r\n        }\r\n    }\r\n\r\n    private onError(e: unknown): void {\r\n        logger.warn(\"LruCache error\", e);\r\n        this.clear();\r\n    }\r\n\r\n    private getItem(key: K): CacheItem<K, V> | undefined {\r\n        const item = this.map.get(key);\r\n\r\n        // Not in cache.\r\n        if (!item) return undefined;\r\n\r\n        // Item is already at the head of the list.\r\n        // No update required.\r\n        if (item === this.head) return item;\r\n\r\n        this.removeItemFromList(item);\r\n\r\n        // Put item to the front.\r\n\r\n        if (this.head) {\r\n            this.head.prev = item;\r\n        }\r\n\r\n        item.prev = null;\r\n        item.next = this.head;\r\n\r\n        this.setHeadTail(item);\r\n\r\n        return item;\r\n    }\r\n\r\n    private setHeadTail(item: CacheItem<K, V>): void {\r\n        if (item.prev === null) {\r\n            // Item has no previous item → head\r\n            this.head = item;\r\n        }\r\n\r\n        if (item.next === null) {\r\n            // Item has no next item → tail\r\n            this.tail = item;\r\n        }\r\n    }\r\n\r\n    private removeItemFromList(item: CacheItem<K, V>): void {\r\n        if (item === this.head) {\r\n            this.head = item.next;\r\n        }\r\n\r\n        if (item === this.tail) {\r\n            this.tail = item.prev;\r\n        }\r\n\r\n        if (item.prev) {\r\n            item.prev.next = item.next;\r\n        }\r\n\r\n        if (item.next) {\r\n            item.next.prev = item.prev;\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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"}