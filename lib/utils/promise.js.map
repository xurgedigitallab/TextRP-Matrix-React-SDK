{"version":3,"file":"promise.js","names":["timeout","promise","timeoutValue","ms","timeoutPromise","Promise","resolve","timeoutId","window","setTimeout","then","clearTimeout","race","retry","fn","num","predicate","lastErr","i","v","err"],"sources":["../../src/utils/promise.ts"],"sourcesContent":["/*\r\nCopyright 2019, 2020 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\n// Returns a promise which resolves when the input promise resolves with its value\r\n// or when the timeout of ms is reached with the value of given timeoutValue\r\nexport async function timeout<T, Y>(promise: Promise<T>, timeoutValue: Y, ms: number): Promise<T | Y> {\r\n    const timeoutPromise = new Promise<T | Y>((resolve) => {\r\n        const timeoutId = window.setTimeout(resolve, ms, timeoutValue);\r\n        promise.then(() => {\r\n            clearTimeout(timeoutId);\r\n        });\r\n    });\r\n\r\n    return Promise.race([promise, timeoutPromise]);\r\n}\r\n\r\n// Helper method to retry a Promise a given number of times or until a predicate fails\r\nexport async function retry<T, E extends Error>(\r\n    fn: () => Promise<T>,\r\n    num: number,\r\n    predicate?: (e: E) => boolean,\r\n): Promise<T> {\r\n    let lastErr!: E;\r\n    for (let i = 0; i < num; i++) {\r\n        try {\r\n            const v = await fn();\r\n            // If `await fn()` throws then we won't reach here\r\n            return v;\r\n        } catch (err) {\r\n            if (predicate && !predicate(err)) {\r\n                throw err;\r\n            }\r\n            lastErr = err;\r\n        }\r\n    }\r\n    throw lastErr;\r\n}\r\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACO,eAAeA,OAAOA,CAAOC,OAAmB,EAAEC,YAAe,EAAEC,EAAU,EAAkB;EAClG,MAAMC,cAAc,GAAG,IAAIC,OAAO,CAASC,OAAO,IAAK;IACnD,MAAMC,SAAS,GAAGC,MAAM,CAACC,UAAU,CAACH,OAAO,EAAEH,EAAE,EAAED,YAAY,CAAC;IAC9DD,OAAO,CAACS,IAAI,CAAC,MAAM;MACfC,YAAY,CAACJ,SAAS,CAAC;IAC3B,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,OAAOF,OAAO,CAACO,IAAI,CAAC,CAACX,OAAO,EAAEG,cAAc,CAAC,CAAC;AAClD;;AAEA;AACO,eAAeS,KAAKA,CACvBC,EAAoB,EACpBC,GAAW,EACXC,SAA6B,EACnB;EACV,IAAIC,OAAW;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,GAAG,EAAEG,CAAC,EAAE,EAAE;IAC1B,IAAI;MACA,MAAMC,CAAC,GAAG,MAAML,EAAE,CAAC,CAAC;MACpB;MACA,OAAOK,CAAC;IACZ,CAAC,CAAC,OAAOC,GAAG,EAAE;MACV,IAAIJ,SAAS,IAAI,CAACA,SAAS,CAACI,GAAG,CAAC,EAAE;QAC9B,MAAMA,GAAG;MACb;MACAH,OAAO,GAAGG,GAAG;IACjB;EACJ;EACA,MAAMH,OAAO;AACjB"}