{"version":3,"file":"monitorSyncedPushRules.js","names":["_matrix","require","_pushprocessor","_logger","_notifications","_updatePushRuleActions","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","pushRuleAndKindToAnnotated","ruleAndKind","rule","kind","undefined","monitorSyncedRule","matrixClient","pushProcessor","ruleId","definition","primaryRule","getPushRuleAndKindById","syncedRules","syncedRuleIds","map","n","Boolean","primaryRuleVectorState","ruleToVectorState","outOfSyncRules","syncedRule","updateExistingPushRulesWithActions","_ref","rule_id","actions","monitorSyncedPushRules","accountDataEvent","getType","EventType","PushRules","PushProcessor","entries","VectorPushRulesDefinitions","_ref2","error","logger","exports"],"sources":["../../../src/utils/pushRules/monitorSyncedPushRules.ts"],"sourcesContent":["/*\r\nCopyright 2023 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { MatrixClient } from \"matrix-js-sdk/src/client\";\r\nimport { MatrixEvent, EventType } from \"matrix-js-sdk/src/matrix\";\r\nimport { PushProcessor } from \"matrix-js-sdk/src/pushprocessor\";\r\nimport { RuleId, IAnnotatedPushRule } from \"matrix-js-sdk/src/@types/PushRules\";\r\nimport { logger } from \"matrix-js-sdk/src/logger\";\r\n\r\nimport { VectorPushRulesDefinitions, VectorPushRuleDefinition } from \"../../notifications\";\r\nimport { updateExistingPushRulesWithActions } from \"./updatePushRuleActions\";\r\n\r\nconst pushRuleAndKindToAnnotated = (\r\n    ruleAndKind: ReturnType<PushProcessor[\"getPushRuleAndKindById\"]>,\r\n): IAnnotatedPushRule | undefined =>\r\n    ruleAndKind\r\n        ? {\r\n              ...ruleAndKind.rule,\r\n              kind: ruleAndKind.kind,\r\n          }\r\n        : undefined;\r\n\r\n/**\r\n * Checks that any synced rules that exist a given rule are in sync\r\n * And updates any that are out of sync\r\n * Ignores ruleIds that do not exist for the user\r\n * @param matrixClient - cli\r\n * @param pushProcessor - processor used to retrieve current state of rules\r\n * @param ruleId - primary rule\r\n * @param definition - VectorPushRuleDefinition of the primary rule\r\n */\r\nconst monitorSyncedRule = async (\r\n    matrixClient: MatrixClient,\r\n    pushProcessor: PushProcessor,\r\n    ruleId: RuleId | string,\r\n    definition: VectorPushRuleDefinition,\r\n): Promise<void> => {\r\n    const primaryRule = pushRuleAndKindToAnnotated(pushProcessor.getPushRuleAndKindById(ruleId));\r\n\r\n    if (!primaryRule) {\r\n        return;\r\n    }\r\n    const syncedRules: IAnnotatedPushRule[] | undefined = definition.syncedRuleIds\r\n        ?.map((ruleId) => pushRuleAndKindToAnnotated(pushProcessor.getPushRuleAndKindById(ruleId)))\r\n        .filter((n?: IAnnotatedPushRule): n is IAnnotatedPushRule => Boolean(n));\r\n\r\n    // no synced rules to manage\r\n    if (!syncedRules?.length) {\r\n        return;\r\n    }\r\n\r\n    const primaryRuleVectorState = definition.ruleToVectorState(primaryRule);\r\n\r\n    const outOfSyncRules = syncedRules.filter(\r\n        (syncedRule) => definition.ruleToVectorState(syncedRule) !== primaryRuleVectorState,\r\n    );\r\n\r\n    if (outOfSyncRules.length) {\r\n        await updateExistingPushRulesWithActions(\r\n            matrixClient,\r\n            // eslint-disable-next-line camelcase, @typescript-eslint/naming-convention\r\n            outOfSyncRules.map(({ rule_id }) => rule_id),\r\n            primaryRule.actions,\r\n        );\r\n    }\r\n};\r\n\r\n/**\r\n * On changes to m.push_rules account data,\r\n * check that synced push rules are in sync with their primary rule,\r\n * and update any out of sync rules.\r\n * synced rules are defined in VectorPushRulesDefinitions\r\n * If updating a rule fails for any reason,\r\n * the error is caught and handled silently\r\n * @param accountDataEvent - MatrixEvent\r\n * @param matrixClient - cli\r\n * @returns Resolves when updates are complete\r\n */\r\nexport const monitorSyncedPushRules = async (\r\n    accountDataEvent: MatrixEvent | undefined,\r\n    matrixClient: MatrixClient,\r\n): Promise<void> => {\r\n    if (accountDataEvent?.getType() !== EventType.PushRules) {\r\n        return;\r\n    }\r\n    const pushProcessor = new PushProcessor(matrixClient);\r\n\r\n    Object.entries(VectorPushRulesDefinitions).forEach(async ([ruleId, definition]) => {\r\n        try {\r\n            await monitorSyncedRule(matrixClient, pushProcessor, ruleId, definition);\r\n        } catch (error) {\r\n            logger.error(`Failed to fully synchronise push rules for ${ruleId}`, error);\r\n        }\r\n    });\r\n};\r\n"],"mappings":"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"}