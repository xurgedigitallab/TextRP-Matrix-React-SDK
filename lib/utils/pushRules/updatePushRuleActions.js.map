{"version":3,"file":"updatePushRuleActions.js","names":["_pushprocessor","require","updatePushRuleActions","matrixClient","ruleId","kind","actions","setPushRuleEnabled","setPushRuleActions","exports","updateExistingPushRulesWithActions","ruleIds","pushProcessor","PushProcessor","rules","map","getPushRuleAndKindById","filter","n","Boolean","length","rule","rule_id"],"sources":["../../../src/utils/pushRules/updatePushRuleActions.ts"],"sourcesContent":["/*\r\nCopyright 2023 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { MatrixClient } from \"matrix-js-sdk/src/client\";\r\nimport { IPushRule, PushRuleAction, PushRuleKind } from \"matrix-js-sdk/src/matrix\";\r\nimport { PushProcessor } from \"matrix-js-sdk/src/pushprocessor\";\r\n\r\n/**\r\n * Sets the actions for a given push rule id and kind\r\n * When actions are falsy, disables the rule\r\n * @param matrixClient - cli\r\n * @param ruleId - rule id to update\r\n * @param kind - PushRuleKind\r\n * @param actions - push rule actions to set for rule\r\n */\r\nexport const updatePushRuleActions = async (\r\n    matrixClient: MatrixClient,\r\n    ruleId: IPushRule[\"rule_id\"],\r\n    kind: PushRuleKind,\r\n    actions?: PushRuleAction[],\r\n): Promise<void> => {\r\n    if (!actions) {\r\n        await matrixClient.setPushRuleEnabled(\"global\", kind, ruleId, false);\r\n    } else {\r\n        await matrixClient.setPushRuleActions(\"global\", kind, ruleId, actions);\r\n        await matrixClient.setPushRuleEnabled(\"global\", kind, ruleId, true);\r\n    }\r\n};\r\n\r\ninterface PushRuleAndKind {\r\n    rule: IPushRule;\r\n    kind: PushRuleKind;\r\n}\r\n\r\n/**\r\n * Update push rules with given actions\r\n * Where they already exist for current user\r\n * Rules are updated sequentially and stop at first error\r\n * @param matrixClient - cli\r\n * @param ruleIds - RuleIds of push rules to attempt to set actions for\r\n * @param actions - push rule actions to set for rule\r\n * @returns resolves when all rules have been updated\r\n * @returns rejects when a rule update fails\r\n */\r\nexport const updateExistingPushRulesWithActions = async (\r\n    matrixClient: MatrixClient,\r\n    ruleIds?: IPushRule[\"rule_id\"][],\r\n    actions?: PushRuleAction[],\r\n): Promise<void> => {\r\n    const pushProcessor = new PushProcessor(matrixClient);\r\n\r\n    const rules: PushRuleAndKind[] | undefined = ruleIds\r\n        ?.map((ruleId) => pushProcessor.getPushRuleAndKindById(ruleId))\r\n        .filter((n: PushRuleAndKind | null): n is PushRuleAndKind => Boolean(n));\r\n\r\n    if (!rules?.length) {\r\n        return;\r\n    }\r\n    for (const { kind, rule } of rules) {\r\n        await updatePushRuleActions(matrixClient, rule.rule_id, kind, actions);\r\n    }\r\n};\r\n"],"mappings":";;;;;;AAkBA,IAAAA,cAAA,GAAAC,OAAA;AAlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,qBAAqB,GAAG,MAAAA,CACjCC,YAA0B,EAC1BC,MAA4B,EAC5BC,IAAkB,EAClBC,OAA0B,KACV;EAChB,IAAI,CAACA,OAAO,EAAE;IACV,MAAMH,YAAY,CAACI,kBAAkB,CAAC,QAAQ,EAAEF,IAAI,EAAED,MAAM,EAAE,KAAK,CAAC;EACxE,CAAC,MAAM;IACH,MAAMD,YAAY,CAACK,kBAAkB,CAAC,QAAQ,EAAEH,IAAI,EAAED,MAAM,EAAEE,OAAO,CAAC;IACtE,MAAMH,YAAY,CAACI,kBAAkB,CAAC,QAAQ,EAAEF,IAAI,EAAED,MAAM,EAAE,IAAI,CAAC;EACvE;AACJ,CAAC;AAACK,OAAA,CAAAP,qBAAA,GAAAA,qBAAA;AAOF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMQ,kCAAkC,GAAG,MAAAA,CAC9CP,YAA0B,EAC1BQ,OAAgC,EAChCL,OAA0B,KACV;EAChB,MAAMM,aAAa,GAAG,IAAIC,4BAAa,CAACV,YAAY,CAAC;EAErD,MAAMW,KAAoC,GAAGH,OAAO,EAC9CI,GAAG,CAAEX,MAAM,IAAKQ,aAAa,CAACI,sBAAsB,CAACZ,MAAM,CAAC,CAAC,CAC9Da,MAAM,CAAEC,CAAyB,IAA2BC,OAAO,CAACD,CAAC,CAAC,CAAC;EAE5E,IAAI,CAACJ,KAAK,EAAEM,MAAM,EAAE;IAChB;EACJ;EACA,KAAK,MAAM;IAAEf,IAAI;IAAEgB;EAAK,CAAC,IAAIP,KAAK,EAAE;IAChC,MAAMZ,qBAAqB,CAACC,YAAY,EAAEkB,IAAI,CAACC,OAAO,EAAEjB,IAAI,EAAEC,OAAO,CAAC;EAC1E;AACJ,CAAC;AAACG,OAAA,CAAAC,kCAAA,GAAAA,kCAAA"}