{"version":3,"file":"PlatformPeg.js","names":["_dispatcher","_interopRequireDefault","require","_actions","PlatformPeg","constructor","_defineProperty2","default","get","platform","set","defaultDispatcher","dispatch","action","Action","PlatformSet","exports","window","mxPlatformPeg","_default"],"sources":["../src/PlatformPeg.ts"],"sourcesContent":["/*\r\nCopyright 2016 OpenMarket Ltd\r\nCopyright 2020 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport BasePlatform from \"./BasePlatform\";\r\nimport defaultDispatcher from \"./dispatcher/dispatcher\";\r\nimport { Action } from \"./dispatcher/actions\";\r\nimport { PlatformSetPayload } from \"./dispatcher/payloads/PlatformSetPayload\";\r\n\r\n/*\r\n * Holds the current instance of the `Platform` to use across the codebase.\r\n * Looking for an `Platform`? Just look for the `PlatformPeg` on the peg board.\r\n * \"Peg\" is the literal meaning of something you hang something on. So you'll\r\n * find a `Platform` hanging on the `PlatformPeg`.\r\n *\r\n * Used by the code to do anything specific to the platform we're running on\r\n * (eg. web, electron). Platforms are provided by the app layer. This allows the\r\n * app layer to set a Platform without necessarily having to have a MatrixChat\r\n * object.\r\n */\r\nexport class PlatformPeg {\r\n    private platform: BasePlatform | null = null;\r\n\r\n    /**\r\n     * Returns the current Platform object for the application.\r\n     * This should be an instance of a class extending BasePlatform.\r\n     */\r\n    public get(): BasePlatform | null {\r\n        return this.platform;\r\n    }\r\n\r\n    /**\r\n     * Sets the current platform handler object to use for the application.\r\n     * @param {BasePlatform} platform an instance of a class extending BasePlatform.\r\n     */\r\n    public set(platform: BasePlatform): void {\r\n        this.platform = platform;\r\n        defaultDispatcher.dispatch<PlatformSetPayload>({\r\n            action: Action.PlatformSet,\r\n            platform,\r\n        });\r\n    }\r\n}\r\n\r\nif (!window.mxPlatformPeg) {\r\n    window.mxPlatformPeg = new PlatformPeg();\r\n}\r\nexport default window.mxPlatformPeg;\r\n"],"mappings":";;;;;;;;AAkBA,IAAAA,WAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAME,WAAW,CAAC;EAAAC,YAAA;IAAA,IAAAC,gBAAA,CAAAC,OAAA,oBACmB,IAAI;EAAA;EAE5C;AACJ;AACA;AACA;EACWC,GAAGA,CAAA,EAAwB;IAC9B,OAAO,IAAI,CAACC,QAAQ;EACxB;;EAEA;AACJ;AACA;AACA;EACWC,GAAGA,CAACD,QAAsB,EAAQ;IACrC,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxBE,mBAAiB,CAACC,QAAQ,CAAqB;MAC3CC,MAAM,EAAEC,eAAM,CAACC,WAAW;MAC1BN;IACJ,CAAC,CAAC;EACN;AACJ;AAACO,OAAA,CAAAZ,WAAA,GAAAA,WAAA;AAED,IAAI,CAACa,MAAM,CAACC,aAAa,EAAE;EACvBD,MAAM,CAACC,aAAa,GAAG,IAAId,WAAW,CAAC,CAAC;AAC5C;AAAC,IAAAe,QAAA,GACcF,MAAM,CAACC,aAAa;AAAAF,OAAA,CAAAT,OAAA,GAAAY,QAAA"}