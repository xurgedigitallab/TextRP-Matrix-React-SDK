{"version":3,"file":"fixed.js","names":["_item","_interopRequireDefault","require","_sizer","FixedDistributor","createItem","resizeHandle","resizer","sizer","ResizeItem","createSizer","containerElement","vertical","reverse","Sizer","constructor","item","_defineProperty2","default","beforeOffset","offset","size","getSize","setRawSize","resize","setSize","resizeFromContainerOffset","start","finish","exports"],"sources":["../../../src/resizer/distributors/fixed.ts"],"sourcesContent":["/*\r\nCopyright 2019 - 2020 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport ResizeItem from \"../item\";\r\nimport Sizer from \"../sizer\";\r\nimport Resizer, { IConfig } from \"../resizer\";\r\n\r\n/**\r\ndistributors translate a moving cursor into\r\nCSS/DOM changes by calling the sizer\r\n\r\nthey have two methods:\r\n    `resize` receives then new item size\r\n    `resizeFromContainerOffset` receives resize handle location\r\n        within the container bounding box. For internal use.\r\n        This method usually ends up calling `resize` once the start offset is subtracted.\r\n*/\r\nexport default class FixedDistributor<C extends IConfig, I extends ResizeItem<any> = ResizeItem<C>> {\r\n    public static createItem(resizeHandle: HTMLDivElement, resizer: Resizer, sizer: Sizer): ResizeItem {\r\n        return new ResizeItem(resizeHandle, resizer, sizer);\r\n    }\r\n\r\n    public static createSizer(containerElement: HTMLElement, vertical: boolean, reverse: boolean): Sizer {\r\n        return new Sizer(containerElement, vertical, reverse);\r\n    }\r\n\r\n    private readonly beforeOffset: number;\r\n\r\n    public constructor(public readonly item: I) {\r\n        this.beforeOffset = item.offset();\r\n    }\r\n\r\n    public get size(): string {\r\n        return this.item.getSize();\r\n    }\r\n\r\n    public set size(size: string) {\r\n        this.item.setRawSize(size);\r\n    }\r\n\r\n    public resize(size: number): void {\r\n        this.item.setSize(size);\r\n    }\r\n\r\n    public resizeFromContainerOffset(offset: number): void {\r\n        this.resize(offset - this.beforeOffset);\r\n    }\r\n\r\n    public start(): void {\r\n        this.item.start();\r\n    }\r\n\r\n    public finish(): void {\r\n        this.item.finish();\r\n    }\r\n}\r\n"],"mappings":";;;;;;;;AAgBA,IAAAA,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAME,gBAAgB,CAA+D;EAChG,OAAcC,UAAUA,CAACC,YAA4B,EAAEC,OAAgB,EAAEC,KAAY,EAAc;IAC/F,OAAO,IAAIC,aAAU,CAACH,YAAY,EAAEC,OAAO,EAAEC,KAAK,CAAC;EACvD;EAEA,OAAcE,WAAWA,CAACC,gBAA6B,EAAEC,QAAiB,EAAEC,OAAgB,EAAS;IACjG,OAAO,IAAIC,cAAK,CAACH,gBAAgB,EAAEC,QAAQ,EAAEC,OAAO,CAAC;EACzD;EAIOE,WAAWA,CAAiBC,IAAO,EAAE;IAAA,KAATA,IAAO,GAAPA,IAAO;IAAA,IAAAC,gBAAA,CAAAC,OAAA;IACtC,IAAI,CAACC,YAAY,GAAGH,IAAI,CAACI,MAAM,CAAC,CAAC;EACrC;EAEA,IAAWC,IAAIA,CAAA,EAAW;IACtB,OAAO,IAAI,CAACL,IAAI,CAACM,OAAO,CAAC,CAAC;EAC9B;EAEA,IAAWD,IAAIA,CAACA,IAAY,EAAE;IAC1B,IAAI,CAACL,IAAI,CAACO,UAAU,CAACF,IAAI,CAAC;EAC9B;EAEOG,MAAMA,CAACH,IAAY,EAAQ;IAC9B,IAAI,CAACL,IAAI,CAACS,OAAO,CAACJ,IAAI,CAAC;EAC3B;EAEOK,yBAAyBA,CAACN,MAAc,EAAQ;IACnD,IAAI,CAACI,MAAM,CAACJ,MAAM,GAAG,IAAI,CAACD,YAAY,CAAC;EAC3C;EAEOQ,KAAKA,CAAA,EAAS;IACjB,IAAI,CAACX,IAAI,CAACW,KAAK,CAAC,CAAC;EACrB;EAEOC,MAAMA,CAAA,EAAS;IAClB,IAAI,CAACZ,IAAI,CAACY,MAAM,CAAC,CAAC;EACtB;AACJ;AAACC,OAAA,CAAAX,OAAA,GAAAd,gBAAA"}