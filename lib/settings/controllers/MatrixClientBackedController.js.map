{"version":3,"file":"MatrixClientBackedController.js","names":["_SettingController","_interopRequireDefault","require","MatrixClientBackedController","SettingController","matrixClient","client","oldClient","_matrixClient","instance","instances","initMatrixClient","constructor","push","exports","default","_defineProperty2"],"sources":["../../../src/settings/controllers/MatrixClientBackedController.ts"],"sourcesContent":["/*\r\nCopyright 2023 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { MatrixClient } from \"matrix-js-sdk/src/client\";\r\n\r\nimport SettingController from \"./SettingController\";\r\n\r\n// Dev note: This whole class exists in the event someone logs out and back in - we want\r\n// to make sure the right MatrixClient is listening for changes.\r\n\r\n/**\r\n * Represents the base class for settings controllers which need access to a MatrixClient.\r\n * This class performs no logic and should be overridden.\r\n */\r\nexport default abstract class MatrixClientBackedController extends SettingController {\r\n    private static _matrixClient: MatrixClient;\r\n    private static instances: MatrixClientBackedController[] = [];\r\n\r\n    public static set matrixClient(client: MatrixClient) {\r\n        const oldClient = MatrixClientBackedController._matrixClient;\r\n        MatrixClientBackedController._matrixClient = client;\r\n\r\n        for (const instance of MatrixClientBackedController.instances) {\r\n            instance.initMatrixClient(oldClient, client);\r\n        }\r\n    }\r\n\r\n    protected constructor() {\r\n        super();\r\n\r\n        MatrixClientBackedController.instances.push(this);\r\n    }\r\n\r\n    public get client(): MatrixClient {\r\n        return MatrixClientBackedController._matrixClient;\r\n    }\r\n\r\n    protected abstract initMatrixClient(oldClient: MatrixClient, newClient: MatrixClient): void;\r\n}\r\n"],"mappings":";;;;;;;;AAkBA,IAAAA,kBAAA,GAAAC,sBAAA,CAAAC,OAAA;AAlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AAEA;AACA;AACA;AACA;AACe,MAAeC,4BAA4B,SAASC,0BAAiB,CAAC;EAIjF,WAAkBC,YAAYA,CAACC,MAAoB,EAAE;IACjD,MAAMC,SAAS,GAAGJ,4BAA4B,CAACK,aAAa;IAC5DL,4BAA4B,CAACK,aAAa,GAAGF,MAAM;IAEnD,KAAK,MAAMG,QAAQ,IAAIN,4BAA4B,CAACO,SAAS,EAAE;MAC3DD,QAAQ,CAACE,gBAAgB,CAACJ,SAAS,EAAED,MAAM,CAAC;IAChD;EACJ;EAEUM,WAAWA,CAAA,EAAG;IACpB,KAAK,CAAC,CAAC;IAEPT,4BAA4B,CAACO,SAAS,CAACG,IAAI,CAAC,IAAI,CAAC;EACrD;EAEA,IAAWP,MAAMA,CAAA,EAAiB;IAC9B,OAAOH,4BAA4B,CAACK,aAAa;EACrD;AAGJ;AAACM,OAAA,CAAAC,OAAA,GAAAZ,4BAAA;AAAA,IAAAa,gBAAA,CAAAD,OAAA,EAxB6BZ,4BAA4B;AAAA,IAAAa,gBAAA,CAAAD,OAAA,EAA5BZ,4BAA4B,eAEK,EAAE"}