{"version":3,"file":"SlidingSyncController.js","names":["_SettingController","_interopRequireDefault","require","_PlatformPeg","_SlidingSyncOptionsDialog","_Modal","_SettingsStore","_languageHandler","SlidingSyncController","SettingController","beforeChange","level","roomId","newValue","finished","Modal","createDialog","SlidingSyncOptionsDialog","value","onChange","PlatformPeg","get","reload","settingDisabled","SettingsStore","getValue","_t","exports","default"],"sources":["../../../src/settings/controllers/SlidingSyncController.ts"],"sourcesContent":["/*\r\nCopyright 2022 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport SettingController from \"./SettingController\";\r\nimport PlatformPeg from \"../../PlatformPeg\";\r\nimport { SettingLevel } from \"../SettingLevel\";\r\nimport { SlidingSyncOptionsDialog } from \"../../components/views/dialogs/SlidingSyncOptionsDialog\";\r\nimport Modal from \"../../Modal\";\r\nimport SettingsStore from \"../SettingsStore\";\r\nimport { _t } from \"../../languageHandler\";\r\n\r\nexport default class SlidingSyncController extends SettingController {\r\n    public async beforeChange(level: SettingLevel, roomId: string, newValue: any): Promise<boolean> {\r\n        const { finished } = Modal.createDialog(SlidingSyncOptionsDialog);\r\n        const [value] = await finished;\r\n        return newValue === value; // abort the operation if we're already in the state the user chose via modal\r\n    }\r\n\r\n    public async onChange(): Promise<void> {\r\n        PlatformPeg.get()?.reload();\r\n    }\r\n\r\n    public get settingDisabled(): boolean | string {\r\n        // Cannot be disabled once enabled, user has been warned and must log out and back in.\r\n        if (SettingsStore.getValue(\"feature_sliding_sync\")) {\r\n            return _t(\"Log out and back in to disable\");\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n"],"mappings":";;;;;;;AAgBA,IAAAA,kBAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAF,sBAAA,CAAAC,OAAA;AAEA,IAAAE,yBAAA,GAAAF,OAAA;AACA,IAAAG,MAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,cAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,gBAAA,GAAAL,OAAA;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAUe,MAAMM,qBAAqB,SAASC,0BAAiB,CAAC;EACjE,MAAaC,YAAYA,CAACC,KAAmB,EAAEC,MAAc,EAAEC,QAAa,EAAoB;IAC5F,MAAM;MAAEC;IAAS,CAAC,GAAGC,cAAK,CAACC,YAAY,CAACC,kDAAwB,CAAC;IACjE,MAAM,CAACC,KAAK,CAAC,GAAG,MAAMJ,QAAQ;IAC9B,OAAOD,QAAQ,KAAKK,KAAK,CAAC,CAAC;EAC/B;;EAEA,MAAaC,QAAQA,CAAA,EAAkB;IACnCC,oBAAW,CAACC,GAAG,CAAC,CAAC,EAAEC,MAAM,CAAC,CAAC;EAC/B;EAEA,IAAWC,eAAeA,CAAA,EAAqB;IAC3C;IACA,IAAIC,sBAAa,CAACC,QAAQ,CAAC,sBAAsB,CAAC,EAAE;MAChD,OAAO,IAAAC,mBAAE,EAAC,gCAAgC,CAAC;IAC/C;IAEA,OAAO,KAAK;EAChB;AACJ;AAACC,OAAA,CAAAC,OAAA,GAAApB,qBAAA"}