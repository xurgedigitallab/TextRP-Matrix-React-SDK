{"version":3,"file":"NotificationControllers.js","names":["_logger","require","_pushprocessor","_PushRules","_SettingController","_interopRequireDefault","_MatrixClientPeg","isPushNotifyDisabled","processor","PushProcessor","MatrixClientPeg","get","masterRule","getPushRuleById","logger","warn","enabled","actions","includes","PushRuleActionName","Notify","getNotifier","Notifier","default","NotificationsEnabledController","SettingController","getValueOverride","level","roomId","calculatedValue","calculatedAtLevel","isPossible","onChange","newValue","supportsDesktopNotifications","setEnabled","exports","NotificationBodyEnabledController"],"sources":["../../../src/settings/controllers/NotificationControllers.ts"],"sourcesContent":["/*\r\nCopyright 2017 Travis Ralston\r\nCopyright 2020 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { logger } from \"matrix-js-sdk/src/logger\";\r\n// XXX: This feels wrong.\r\nimport { PushProcessor } from \"matrix-js-sdk/src/pushprocessor\";\r\nimport { PushRuleActionName } from \"matrix-js-sdk/src/@types/PushRules\";\r\n\r\nimport SettingController from \"./SettingController\";\r\nimport { MatrixClientPeg } from \"../../MatrixClientPeg\";\r\nimport { SettingLevel } from \"../SettingLevel\";\r\n\r\n// .m.rule.master being enabled means all events match that push rule\r\n// default action on this rule is dont_notify, but it could be something else\r\nexport function isPushNotifyDisabled(): boolean {\r\n    // Return the value of the master push rule as a default\r\n    const processor = new PushProcessor(MatrixClientPeg.get());\r\n    const masterRule = processor.getPushRuleById(\".m.rule.master\");\r\n\r\n    if (!masterRule) {\r\n        logger.warn(\"No master push rule! Notifications are disabled for this user.\");\r\n        return true;\r\n    }\r\n\r\n    // If the rule is enabled then check it does not notify on everything\r\n    return masterRule.enabled && !masterRule.actions.includes(PushRuleActionName.Notify);\r\n}\r\n\r\nfunction getNotifier(): any {\r\n    // TODO: [TS] Formal type that doesn't cause a cyclical reference.\r\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n    let Notifier = require(\"../../Notifier\"); // avoids cyclical references\r\n    if (Notifier.default) Notifier = Notifier.default; // correct for webpack require() weirdness\r\n    return Notifier;\r\n}\r\n\r\nexport class NotificationsEnabledController extends SettingController {\r\n    public getValueOverride(\r\n        level: SettingLevel,\r\n        roomId: string,\r\n        calculatedValue: any,\r\n        calculatedAtLevel: SettingLevel | null,\r\n    ): any {\r\n        if (!getNotifier().isPossible()) return false;\r\n\r\n        if (calculatedValue === null || calculatedAtLevel === \"default\") {\r\n            return !isPushNotifyDisabled();\r\n        }\r\n\r\n        return calculatedValue;\r\n    }\r\n\r\n    public onChange(level: SettingLevel, roomId: string, newValue: any): void {\r\n        if (getNotifier().supportsDesktopNotifications()) {\r\n            getNotifier().setEnabled(newValue);\r\n        }\r\n    }\r\n}\r\n\r\nexport class NotificationBodyEnabledController extends SettingController {\r\n    public getValueOverride(level: SettingLevel, roomId: string, calculatedValue: any): any {\r\n        if (!getNotifier().isPossible()) return false;\r\n\r\n        if (calculatedValue === null) {\r\n            return !isPushNotifyDisabled();\r\n        }\r\n\r\n        return calculatedValue;\r\n    }\r\n}\r\n"],"mappings":";;;;;;;;AAiBA,IAAAA,OAAA,GAAAC,OAAA;AAEA,IAAAC,cAAA,GAAAD,OAAA;AACA,IAAAE,UAAA,GAAAF,OAAA;AAEA,IAAAG,kBAAA,GAAAC,sBAAA,CAAAJ,OAAA;AACA,IAAAK,gBAAA,GAAAL,OAAA;AAvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAQA;AACA;AACO,SAASM,oBAAoBA,CAAA,EAAY;EAC5C;EACA,MAAMC,SAAS,GAAG,IAAIC,4BAAa,CAACC,gCAAe,CAACC,GAAG,CAAC,CAAC,CAAC;EAC1D,MAAMC,UAAU,GAAGJ,SAAS,CAACK,eAAe,CAAC,gBAAgB,CAAC;EAE9D,IAAI,CAACD,UAAU,EAAE;IACbE,cAAM,CAACC,IAAI,CAAC,gEAAgE,CAAC;IAC7E,OAAO,IAAI;EACf;;EAEA;EACA,OAAOH,UAAU,CAACI,OAAO,IAAI,CAACJ,UAAU,CAACK,OAAO,CAACC,QAAQ,CAACC,6BAAkB,CAACC,MAAM,CAAC;AACxF;AAEA,SAASC,WAAWA,CAAA,EAAQ;EACxB;EACA;EACA,IAAIC,QAAQ,GAAGrB,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;EAC1C,IAAIqB,QAAQ,CAACC,OAAO,EAAED,QAAQ,GAAGA,QAAQ,CAACC,OAAO,CAAC,CAAC;EACnD,OAAOD,QAAQ;AACnB;AAEO,MAAME,8BAA8B,SAASC,0BAAiB,CAAC;EAC3DC,gBAAgBA,CACnBC,KAAmB,EACnBC,MAAc,EACdC,eAAoB,EACpBC,iBAAsC,EACnC;IACH,IAAI,CAACT,WAAW,CAAC,CAAC,CAACU,UAAU,CAAC,CAAC,EAAE,OAAO,KAAK;IAE7C,IAAIF,eAAe,KAAK,IAAI,IAAIC,iBAAiB,KAAK,SAAS,EAAE;MAC7D,OAAO,CAACvB,oBAAoB,CAAC,CAAC;IAClC;IAEA,OAAOsB,eAAe;EAC1B;EAEOG,QAAQA,CAACL,KAAmB,EAAEC,MAAc,EAAEK,QAAa,EAAQ;IACtE,IAAIZ,WAAW,CAAC,CAAC,CAACa,4BAA4B,CAAC,CAAC,EAAE;MAC9Cb,WAAW,CAAC,CAAC,CAACc,UAAU,CAACF,QAAQ,CAAC;IACtC;EACJ;AACJ;AAACG,OAAA,CAAAZ,8BAAA,GAAAA,8BAAA;AAEM,MAAMa,iCAAiC,SAASZ,0BAAiB,CAAC;EAC9DC,gBAAgBA,CAACC,KAAmB,EAAEC,MAAc,EAAEC,eAAoB,EAAO;IACpF,IAAI,CAACR,WAAW,CAAC,CAAC,CAACU,UAAU,CAAC,CAAC,EAAE,OAAO,KAAK;IAE7C,IAAIF,eAAe,KAAK,IAAI,EAAE;MAC1B,OAAO,CAACtB,oBAAoB,CAAC,CAAC;IAClC;IAEA,OAAOsB,eAAe;EAC1B;AACJ;AAACO,OAAA,CAAAC,iCAAA,GAAAA,iCAAA"}