{"version":3,"file":"UIFeatureController.js","names":["_SettingController","_interopRequireDefault","require","_SettingsStore","UIFeatureController","SettingController","constructor","uiFeatureName","forcedValue","arguments","length","undefined","getValueOverride","level","roomId","calculatedValue","calculatedAtLevel","settingDisabled","SettingsStore","getValue","exports","default"],"sources":["../../../src/settings/controllers/UIFeatureController.ts"],"sourcesContent":["/*\r\nCopyright 2020 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport SettingController from \"./SettingController\";\r\nimport { SettingLevel } from \"../SettingLevel\";\r\nimport SettingsStore from \"../SettingsStore\";\r\n\r\n/**\r\n * Enforces that a boolean setting cannot be enabled if the corresponding\r\n * UI feature is disabled. If the UI feature is enabled, the setting value\r\n * is unchanged.\r\n *\r\n * Settings using this controller are assumed to return `false` when disabled.\r\n */\r\nexport default class UIFeatureController extends SettingController {\r\n    public constructor(private uiFeatureName: string, private forcedValue = false) {\r\n        super();\r\n    }\r\n\r\n    public getValueOverride(\r\n        level: SettingLevel,\r\n        roomId: string,\r\n        calculatedValue: any,\r\n        calculatedAtLevel: SettingLevel | null,\r\n    ): any {\r\n        if (this.settingDisabled) {\r\n            // per the docs: we force a disabled state when the feature isn't active\r\n            return this.forcedValue;\r\n        }\r\n        return null; // no override\r\n    }\r\n\r\n    public get settingDisabled(): boolean {\r\n        return !SettingsStore.getValue(this.uiFeatureName);\r\n    }\r\n}\r\n"],"mappings":";;;;;;;AAgBA,IAAAA,kBAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAAC,cAAA,GAAAF,sBAAA,CAAAC,OAAA;AAlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAME,mBAAmB,SAASC,0BAAiB,CAAC;EACxDC,WAAWA,CAASC,aAAqB,EAA+B;IAAA,IAArBC,WAAW,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;IACzE,KAAK,CAAC,CAAC;IAAC,KADeF,aAAqB,GAArBA,aAAqB;IAAA,KAAUC,WAAW,GAAXA,WAAW;EAErE;EAEOI,gBAAgBA,CACnBC,KAAmB,EACnBC,MAAc,EACdC,eAAoB,EACpBC,iBAAsC,EACnC;IACH,IAAI,IAAI,CAACC,eAAe,EAAE;MACtB;MACA,OAAO,IAAI,CAACT,WAAW;IAC3B;IACA,OAAO,IAAI,CAAC,CAAC;EACjB;;EAEA,IAAWS,eAAeA,CAAA,EAAY;IAClC,OAAO,CAACC,sBAAa,CAACC,QAAQ,CAAC,IAAI,CAACZ,aAAa,CAAC;EACtD;AACJ;AAACa,OAAA,CAAAC,OAAA,GAAAjB,mBAAA"}