{"version":3,"file":"DeviceSettingsHandler.js","names":["_SettingLevel","require","_AbstractLocalStorageSettingsHandler","_interopRequireDefault","DeviceSettingsHandler","AbstractLocalStorageSettingsHandler","constructor","featureNames","watchers","getValue","settingName","roomId","includes","readFeature","getBoolean","settings","getSettings","setValue","newValue","writeFeature","Promise","resolve","setBoolean","notifyUpdate","SettingLevel","DEVICE","setObject","canSetValue","watchSetting","cb","unwatchSetting","getObject","featureName","enabled","exports","default"],"sources":["../../../src/settings/handlers/DeviceSettingsHandler.ts"],"sourcesContent":["/*\r\nCopyright 2017 Travis Ralston\r\nCopyright 2019 New Vector Ltd.\r\nCopyright 2019 - 2022 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { SettingLevel } from \"../SettingLevel\";\r\nimport { CallbackFn, WatchManager } from \"../WatchManager\";\r\nimport AbstractLocalStorageSettingsHandler from \"./AbstractLocalStorageSettingsHandler\";\r\n\r\n/**\r\n * Gets and sets settings at the \"device\" level for the current device.\r\n * This handler does not make use of the roomId parameter. This handler\r\n * will special-case features to support legacy settings.\r\n */\r\nexport default class DeviceSettingsHandler extends AbstractLocalStorageSettingsHandler {\r\n    /**\r\n     * Creates a new device settings handler\r\n     * @param {string[]} featureNames The names of known features.\r\n     * @param {WatchManager} watchers The watch manager to notify updates to\r\n     */\r\n    public constructor(private featureNames: string[], public readonly watchers: WatchManager) {\r\n        super();\r\n    }\r\n\r\n    public getValue(settingName: string, roomId: string): any {\r\n        if (this.featureNames.includes(settingName)) {\r\n            return this.readFeature(settingName);\r\n        }\r\n\r\n        // Special case notifications\r\n        if (settingName === \"notificationsEnabled\") {\r\n            return this.getBoolean(\"notifications_enabled\");\r\n        } else if (settingName === \"notificationBodyEnabled\") {\r\n            return this.getBoolean(\"notifications_body_enabled\");\r\n        } else if (settingName === \"audioNotificationsEnabled\") {\r\n            return this.getBoolean(\"audio_notifications_enabled\");\r\n        }\r\n\r\n        const settings = this.getSettings() || {};\r\n        return settings[settingName];\r\n    }\r\n\r\n    public setValue(settingName: string, roomId: string, newValue: any): Promise<void> {\r\n        if (this.featureNames.includes(settingName)) {\r\n            this.writeFeature(settingName, newValue);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        // Special case notifications\r\n        if (settingName === \"notificationsEnabled\") {\r\n            this.setBoolean(\"notifications_enabled\", newValue);\r\n            this.watchers.notifyUpdate(settingName, null, SettingLevel.DEVICE, newValue);\r\n            return Promise.resolve();\r\n        } else if (settingName === \"notificationBodyEnabled\") {\r\n            this.setBoolean(\"notifications_body_enabled\", newValue);\r\n            this.watchers.notifyUpdate(settingName, null, SettingLevel.DEVICE, newValue);\r\n            return Promise.resolve();\r\n        } else if (settingName === \"audioNotificationsEnabled\") {\r\n            this.setBoolean(\"audio_notifications_enabled\", newValue);\r\n            this.watchers.notifyUpdate(settingName, null, SettingLevel.DEVICE, newValue);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        // Special case for old useIRCLayout setting\r\n        if (settingName === \"layout\") {\r\n            const settings = this.getSettings() || {};\r\n\r\n            delete settings[\"useIRCLayout\"];\r\n            settings[\"layout\"] = newValue;\r\n            this.setObject(\"mx_local_settings\", settings);\r\n\r\n            this.watchers.notifyUpdate(settingName, null, SettingLevel.DEVICE, newValue);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        const settings = this.getSettings() || {};\r\n        settings[settingName] = newValue;\r\n        this.setObject(\"mx_local_settings\", settings);\r\n        this.watchers.notifyUpdate(settingName, null, SettingLevel.DEVICE, newValue);\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public canSetValue(settingName: string, roomId: string): boolean {\r\n        return true; // It's their device, so they should be able to\r\n    }\r\n\r\n    public watchSetting(settingName: string, roomId: string, cb: CallbackFn): void {\r\n        this.watchers.watchSetting(settingName, roomId, cb);\r\n    }\r\n\r\n    public unwatchSetting(cb: CallbackFn): void {\r\n        this.watchers.unwatchSetting(cb);\r\n    }\r\n\r\n    private getSettings(): any {\r\n        // TODO: [TS] Type return\r\n        return this.getObject(\"mx_local_settings\");\r\n    }\r\n\r\n    // Note: features intentionally don't use the same key as settings to avoid conflicts\r\n    // and to be backwards compatible.\r\n\r\n    // public for access to migrations - not exposed from the SettingsHandler interface\r\n    public readFeature(featureName: string): boolean | null {\r\n        // Previously, we disabled all features for guests, but since different\r\n        // installations can have site-specific config files which might set up\r\n        // different behaviour that is relevant to guests, we removed that\r\n        // special behaviour. See\r\n        // https://github.com/vector-im/element-web/issues/24513 for the\r\n        // discussion.\r\n\r\n        // XXX: This turns they key names into `mx_labs_feature_feature_x` (double feature).\r\n        // This is because all feature names start with `feature_` as a matter of policy.\r\n        // Oh well.\r\n        return this.getBoolean(\"mx_labs_feature_\" + featureName);\r\n    }\r\n\r\n    private writeFeature(featureName: string, enabled: boolean | null): void {\r\n        this.setBoolean(\"mx_labs_feature_\" + featureName, enabled);\r\n        this.watchers.notifyUpdate(featureName, null, SettingLevel.DEVICE, enabled);\r\n    }\r\n}\r\n"],"mappings":"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"}