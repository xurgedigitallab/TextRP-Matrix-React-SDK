{"version":3,"file":"RoomDeviceSettingsHandler.js","names":["_utils","require","_SettingLevel","_AbstractLocalStorageSettingsHandler","_interopRequireDefault","RoomDeviceSettingsHandler","AbstractLocalStorageSettingsHandler","constructor","watchers","getValue","settingName","roomId","value","read","getKey","setValue","newValue","safeSet","setObject","notifyUpdate","SettingLevel","ROOM_DEVICE","Promise","resolve","removeItem","canSetValue","key","getObject","exports","default"],"sources":["../../../src/settings/handlers/RoomDeviceSettingsHandler.ts"],"sourcesContent":["/*\r\nCopyright 2017 Travis Ralston\r\nCopyright 2019, 2020 - 2022 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { safeSet } from \"matrix-js-sdk/src/utils\";\r\n\r\nimport { SettingLevel } from \"../SettingLevel\";\r\nimport { WatchManager } from \"../WatchManager\";\r\nimport AbstractLocalStorageSettingsHandler from \"./AbstractLocalStorageSettingsHandler\";\r\n\r\n/**\r\n * Gets and sets settings at the \"room-device\" level for the current device in a particular\r\n * room.\r\n */\r\nexport default class RoomDeviceSettingsHandler extends AbstractLocalStorageSettingsHandler {\r\n    public constructor(public readonly watchers: WatchManager) {\r\n        super();\r\n    }\r\n\r\n    public getValue(settingName: string, roomId: string): any {\r\n        // Special case blacklist setting to use legacy values\r\n        if (settingName === \"blacklistUnverifiedDevices\") {\r\n            const value = this.read(\"mx_local_settings\");\r\n            if (value?.[\"blacklistUnverifiedDevicesPerRoom\"]) {\r\n                return value[\"blacklistUnverifiedDevicesPerRoom\"][roomId];\r\n            }\r\n        }\r\n\r\n        const value = this.read(this.getKey(settingName, roomId));\r\n        if (value) return value.value;\r\n        return null;\r\n    }\r\n\r\n    public setValue(settingName: string, roomId: string, newValue: any): Promise<void> {\r\n        // Special case blacklist setting for legacy structure\r\n        if (settingName === \"blacklistUnverifiedDevices\") {\r\n            let value = this.read(\"mx_local_settings\");\r\n            if (!value) value = {};\r\n            if (!value[\"blacklistUnverifiedDevicesPerRoom\"]) value[\"blacklistUnverifiedDevicesPerRoom\"] = {};\r\n            safeSet(value[\"blacklistUnverifiedDevicesPerRoom\"], roomId, newValue);\r\n            this.setObject(\"mx_local_settings\", value);\r\n            this.watchers.notifyUpdate(settingName, roomId, SettingLevel.ROOM_DEVICE, newValue);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (newValue === null) {\r\n            this.removeItem(this.getKey(settingName, roomId));\r\n        } else {\r\n            this.setObject(this.getKey(settingName, roomId), { value: newValue });\r\n        }\r\n\r\n        this.watchers.notifyUpdate(settingName, roomId, SettingLevel.ROOM_DEVICE, newValue);\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public canSetValue(settingName: string, roomId: string): boolean {\r\n        return true; // It's their device, so they should be able to\r\n    }\r\n\r\n    private read(key: string): any {\r\n        return this.getObject(key);\r\n    }\r\n\r\n    private getKey(settingName: string, roomId: string): string {\r\n        return \"mx_setting_\" + settingName + \"_\" + roomId;\r\n    }\r\n}\r\n"],"mappings":";;;;;;;AAiBA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,aAAA,GAAAD,OAAA;AAEA,IAAAE,oCAAA,GAAAC,sBAAA,CAAAH,OAAA;AArBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;AACe,MAAMI,yBAAyB,SAASC,4CAAmC,CAAC;EAChFC,WAAWA,CAAiBC,QAAsB,EAAE;IACvD,KAAK,CAAC,CAAC;IAAC,KADuBA,QAAsB,GAAtBA,QAAsB;EAEzD;EAEOC,QAAQA,CAACC,WAAmB,EAAEC,MAAc,EAAO;IACtD;IACA,IAAID,WAAW,KAAK,4BAA4B,EAAE;MAC9C,MAAME,KAAK,GAAG,IAAI,CAACC,IAAI,CAAC,mBAAmB,CAAC;MAC5C,IAAID,KAAK,GAAG,mCAAmC,CAAC,EAAE;QAC9C,OAAOA,KAAK,CAAC,mCAAmC,CAAC,CAACD,MAAM,CAAC;MAC7D;IACJ;IAEA,MAAMC,KAAK,GAAG,IAAI,CAACC,IAAI,CAAC,IAAI,CAACC,MAAM,CAACJ,WAAW,EAAEC,MAAM,CAAC,CAAC;IACzD,IAAIC,KAAK,EAAE,OAAOA,KAAK,CAACA,KAAK;IAC7B,OAAO,IAAI;EACf;EAEOG,QAAQA,CAACL,WAAmB,EAAEC,MAAc,EAAEK,QAAa,EAAiB;IAC/E;IACA,IAAIN,WAAW,KAAK,4BAA4B,EAAE;MAC9C,IAAIE,KAAK,GAAG,IAAI,CAACC,IAAI,CAAC,mBAAmB,CAAC;MAC1C,IAAI,CAACD,KAAK,EAAEA,KAAK,GAAG,CAAC,CAAC;MACtB,IAAI,CAACA,KAAK,CAAC,mCAAmC,CAAC,EAAEA,KAAK,CAAC,mCAAmC,CAAC,GAAG,CAAC,CAAC;MAChG,IAAAK,cAAO,EAACL,KAAK,CAAC,mCAAmC,CAAC,EAAED,MAAM,EAAEK,QAAQ,CAAC;MACrE,IAAI,CAACE,SAAS,CAAC,mBAAmB,EAAEN,KAAK,CAAC;MAC1C,IAAI,CAACJ,QAAQ,CAACW,YAAY,CAACT,WAAW,EAAEC,MAAM,EAAES,0BAAY,CAACC,WAAW,EAAEL,QAAQ,CAAC;MACnF,OAAOM,OAAO,CAACC,OAAO,CAAC,CAAC;IAC5B;IAEA,IAAIP,QAAQ,KAAK,IAAI,EAAE;MACnB,IAAI,CAACQ,UAAU,CAAC,IAAI,CAACV,MAAM,CAACJ,WAAW,EAAEC,MAAM,CAAC,CAAC;IACrD,CAAC,MAAM;MACH,IAAI,CAACO,SAAS,CAAC,IAAI,CAACJ,MAAM,CAACJ,WAAW,EAAEC,MAAM,CAAC,EAAE;QAAEC,KAAK,EAAEI;MAAS,CAAC,CAAC;IACzE;IAEA,IAAI,CAACR,QAAQ,CAACW,YAAY,CAACT,WAAW,EAAEC,MAAM,EAAES,0BAAY,CAACC,WAAW,EAAEL,QAAQ,CAAC;IACnF,OAAOM,OAAO,CAACC,OAAO,CAAC,CAAC;EAC5B;EAEOE,WAAWA,CAACf,WAAmB,EAAEC,MAAc,EAAW;IAC7D,OAAO,IAAI,CAAC,CAAC;EACjB;;EAEQE,IAAIA,CAACa,GAAW,EAAO;IAC3B,OAAO,IAAI,CAACC,SAAS,CAACD,GAAG,CAAC;EAC9B;EAEQZ,MAAMA,CAACJ,WAAmB,EAAEC,MAAc,EAAU;IACxD,OAAO,aAAa,GAAGD,WAAW,GAAG,GAAG,GAAGC,MAAM;EACrD;AACJ;AAACiB,OAAA,CAAAC,OAAA,GAAAxB,yBAAA"}