{"version":3,"file":"RoomSettingsHandler.js","names":["_roomState","require","_utils","_MatrixClientBackedSettingsHandler","_interopRequireDefault","_objects","_SettingLevel","DEFAULT_SETTINGS_EVENT_TYPE","RoomSettingsHandler","MatrixClientBackedSettingsHandler","constructor","watchers","_defineProperty2","default","event","state","prevEvent","roomId","getRoomId","room","client","getRoom","currentState","getType","val","getContent","notifyUpdate","SettingLevel","ROOM","prevContent","changedSettings","objectKeyChanges","settingName","initMatrixClient","oldClient","newClient","removeListener","RoomStateEvent","Events","onEvent","on","getValue","content","getSettings","settings","sendStateEvent","eventType","field","value","event_id","eventId","deferred","defer","handler","getId","off","resolve","promise","setValue","newValue","canSetValue","maySendStateEvent","getUserId","isSupported","arguments","length","undefined","getStateEvents","objectClone","exports"],"sources":["../../../src/settings/handlers/RoomSettingsHandler.ts"],"sourcesContent":["/*\r\nCopyright 2017 Travis Ralston\r\nCopyright 2019, 2020 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { MatrixClient } from \"matrix-js-sdk/src/client\";\r\nimport { MatrixEvent } from \"matrix-js-sdk/src/models/event\";\r\nimport { RoomState, RoomStateEvent } from \"matrix-js-sdk/src/models/room-state\";\r\nimport { defer } from \"matrix-js-sdk/src/utils\";\r\n\r\nimport MatrixClientBackedSettingsHandler from \"./MatrixClientBackedSettingsHandler\";\r\nimport { objectClone, objectKeyChanges } from \"../../utils/objects\";\r\nimport { SettingLevel } from \"../SettingLevel\";\r\nimport { WatchManager } from \"../WatchManager\";\r\n\r\nconst DEFAULT_SETTINGS_EVENT_TYPE = \"im.vector.web.settings\";\r\n\r\n/**\r\n * Gets and sets settings at the \"room\" level.\r\n */\r\nexport default class RoomSettingsHandler extends MatrixClientBackedSettingsHandler {\r\n    public constructor(public readonly watchers: WatchManager) {\r\n        super();\r\n    }\r\n\r\n    protected initMatrixClient(oldClient: MatrixClient, newClient: MatrixClient): void {\r\n        if (oldClient) {\r\n            oldClient.removeListener(RoomStateEvent.Events, this.onEvent);\r\n        }\r\n\r\n        newClient.on(RoomStateEvent.Events, this.onEvent);\r\n    }\r\n\r\n    private onEvent = (event: MatrixEvent, state: RoomState, prevEvent: MatrixEvent | null): void => {\r\n        const roomId = event.getRoomId()!;\r\n        const room = this.client.getRoom(roomId);\r\n\r\n        // Note: in tests and during the encryption setup on initial load we might not have\r\n        // rooms in the store, so we just quietly ignore the problem. If we log it then we'll\r\n        // just end up spamming the logs a few thousand times. It is perfectly fine for us\r\n        // to ignore the problem as the app will not have loaded enough to care yet.\r\n        if (!room) return;\r\n\r\n        // ignore state updates which are not current\r\n        if (room && state !== room.currentState) return;\r\n\r\n        if (event.getType() === \"org.matrix.room.preview_urls\") {\r\n            let val = event.getContent()[\"disable\"];\r\n            if (typeof val !== \"boolean\") {\r\n                val = null;\r\n            } else {\r\n                val = !val;\r\n            }\r\n\r\n            this.watchers.notifyUpdate(\"urlPreviewsEnabled\", roomId, SettingLevel.ROOM, val);\r\n        } else if (event.getType() === DEFAULT_SETTINGS_EVENT_TYPE) {\r\n            // Figure out what changed and fire those updates\r\n            const prevContent = prevEvent?.getContent() ?? {};\r\n            const changedSettings = objectKeyChanges<Record<string, any>>(prevContent, event.getContent());\r\n            for (const settingName of changedSettings) {\r\n                this.watchers.notifyUpdate(settingName, roomId, SettingLevel.ROOM, event.getContent()[settingName]);\r\n            }\r\n        }\r\n    };\r\n\r\n    public getValue(settingName: string, roomId: string): any {\r\n        // Special case URL previews\r\n        if (settingName === \"urlPreviewsEnabled\") {\r\n            const content = this.getSettings(roomId, \"org.matrix.room.preview_urls\") || {};\r\n\r\n            // Check to make sure that we actually got a boolean\r\n            if (typeof content[\"disable\"] !== \"boolean\") return null;\r\n            return !content[\"disable\"];\r\n        }\r\n\r\n        const settings = this.getSettings(roomId) || {};\r\n        return settings[settingName];\r\n    }\r\n\r\n    // helper function to send state event then await it being echoed back\r\n    private async sendStateEvent(roomId: string, eventType: string, field: string, value: any): Promise<void> {\r\n        const content = this.getSettings(roomId, eventType) || {};\r\n        content[field] = value;\r\n\r\n        const { event_id: eventId } = await this.client.sendStateEvent(roomId, eventType, content);\r\n\r\n        const deferred = defer<void>();\r\n        const handler = (event: MatrixEvent): void => {\r\n            if (event.getId() !== eventId) return;\r\n            this.client.off(RoomStateEvent.Events, handler);\r\n            deferred.resolve();\r\n        };\r\n        this.client.on(RoomStateEvent.Events, handler);\r\n\r\n        await deferred.promise;\r\n    }\r\n\r\n    public setValue(settingName: string, roomId: string, newValue: any): Promise<void> {\r\n        switch (settingName) {\r\n            // Special case URL previews\r\n            case \"urlPreviewsEnabled\":\r\n                return this.sendStateEvent(roomId, \"org.matrix.room.preview_urls\", \"disable\", !newValue);\r\n\r\n            default:\r\n                return this.sendStateEvent(roomId, DEFAULT_SETTINGS_EVENT_TYPE, settingName, newValue);\r\n        }\r\n    }\r\n\r\n    public canSetValue(settingName: string, roomId: string): boolean {\r\n        const room = this.client.getRoom(roomId);\r\n\r\n        let eventType = DEFAULT_SETTINGS_EVENT_TYPE;\r\n        if (settingName === \"urlPreviewsEnabled\") eventType = \"org.matrix.room.preview_urls\";\r\n\r\n        return room?.currentState.maySendStateEvent(eventType, this.client.getUserId()!) ?? false;\r\n    }\r\n\r\n    public isSupported(): boolean {\r\n        return !!this.client;\r\n    }\r\n\r\n    private getSettings(roomId: string, eventType = DEFAULT_SETTINGS_EVENT_TYPE): any {\r\n        const event = this.client.getRoom(roomId)?.currentState.getStateEvents(eventType, \"\");\r\n        if (!event?.getContent()) return null;\r\n        return objectClone(event.getContent()); // clone to prevent mutation\r\n    }\r\n}\r\n"],"mappings":";;;;;;;;AAmBA,IAAAA,UAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAEA,IAAAE,kCAAA,GAAAC,sBAAA,CAAAH,OAAA;AACA,IAAAI,QAAA,GAAAJ,OAAA;AACA,IAAAK,aAAA,GAAAL,OAAA;AAxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYA,MAAMM,2BAA2B,GAAG,wBAAwB;;AAE5D;AACA;AACA;AACe,MAAMC,mBAAmB,SAASC,0CAAiC,CAAC;EACxEC,WAAWA,CAAiBC,QAAsB,EAAE;IACvD,KAAK,CAAC,CAAC;IAAC,KADuBA,QAAsB,GAAtBA,QAAsB;IAAA,IAAAC,gBAAA,CAAAC,OAAA,mBAYvC,CAACC,KAAkB,EAAEC,KAAgB,EAAEC,SAA6B,KAAW;MAC7F,MAAMC,MAAM,GAAGH,KAAK,CAACI,SAAS,CAAC,CAAE;MACjC,MAAMC,IAAI,GAAG,IAAI,CAACC,MAAM,CAACC,OAAO,CAACJ,MAAM,CAAC;;MAExC;MACA;MACA;MACA;MACA,IAAI,CAACE,IAAI,EAAE;;MAEX;MACA,IAAIA,IAAI,IAAIJ,KAAK,KAAKI,IAAI,CAACG,YAAY,EAAE;MAEzC,IAAIR,KAAK,CAACS,OAAO,CAAC,CAAC,KAAK,8BAA8B,EAAE;QACpD,IAAIC,GAAG,GAAGV,KAAK,CAACW,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC;QACvC,IAAI,OAAOD,GAAG,KAAK,SAAS,EAAE;UAC1BA,GAAG,GAAG,IAAI;QACd,CAAC,MAAM;UACHA,GAAG,GAAG,CAACA,GAAG;QACd;QAEA,IAAI,CAACb,QAAQ,CAACe,YAAY,CAAC,oBAAoB,EAAET,MAAM,EAAEU,0BAAY,CAACC,IAAI,EAAEJ,GAAG,CAAC;MACpF,CAAC,MAAM,IAAIV,KAAK,CAACS,OAAO,CAAC,CAAC,KAAKhB,2BAA2B,EAAE;QACxD;QACA,MAAMsB,WAAW,GAAGb,SAAS,EAAES,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC;QACjD,MAAMK,eAAe,GAAG,IAAAC,yBAAgB,EAAsBF,WAAW,EAAEf,KAAK,CAACW,UAAU,CAAC,CAAC,CAAC;QAC9F,KAAK,MAAMO,WAAW,IAAIF,eAAe,EAAE;UACvC,IAAI,CAACnB,QAAQ,CAACe,YAAY,CAACM,WAAW,EAAEf,MAAM,EAAEU,0BAAY,CAACC,IAAI,EAAEd,KAAK,CAACW,UAAU,CAAC,CAAC,CAACO,WAAW,CAAC,CAAC;QACvG;MACJ;IACJ,CAAC;EAxCD;EAEUC,gBAAgBA,CAACC,SAAuB,EAAEC,SAAuB,EAAQ;IAC/E,IAAID,SAAS,EAAE;MACXA,SAAS,CAACE,cAAc,CAACC,yBAAc,CAACC,MAAM,EAAE,IAAI,CAACC,OAAO,CAAC;IACjE;IAEAJ,SAAS,CAACK,EAAE,CAACH,yBAAc,CAACC,MAAM,EAAE,IAAI,CAACC,OAAO,CAAC;EACrD;EAkCOE,QAAQA,CAACT,WAAmB,EAAEf,MAAc,EAAO;IACtD;IACA,IAAIe,WAAW,KAAK,oBAAoB,EAAE;MACtC,MAAMU,OAAO,GAAG,IAAI,CAACC,WAAW,CAAC1B,MAAM,EAAE,8BAA8B,CAAC,IAAI,CAAC,CAAC;;MAE9E;MACA,IAAI,OAAOyB,OAAO,CAAC,SAAS,CAAC,KAAK,SAAS,EAAE,OAAO,IAAI;MACxD,OAAO,CAACA,OAAO,CAAC,SAAS,CAAC;IAC9B;IAEA,MAAME,QAAQ,GAAG,IAAI,CAACD,WAAW,CAAC1B,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/C,OAAO2B,QAAQ,CAACZ,WAAW,CAAC;EAChC;;EAEA;EACA,MAAca,cAAcA,CAAC5B,MAAc,EAAE6B,SAAiB,EAAEC,KAAa,EAAEC,KAAU,EAAiB;IACtG,MAAMN,OAAO,GAAG,IAAI,CAACC,WAAW,CAAC1B,MAAM,EAAE6B,SAAS,CAAC,IAAI,CAAC,CAAC;IACzDJ,OAAO,CAACK,KAAK,CAAC,GAAGC,KAAK;IAEtB,MAAM;MAAEC,QAAQ,EAAEC;IAAQ,CAAC,GAAG,MAAM,IAAI,CAAC9B,MAAM,CAACyB,cAAc,CAAC5B,MAAM,EAAE6B,SAAS,EAAEJ,OAAO,CAAC;IAE1F,MAAMS,QAAQ,GAAG,IAAAC,YAAK,EAAO,CAAC;IAC9B,MAAMC,OAAO,GAAIvC,KAAkB,IAAW;MAC1C,IAAIA,KAAK,CAACwC,KAAK,CAAC,CAAC,KAAKJ,OAAO,EAAE;MAC/B,IAAI,CAAC9B,MAAM,CAACmC,GAAG,CAAClB,yBAAc,CAACC,MAAM,EAAEe,OAAO,CAAC;MAC/CF,QAAQ,CAACK,OAAO,CAAC,CAAC;IACtB,CAAC;IACD,IAAI,CAACpC,MAAM,CAACoB,EAAE,CAACH,yBAAc,CAACC,MAAM,EAAEe,OAAO,CAAC;IAE9C,MAAMF,QAAQ,CAACM,OAAO;EAC1B;EAEOC,QAAQA,CAAC1B,WAAmB,EAAEf,MAAc,EAAE0C,QAAa,EAAiB;IAC/E,QAAQ3B,WAAW;MACf;MACA,KAAK,oBAAoB;QACrB,OAAO,IAAI,CAACa,cAAc,CAAC5B,MAAM,EAAE,8BAA8B,EAAE,SAAS,EAAE,CAAC0C,QAAQ,CAAC;MAE5F;QACI,OAAO,IAAI,CAACd,cAAc,CAAC5B,MAAM,EAAEV,2BAA2B,EAAEyB,WAAW,EAAE2B,QAAQ,CAAC;IAC9F;EACJ;EAEOC,WAAWA,CAAC5B,WAAmB,EAAEf,MAAc,EAAW;IAC7D,MAAME,IAAI,GAAG,IAAI,CAACC,MAAM,CAACC,OAAO,CAACJ,MAAM,CAAC;IAExC,IAAI6B,SAAS,GAAGvC,2BAA2B;IAC3C,IAAIyB,WAAW,KAAK,oBAAoB,EAAEc,SAAS,GAAG,8BAA8B;IAEpF,OAAO3B,IAAI,EAAEG,YAAY,CAACuC,iBAAiB,CAACf,SAAS,EAAE,IAAI,CAAC1B,MAAM,CAAC0C,SAAS,CAAC,CAAE,CAAC,IAAI,KAAK;EAC7F;EAEOC,WAAWA,CAAA,EAAY;IAC1B,OAAO,CAAC,CAAC,IAAI,CAAC3C,MAAM;EACxB;EAEQuB,WAAWA,CAAC1B,MAAc,EAAgD;IAAA,IAA9C6B,SAAS,GAAAkB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGzD,2BAA2B;IACvE,MAAMO,KAAK,GAAG,IAAI,CAACM,MAAM,CAACC,OAAO,CAACJ,MAAM,CAAC,EAAEK,YAAY,CAAC6C,cAAc,CAACrB,SAAS,EAAE,EAAE,CAAC;IACrF,IAAI,CAAChC,KAAK,EAAEW,UAAU,CAAC,CAAC,EAAE,OAAO,IAAI;IACrC,OAAO,IAAA2C,oBAAW,EAACtD,KAAK,CAACW,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5C;AACJ;AAAC4C,OAAA,CAAAxD,OAAA,GAAAL,mBAAA"}