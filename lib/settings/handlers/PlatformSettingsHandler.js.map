{"version":3,"file":"PlatformSettingsHandler.js","names":["_SettingsHandler","_interopRequireDefault","require","_PlatformPeg","_Settings","_SettingLevel","_dispatcher","_actions","PlatformSettingsHandler","SettingsHandler","constructor","_defineProperty2","default","payload","action","Action","PlatformSet","store","Object","entries","SETTINGS","forEach","_ref","key","setting","supportedLevels","includes","SettingLevel","PLATFORM","platform","supportsSetting","getSettingValue","then","value","defaultDispatcher","register","onAction","canSetValue","settingName","roomId","PlatformPeg","get","getValue","setValue","newValue","setSettingValue","isSupported","exports"],"sources":["../../../src/settings/handlers/PlatformSettingsHandler.ts"],"sourcesContent":["/*\r\nCopyright 2022 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport SettingsHandler from \"./SettingsHandler\";\r\nimport PlatformPeg from \"../../PlatformPeg\";\r\nimport { SETTINGS } from \"../Settings\";\r\nimport { SettingLevel } from \"../SettingLevel\";\r\nimport defaultDispatcher from \"../../dispatcher/dispatcher\";\r\nimport { ActionPayload } from \"../../dispatcher/payloads\";\r\nimport { Action } from \"../../dispatcher/actions\";\r\n\r\n/**\r\n * Gets and sets settings at the \"platform\" level for the current device.\r\n * This handler does not make use of the roomId parameter.\r\n */\r\nexport default class PlatformSettingsHandler extends SettingsHandler {\r\n    private store: { [settingName: string]: any } = {};\r\n\r\n    public constructor() {\r\n        super();\r\n\r\n        defaultDispatcher.register(this.onAction);\r\n    }\r\n\r\n    private onAction = (payload: ActionPayload): void => {\r\n        if (payload.action === Action.PlatformSet) {\r\n            this.store = {};\r\n            // Load setting values as they are async and `getValue` must be synchronous\r\n            Object.entries(SETTINGS).forEach(([key, setting]) => {\r\n                if (setting.supportedLevels?.includes(SettingLevel.PLATFORM) && payload.platform.supportsSetting(key)) {\r\n                    payload.platform.getSettingValue(key).then((value: any) => {\r\n                        this.store[key] = value;\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    public canSetValue(settingName: string, roomId: string): boolean {\r\n        return PlatformPeg.get()?.supportsSetting(settingName) ?? false;\r\n    }\r\n\r\n    public getValue(settingName: string, roomId: string): any {\r\n        return this.store[settingName];\r\n    }\r\n\r\n    public async setValue(settingName: string, roomId: string, newValue: any): Promise<void> {\r\n        this.store[settingName] = newValue; // keep cache up to date for synchronous access\r\n        await PlatformPeg.get()?.setSettingValue(settingName, newValue);\r\n    }\r\n\r\n    public isSupported(): boolean {\r\n        return PlatformPeg.get()?.supportsSetting() ?? false;\r\n    }\r\n}\r\n"],"mappings":";;;;;;;;AAgBA,IAAAA,gBAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,SAAA,GAAAF,OAAA;AACA,IAAAG,aAAA,GAAAH,OAAA;AACA,IAAAI,WAAA,GAAAL,sBAAA,CAAAC,OAAA;AAEA,IAAAK,QAAA,GAAAL,OAAA;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAUA;AACA;AACA;AACA;AACe,MAAMM,uBAAuB,SAASC,wBAAe,CAAC;EAG1DC,WAAWA,CAAA,EAAG;IACjB,KAAK,CAAC,CAAC;IAAC,IAAAC,gBAAA,CAAAC,OAAA,iBAHoC,CAAC,CAAC;IAAA,IAAAD,gBAAA,CAAAC,OAAA,oBAQ9BC,OAAsB,IAAW;MACjD,IAAIA,OAAO,CAACC,MAAM,KAAKC,eAAM,CAACC,WAAW,EAAE;QACvC,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;QACf;QACAC,MAAM,CAACC,OAAO,CAACC,kBAAQ,CAAC,CAACC,OAAO,CAACC,IAAA,IAAoB;UAAA,IAAnB,CAACC,GAAG,EAAEC,OAAO,CAAC,GAAAF,IAAA;UAC5C,IAAIE,OAAO,CAACC,eAAe,EAAEC,QAAQ,CAACC,0BAAY,CAACC,QAAQ,CAAC,IAAIf,OAAO,CAACgB,QAAQ,CAACC,eAAe,CAACP,GAAG,CAAC,EAAE;YACnGV,OAAO,CAACgB,QAAQ,CAACE,eAAe,CAACR,GAAG,CAAC,CAACS,IAAI,CAAEC,KAAU,IAAK;cACvD,IAAI,CAAChB,KAAK,CAACM,GAAG,CAAC,GAAGU,KAAK;YAC3B,CAAC,CAAC;UACN;QACJ,CAAC,CAAC;MACN;IACJ,CAAC;IAfGC,mBAAiB,CAACC,QAAQ,CAAC,IAAI,CAACC,QAAQ,CAAC;EAC7C;EAgBOC,WAAWA,CAACC,WAAmB,EAAEC,MAAc,EAAW;IAC7D,OAAOC,oBAAW,CAACC,GAAG,CAAC,CAAC,EAAEX,eAAe,CAACQ,WAAW,CAAC,IAAI,KAAK;EACnE;EAEOI,QAAQA,CAACJ,WAAmB,EAAEC,MAAc,EAAO;IACtD,OAAO,IAAI,CAACtB,KAAK,CAACqB,WAAW,CAAC;EAClC;EAEA,MAAaK,QAAQA,CAACL,WAAmB,EAAEC,MAAc,EAAEK,QAAa,EAAiB;IACrF,IAAI,CAAC3B,KAAK,CAACqB,WAAW,CAAC,GAAGM,QAAQ,CAAC,CAAC;IACpC,MAAMJ,oBAAW,CAACC,GAAG,CAAC,CAAC,EAAEI,eAAe,CAACP,WAAW,EAAEM,QAAQ,CAAC;EACnE;EAEOE,WAAWA,CAAA,EAAY;IAC1B,OAAON,oBAAW,CAACC,GAAG,CAAC,CAAC,EAAEX,eAAe,CAAC,CAAC,IAAI,KAAK;EACxD;AACJ;AAACiB,OAAA,CAAAnC,OAAA,GAAAJ,uBAAA"}