{"version":3,"file":"Livestream.js","names":["_SdkConfig","_interopRequireDefault","require","_ElementWidgetActions","getConfigLivestreamUrl","SdkConfig","get","AUDIOSTREAM_DUMMY_URL","createLiveStream","matrixClient","roomId","openIdToken","getOpenIdToken","url","response","window","fetch","method","headers","body","JSON","stringify","room_id","openid_token","respBody","json","startJitsiAudioLivestream","widgetMessaging","streamId","transport","send","ElementWidgetActions","StartLiveStream","rtmpStreamKey"],"sources":["../src/Livestream.ts"],"sourcesContent":["/*\r\nCopyright 2021 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { ClientWidgetApi } from \"matrix-widget-api\";\r\nimport { MatrixClient } from \"matrix-js-sdk/src/matrix\";\r\n\r\nimport SdkConfig from \"./SdkConfig\";\r\nimport { ElementWidgetActions } from \"./stores/widgets/ElementWidgetActions\";\r\n\r\nexport function getConfigLivestreamUrl(): string | undefined {\r\n    return SdkConfig.get(\"audio_stream_url\");\r\n}\r\n\r\n// Dummy rtmp URL used to signal that we want a special audio-only stream\r\nconst AUDIOSTREAM_DUMMY_URL = \"rtmp://audiostream.dummy/\";\r\n\r\nasync function createLiveStream(matrixClient: MatrixClient, roomId: string): Promise<void> {\r\n    const openIdToken = await matrixClient.getOpenIdToken();\r\n\r\n    const url = getConfigLivestreamUrl() + \"/createStream\";\r\n\r\n    const response = await window.fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n            room_id: roomId,\r\n            openid_token: openIdToken,\r\n        }),\r\n    });\r\n\r\n    const respBody = await response.json();\r\n    return respBody[\"stream_id\"];\r\n}\r\n\r\nexport async function startJitsiAudioLivestream(\r\n    matrixClient: MatrixClient,\r\n    widgetMessaging: ClientWidgetApi,\r\n    roomId: string,\r\n): Promise<void> {\r\n    const streamId = await createLiveStream(matrixClient, roomId);\r\n\r\n    await widgetMessaging.transport.send(ElementWidgetActions.StartLiveStream, {\r\n        rtmpStreamKey: AUDIOSTREAM_DUMMY_URL + streamId,\r\n    });\r\n}\r\n"],"mappings":";;;;;;;;AAmBA,IAAAA,UAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,qBAAA,GAAAD,OAAA;AApBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQO,SAASE,sBAAsBA,CAAA,EAAuB;EACzD,OAAOC,kBAAS,CAACC,GAAG,CAAC,kBAAkB,CAAC;AAC5C;;AAEA;AACA,MAAMC,qBAAqB,GAAG,2BAA2B;AAEzD,eAAeC,gBAAgBA,CAACC,YAA0B,EAAEC,MAAc,EAAiB;EACvF,MAAMC,WAAW,GAAG,MAAMF,YAAY,CAACG,cAAc,CAAC,CAAC;EAEvD,MAAMC,GAAG,GAAGT,sBAAsB,CAAC,CAAC,GAAG,eAAe;EAEtD,MAAMU,QAAQ,GAAG,MAAMC,MAAM,CAACC,KAAK,CAACH,GAAG,EAAE;IACrCI,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBC,OAAO,EAAEZ,MAAM;MACfa,YAAY,EAAEZ;IAClB,CAAC;EACL,CAAC,CAAC;EAEF,MAAMa,QAAQ,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;EACtC,OAAOD,QAAQ,CAAC,WAAW,CAAC;AAChC;AAEO,eAAeE,yBAAyBA,CAC3CjB,YAA0B,EAC1BkB,eAAgC,EAChCjB,MAAc,EACD;EACb,MAAMkB,QAAQ,GAAG,MAAMpB,gBAAgB,CAACC,YAAY,EAAEC,MAAM,CAAC;EAE7D,MAAMiB,eAAe,CAACE,SAAS,CAACC,IAAI,CAACC,0CAAoB,CAACC,eAAe,EAAE;IACvEC,aAAa,EAAE1B,qBAAqB,GAAGqB;EAC3C,CAAC,CAAC;AACN"}