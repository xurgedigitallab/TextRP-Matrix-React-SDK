{"version":3,"file":"startNewVoiceBroadcastRecording.js","names":["_matrix","require","_utils","_","_checkVoiceBroadcastPreConditions","startBroadcast","room","client","recordingsStore","promise","resolve","reject","defer","userId","getUserId","result","onRoomStateEvents","voiceBroadcastEvent","currentState","getStateEvents","VoiceBroadcastInfoEventType","getId","event_id","off","RoomStateEvent","Events","recording","VoiceBroadcastRecording","setCurrent","start","on","sendStateEvent","roomId","device_id","getDeviceId","state","VoiceBroadcastInfoState","Started","chunk_length","getChunkLength","startNewVoiceBroadcastRecording","playbacksStore","checkVoiceBroadcastPreConditions","getCurrent","pause","clearCurrent","exports"],"sources":["../../../src/voice-broadcast/utils/startNewVoiceBroadcastRecording.ts"],"sourcesContent":["/*\r\nCopyright 2022 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { ISendEventResponse, MatrixClient, Room, RoomStateEvent } from \"matrix-js-sdk/src/matrix\";\r\nimport { defer } from \"matrix-js-sdk/src/utils\";\r\n\r\nimport {\r\n    VoiceBroadcastInfoEventContent,\r\n    VoiceBroadcastInfoEventType,\r\n    VoiceBroadcastInfoState,\r\n    VoiceBroadcastRecordingsStore,\r\n    VoiceBroadcastRecording,\r\n    getChunkLength,\r\n    VoiceBroadcastPlaybacksStore,\r\n} from \"..\";\r\nimport { checkVoiceBroadcastPreConditions } from \"./checkVoiceBroadcastPreConditions\";\r\n\r\nconst startBroadcast = async (\r\n    room: Room,\r\n    client: MatrixClient,\r\n    recordingsStore: VoiceBroadcastRecordingsStore,\r\n): Promise<VoiceBroadcastRecording> => {\r\n    const { promise, resolve, reject } = defer<VoiceBroadcastRecording>();\r\n\r\n    const userId = client.getUserId();\r\n\r\n    if (!userId) {\r\n        reject(\"unable to start voice broadcast if current user is unknown\");\r\n        return promise;\r\n    }\r\n\r\n    let result: ISendEventResponse | null = null;\r\n\r\n    const onRoomStateEvents = (): void => {\r\n        if (!result) return;\r\n\r\n        const voiceBroadcastEvent = room.currentState.getStateEvents(VoiceBroadcastInfoEventType, userId);\r\n\r\n        if (voiceBroadcastEvent?.getId() === result.event_id) {\r\n            room.off(RoomStateEvent.Events, onRoomStateEvents);\r\n            const recording = new VoiceBroadcastRecording(voiceBroadcastEvent, client);\r\n            recordingsStore.setCurrent(recording);\r\n            recording.start();\r\n            resolve(recording);\r\n        }\r\n    };\r\n\r\n    room.on(RoomStateEvent.Events, onRoomStateEvents);\r\n\r\n    // XXX Michael W: refactor to live event\r\n    result = await client.sendStateEvent(\r\n        room.roomId,\r\n        VoiceBroadcastInfoEventType,\r\n        {\r\n            device_id: client.getDeviceId(),\r\n            state: VoiceBroadcastInfoState.Started,\r\n            chunk_length: getChunkLength(),\r\n        } as VoiceBroadcastInfoEventContent,\r\n        userId,\r\n    );\r\n\r\n    return promise;\r\n};\r\n\r\n/**\r\n * Starts a new Voice Broadcast Recording, if\r\n * - the user has the permissions to do so in the room\r\n * - the user is not already recording a voice broadcast\r\n * - there is no other broadcast being recorded in the room, yet\r\n * Sends a voice_broadcast_info state event and waits for the event to actually appear in the room state.\r\n */\r\nexport const startNewVoiceBroadcastRecording = async (\r\n    room: Room,\r\n    client: MatrixClient,\r\n    playbacksStore: VoiceBroadcastPlaybacksStore,\r\n    recordingsStore: VoiceBroadcastRecordingsStore,\r\n): Promise<VoiceBroadcastRecording | null> => {\r\n    if (!(await checkVoiceBroadcastPreConditions(room, client, recordingsStore))) {\r\n        return null;\r\n    }\r\n\r\n    // pause and clear current playback (if any)\r\n    playbacksStore.getCurrent()?.pause();\r\n    playbacksStore.clearCurrent();\r\n\r\n    return startBroadcast(room, client, recordingsStore);\r\n};\r\n"],"mappings":";;;;;;AAgBA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAEA,IAAAE,CAAA,GAAAF,OAAA;AASA,IAAAG,iCAAA,GAAAH,OAAA;AA5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAgBA,MAAMI,cAAc,GAAG,MAAAA,CACnBC,IAAU,EACVC,MAAoB,EACpBC,eAA8C,KACX;EACnC,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAG,IAAAC,YAAK,EAA0B,CAAC;EAErE,MAAMC,MAAM,GAAGN,MAAM,CAACO,SAAS,CAAC,CAAC;EAEjC,IAAI,CAACD,MAAM,EAAE;IACTF,MAAM,CAAC,4DAA4D,CAAC;IACpE,OAAOF,OAAO;EAClB;EAEA,IAAIM,MAAiC,GAAG,IAAI;EAE5C,MAAMC,iBAAiB,GAAGA,CAAA,KAAY;IAClC,IAAI,CAACD,MAAM,EAAE;IAEb,MAAME,mBAAmB,GAAGX,IAAI,CAACY,YAAY,CAACC,cAAc,CAACC,6BAA2B,EAAEP,MAAM,CAAC;IAEjG,IAAII,mBAAmB,EAAEI,KAAK,CAAC,CAAC,KAAKN,MAAM,CAACO,QAAQ,EAAE;MAClDhB,IAAI,CAACiB,GAAG,CAACC,sBAAc,CAACC,MAAM,EAAET,iBAAiB,CAAC;MAClD,MAAMU,SAAS,GAAG,IAAIC,yBAAuB,CAACV,mBAAmB,EAAEV,MAAM,CAAC;MAC1EC,eAAe,CAACoB,UAAU,CAACF,SAAS,CAAC;MACrCA,SAAS,CAACG,KAAK,CAAC,CAAC;MACjBnB,OAAO,CAACgB,SAAS,CAAC;IACtB;EACJ,CAAC;EAEDpB,IAAI,CAACwB,EAAE,CAACN,sBAAc,CAACC,MAAM,EAAET,iBAAiB,CAAC;;EAEjD;EACAD,MAAM,GAAG,MAAMR,MAAM,CAACwB,cAAc,CAChCzB,IAAI,CAAC0B,MAAM,EACXZ,6BAA2B,EAC3B;IACIa,SAAS,EAAE1B,MAAM,CAAC2B,WAAW,CAAC,CAAC;IAC/BC,KAAK,EAAEC,yBAAuB,CAACC,OAAO;IACtCC,YAAY,EAAE,IAAAC,gBAAc,EAAC;EACjC,CAAC,EACD1B,MACJ,CAAC;EAED,OAAOJ,OAAO;AAClB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM+B,+BAA+B,GAAG,MAAAA,CAC3ClC,IAAU,EACVC,MAAoB,EACpBkC,cAA4C,EAC5CjC,eAA8C,KACJ;EAC1C,IAAI,EAAE,MAAM,IAAAkC,kEAAgC,EAACpC,IAAI,EAAEC,MAAM,EAAEC,eAAe,CAAC,CAAC,EAAE;IAC1E,OAAO,IAAI;EACf;;EAEA;EACAiC,cAAc,CAACE,UAAU,CAAC,CAAC,EAAEC,KAAK,CAAC,CAAC;EACpCH,cAAc,CAACI,YAAY,CAAC,CAAC;EAE7B,OAAOxC,cAAc,CAACC,IAAI,EAAEC,MAAM,EAAEC,eAAe,CAAC;AACxD,CAAC;AAACsC,OAAA,CAAAN,+BAAA,GAAAA,+BAAA"}