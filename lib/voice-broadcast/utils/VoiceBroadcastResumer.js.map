{"version":3,"file":"VoiceBroadcastResumer.js","names":["_matrix","require","_sync","_","_findRoomLiveVoiceBroadcastFromUserAndDevice","VoiceBroadcastResumer","constructor","client","_defineProperty2","default","getSyncState","SyncState","Syncing","off","ClientEvent","Sync","onClientSync","resume","isInitialSyncComplete","on","userId","getUserId","deviceId","getDeviceId","getRooms","forEach","room","infoEvent","findRoomLiveVoiceBroadcastFromUserAndDevice","sendStopVoiceBroadcastStateEvent","roomId","getRoomId","content","device_id","state","VoiceBroadcastInfoState","Stopped","referencedEventId","getContent","Started","getId","event_id","rel_type","RelationType","Reference","sendStateEvent","VoiceBroadcastInfoEventType","destroy","exports"],"sources":["../../../src/voice-broadcast/utils/VoiceBroadcastResumer.ts"],"sourcesContent":["/*\r\nCopyright 2022 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { ClientEvent, MatrixClient, MatrixEvent, RelationType, Room } from \"matrix-js-sdk/src/matrix\";\r\nimport { SyncState } from \"matrix-js-sdk/src/sync\";\r\n\r\nimport { VoiceBroadcastInfoEventContent, VoiceBroadcastInfoEventType, VoiceBroadcastInfoState } from \"..\";\r\nimport { IDestroyable } from \"../../utils/IDestroyable\";\r\nimport { findRoomLiveVoiceBroadcastFromUserAndDevice } from \"./findRoomLiveVoiceBroadcastFromUserAndDevice\";\r\n\r\n/**\r\n * Handles voice broadcasts on app resume (after logging in, reload, crashâ€¦).\r\n */\r\nexport class VoiceBroadcastResumer implements IDestroyable {\r\n    public constructor(private client: MatrixClient) {\r\n        if (client.isInitialSyncComplete()) {\r\n            this.resume();\r\n        } else {\r\n            // wait for initial sync\r\n            client.on(ClientEvent.Sync, this.onClientSync);\r\n        }\r\n    }\r\n\r\n    private onClientSync = (): void => {\r\n        if (this.client.getSyncState() === SyncState.Syncing) {\r\n            this.client.off(ClientEvent.Sync, this.onClientSync);\r\n            this.resume();\r\n        }\r\n    };\r\n\r\n    private resume(): void {\r\n        const userId = this.client.getUserId();\r\n        const deviceId = this.client.getDeviceId();\r\n\r\n        if (!userId || !deviceId) {\r\n            // Resuming a voice broadcast only makes sense if there is a user.\r\n            return;\r\n        }\r\n\r\n        this.client.getRooms().forEach((room: Room) => {\r\n            const infoEvent = findRoomLiveVoiceBroadcastFromUserAndDevice(room, userId, deviceId);\r\n\r\n            if (infoEvent) {\r\n                // Found a live broadcast event from current device; stop it.\r\n                // Stopping it is a temporary solution (see PSF-1669).\r\n                this.sendStopVoiceBroadcastStateEvent(infoEvent);\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n\r\n    private sendStopVoiceBroadcastStateEvent(infoEvent: MatrixEvent): void {\r\n        const userId = this.client.getUserId();\r\n        const deviceId = this.client.getDeviceId();\r\n        const roomId = infoEvent.getRoomId();\r\n\r\n        if (!userId || !deviceId || !roomId) {\r\n            // We can only send a state event if we know all the IDs.\r\n            return;\r\n        }\r\n\r\n        const content: VoiceBroadcastInfoEventContent = {\r\n            device_id: deviceId,\r\n            state: VoiceBroadcastInfoState.Stopped,\r\n        };\r\n\r\n        // all events should reference the started event\r\n        const referencedEventId =\r\n            infoEvent.getContent()?.state === VoiceBroadcastInfoState.Started\r\n                ? infoEvent.getId()\r\n                : infoEvent.getContent()?.[\"m.relates_to\"]?.event_id;\r\n\r\n        if (referencedEventId) {\r\n            content[\"m.relates_to\"] = {\r\n                rel_type: RelationType.Reference,\r\n                event_id: referencedEventId,\r\n            };\r\n        }\r\n\r\n        this.client.sendStateEvent(roomId, VoiceBroadcastInfoEventType, content, userId);\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.client.off(ClientEvent.Sync, this.onClientSync);\r\n    }\r\n}\r\n"],"mappings":"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"}