{"version":3,"file":"VoiceBroadcastPlaybacksStore.js","names":["_typedEventEmitter","require","_","VoiceBroadcastPlaybacksStoreEvent","exports","VoiceBroadcastPlaybacksStore","TypedEventEmitter","constructor","recordings","_defineProperty2","default","Map","state","playback","VoiceBroadcastPlaybackState","Buffering","Playing","pauseExcept","setCurrent","Stopped","clearCurrent","current","addPlayback","emit","CurrentChanged","getCurrent","getByInfoEvent","infoEvent","client","infoEventId","getId","playbacks","has","VoiceBroadcastPlayback","get","set","on","VoiceBroadcastPlaybackEvent","StateChanged","onPlaybackStateChanged","playbackNotToPause","values","pause","destroy","removeAllListeners","off"],"sources":["../../../src/voice-broadcast/stores/VoiceBroadcastPlaybacksStore.ts"],"sourcesContent":["/*\r\nCopyright 2022 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { MatrixClient, MatrixEvent } from \"matrix-js-sdk/src/matrix\";\r\nimport { TypedEventEmitter } from \"matrix-js-sdk/src/models/typed-event-emitter\";\r\n\r\nimport {\r\n    VoiceBroadcastPlayback,\r\n    VoiceBroadcastPlaybackEvent,\r\n    VoiceBroadcastPlaybackState,\r\n    VoiceBroadcastRecordingsStore,\r\n} from \"..\";\r\nimport { IDestroyable } from \"../../utils/IDestroyable\";\r\n\r\nexport enum VoiceBroadcastPlaybacksStoreEvent {\r\n    CurrentChanged = \"current_changed\",\r\n}\r\n\r\ninterface EventMap {\r\n    [VoiceBroadcastPlaybacksStoreEvent.CurrentChanged]: (recording: VoiceBroadcastPlayback | null) => void;\r\n}\r\n\r\n/**\r\n * This store manages VoiceBroadcastPlaybacks:\r\n * - access the currently playing voice broadcast\r\n * - ensures that only once broadcast is playing at a time\r\n */\r\nexport class VoiceBroadcastPlaybacksStore\r\n    extends TypedEventEmitter<VoiceBroadcastPlaybacksStoreEvent, EventMap>\r\n    implements IDestroyable\r\n{\r\n    private current: VoiceBroadcastPlayback | null = null;\r\n\r\n    /** Playbacks indexed by their info event id. */\r\n    private playbacks = new Map<string, VoiceBroadcastPlayback>();\r\n\r\n    public constructor(private recordings: VoiceBroadcastRecordingsStore) {\r\n        super();\r\n    }\r\n\r\n    public setCurrent(current: VoiceBroadcastPlayback): void {\r\n        if (this.current === current) return;\r\n\r\n        this.current = current;\r\n        this.addPlayback(current);\r\n        this.emit(VoiceBroadcastPlaybacksStoreEvent.CurrentChanged, current);\r\n    }\r\n\r\n    public clearCurrent(): void {\r\n        if (this.current === null) return;\r\n\r\n        this.current = null;\r\n        this.emit(VoiceBroadcastPlaybacksStoreEvent.CurrentChanged, null);\r\n    }\r\n\r\n    public getCurrent(): VoiceBroadcastPlayback | null {\r\n        return this.current;\r\n    }\r\n\r\n    public getByInfoEvent(infoEvent: MatrixEvent, client: MatrixClient): VoiceBroadcastPlayback {\r\n        const infoEventId = infoEvent.getId()!;\r\n\r\n        if (!this.playbacks.has(infoEventId)) {\r\n            this.addPlayback(new VoiceBroadcastPlayback(infoEvent, client, this.recordings));\r\n        }\r\n\r\n        return this.playbacks.get(infoEventId)!;\r\n    }\r\n\r\n    private addPlayback(playback: VoiceBroadcastPlayback): void {\r\n        const infoEventId = playback.infoEvent.getId()!;\r\n\r\n        if (this.playbacks.has(infoEventId)) return;\r\n\r\n        this.playbacks.set(infoEventId, playback);\r\n        playback.on(VoiceBroadcastPlaybackEvent.StateChanged, this.onPlaybackStateChanged);\r\n    }\r\n\r\n    private onPlaybackStateChanged = (state: VoiceBroadcastPlaybackState, playback: VoiceBroadcastPlayback): void => {\r\n        switch (state) {\r\n            case VoiceBroadcastPlaybackState.Buffering:\r\n            case VoiceBroadcastPlaybackState.Playing:\r\n                this.pauseExcept(playback);\r\n                this.setCurrent(playback);\r\n                break;\r\n            case VoiceBroadcastPlaybackState.Stopped:\r\n                this.clearCurrent();\r\n                break;\r\n        }\r\n    };\r\n\r\n    private pauseExcept(playbackNotToPause: VoiceBroadcastPlayback): void {\r\n        for (const playback of this.playbacks.values()) {\r\n            if (playback !== playbackNotToPause) {\r\n                playback.pause();\r\n            }\r\n        }\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.removeAllListeners();\r\n\r\n        for (const playback of this.playbacks.values()) {\r\n            playback.off(VoiceBroadcastPlaybackEvent.StateChanged, this.onPlaybackStateChanged);\r\n        }\r\n\r\n        this.playbacks = new Map();\r\n    }\r\n}\r\n"],"mappings":"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"}