{"version":3,"file":"VoiceBroadcastRecordingsStore.js","names":["_typedEventEmitter","require","_","VoiceBroadcastRecordingsStoreEvent","exports","VoiceBroadcastRecordingsStore","TypedEventEmitter","constructor","_defineProperty2","default","Map","state","VoiceBroadcastInfoState","Stopped","clearCurrent","setCurrent","current","infoEventId","infoEvent","getId","Error","off","VoiceBroadcastRecordingEvent","StateChanged","onCurrentStateChanged","on","recordings","set","emit","CurrentChanged","getCurrent","hasCurrent","getByInfoEvent","client","recording","get","VoiceBroadcastRecording"],"sources":["../../../src/voice-broadcast/stores/VoiceBroadcastRecordingsStore.ts"],"sourcesContent":["/*\r\nCopyright 2022-2023 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { MatrixClient, MatrixEvent } from \"matrix-js-sdk/src/matrix\";\r\nimport { TypedEventEmitter } from \"matrix-js-sdk/src/models/typed-event-emitter\";\r\n\r\nimport {\r\n    VoiceBroadcastInfoState,\r\n    VoiceBroadcastRecording,\r\n    VoiceBroadcastRecordingEvent,\r\n    VoiceBroadcastRecordingState,\r\n} from \"..\";\r\n\r\nexport enum VoiceBroadcastRecordingsStoreEvent {\r\n    CurrentChanged = \"current_changed\",\r\n}\r\n\r\ninterface EventMap {\r\n    [VoiceBroadcastRecordingsStoreEvent.CurrentChanged]: (recording: VoiceBroadcastRecording | null) => void;\r\n}\r\n\r\n/**\r\n * This store provides access to the current and specific Voice Broadcast recordings.\r\n */\r\nexport class VoiceBroadcastRecordingsStore extends TypedEventEmitter<VoiceBroadcastRecordingsStoreEvent, EventMap> {\r\n    private current: VoiceBroadcastRecording | null = null;\r\n    private recordings = new Map<string, VoiceBroadcastRecording>();\r\n\r\n    public constructor() {\r\n        super();\r\n    }\r\n\r\n    public setCurrent(current: VoiceBroadcastRecording): void {\r\n        if (this.current === current) return;\r\n\r\n        const infoEventId = current.infoEvent.getId();\r\n\r\n        if (!infoEventId) {\r\n            throw new Error(\"Got broadcast info event without Id\");\r\n        }\r\n\r\n        if (this.current) {\r\n            this.current.off(VoiceBroadcastRecordingEvent.StateChanged, this.onCurrentStateChanged);\r\n        }\r\n\r\n        this.current = current;\r\n        this.current.on(VoiceBroadcastRecordingEvent.StateChanged, this.onCurrentStateChanged);\r\n        this.recordings.set(infoEventId, current);\r\n        this.emit(VoiceBroadcastRecordingsStoreEvent.CurrentChanged, current);\r\n    }\r\n\r\n    public getCurrent(): VoiceBroadcastRecording | null {\r\n        return this.current;\r\n    }\r\n\r\n    public hasCurrent(): boolean {\r\n        return this.current !== null;\r\n    }\r\n\r\n    public clearCurrent(): void {\r\n        if (!this.current) return;\r\n\r\n        this.current.off(VoiceBroadcastRecordingEvent.StateChanged, this.onCurrentStateChanged);\r\n        this.current = null;\r\n        this.emit(VoiceBroadcastRecordingsStoreEvent.CurrentChanged, null);\r\n    }\r\n\r\n    public getByInfoEvent(infoEvent: MatrixEvent, client: MatrixClient): VoiceBroadcastRecording {\r\n        const infoEventId = infoEvent.getId();\r\n\r\n        if (!infoEventId) {\r\n            throw new Error(\"Got broadcast info event without Id\");\r\n        }\r\n\r\n        const recording = this.recordings.get(infoEventId) || new VoiceBroadcastRecording(infoEvent, client);\r\n        this.recordings.set(infoEventId, recording);\r\n        return recording;\r\n    }\r\n\r\n    private onCurrentStateChanged = (state: VoiceBroadcastRecordingState): void => {\r\n        if (state === VoiceBroadcastInfoState.Stopped) {\r\n            this.clearCurrent();\r\n        }\r\n    };\r\n}\r\n"],"mappings":";;;;;;;;AAiBA,IAAAA,kBAAA,GAAAC,OAAA;AAEA,IAAAC,CAAA,GAAAD,OAAA;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA,IA0BYE,kCAAkC,0BAAlCA,kCAAkC;EAAlCA,kCAAkC;EAAA,OAAlCA,kCAAkC;AAAA;AAAAC,OAAA,CAAAD,kCAAA,GAAAA,kCAAA;AAQ9C;AACA;AACA;AACO,MAAME,6BAA6B,SAASC,oCAAiB,CAA+C;EAIxGC,WAAWA,CAAA,EAAG;IACjB,KAAK,CAAC,CAAC;IAAC,IAAAC,gBAAA,CAAAC,OAAA,mBAJsC,IAAI;IAAA,IAAAD,gBAAA,CAAAC,OAAA,sBACjC,IAAIC,GAAG,CAAkC,CAAC;IAAA,IAAAF,gBAAA,CAAAC,OAAA,iCAqD9BE,KAAmC,IAAW;MAC3E,IAAIA,KAAK,KAAKC,yBAAuB,CAACC,OAAO,EAAE;QAC3C,IAAI,CAACC,YAAY,CAAC,CAAC;MACvB;IACJ,CAAC;EArDD;EAEOC,UAAUA,CAACC,OAAgC,EAAQ;IACtD,IAAI,IAAI,CAACA,OAAO,KAAKA,OAAO,EAAE;IAE9B,MAAMC,WAAW,GAAGD,OAAO,CAACE,SAAS,CAACC,KAAK,CAAC,CAAC;IAE7C,IAAI,CAACF,WAAW,EAAE;MACd,MAAM,IAAIG,KAAK,CAAC,qCAAqC,CAAC;IAC1D;IAEA,IAAI,IAAI,CAACJ,OAAO,EAAE;MACd,IAAI,CAACA,OAAO,CAACK,GAAG,CAACC,8BAA4B,CAACC,YAAY,EAAE,IAAI,CAACC,qBAAqB,CAAC;IAC3F;IAEA,IAAI,CAACR,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACA,OAAO,CAACS,EAAE,CAACH,8BAA4B,CAACC,YAAY,EAAE,IAAI,CAACC,qBAAqB,CAAC;IACtF,IAAI,CAACE,UAAU,CAACC,GAAG,CAACV,WAAW,EAAED,OAAO,CAAC;IACzC,IAAI,CAACY,IAAI,CAACzB,kCAAkC,CAAC0B,cAAc,EAAEb,OAAO,CAAC;EACzE;EAEOc,UAAUA,CAAA,EAAmC;IAChD,OAAO,IAAI,CAACd,OAAO;EACvB;EAEOe,UAAUA,CAAA,EAAY;IACzB,OAAO,IAAI,CAACf,OAAO,KAAK,IAAI;EAChC;EAEOF,YAAYA,CAAA,EAAS;IACxB,IAAI,CAAC,IAAI,CAACE,OAAO,EAAE;IAEnB,IAAI,CAACA,OAAO,CAACK,GAAG,CAACC,8BAA4B,CAACC,YAAY,EAAE,IAAI,CAACC,qBAAqB,CAAC;IACvF,IAAI,CAACR,OAAO,GAAG,IAAI;IACnB,IAAI,CAACY,IAAI,CAACzB,kCAAkC,CAAC0B,cAAc,EAAE,IAAI,CAAC;EACtE;EAEOG,cAAcA,CAACd,SAAsB,EAAEe,MAAoB,EAA2B;IACzF,MAAMhB,WAAW,GAAGC,SAAS,CAACC,KAAK,CAAC,CAAC;IAErC,IAAI,CAACF,WAAW,EAAE;MACd,MAAM,IAAIG,KAAK,CAAC,qCAAqC,CAAC;IAC1D;IAEA,MAAMc,SAAS,GAAG,IAAI,CAACR,UAAU,CAACS,GAAG,CAAClB,WAAW,CAAC,IAAI,IAAImB,yBAAuB,CAAClB,SAAS,EAAEe,MAAM,CAAC;IACpG,IAAI,CAACP,UAAU,CAACC,GAAG,CAACV,WAAW,EAAEiB,SAAS,CAAC;IAC3C,OAAOA,SAAS;EACpB;AAOJ;AAAC9B,OAAA,CAAAC,6BAAA,GAAAA,6BAAA"}