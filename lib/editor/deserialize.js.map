{"version":3,"file":"deserialize.js","names":["_event","require","_HtmlUtils","_Permalinks","_parts","_SdkConfig","_interopRequireDefault","_colour","_Reply","LIST_TYPES","escape","text","replace","match","longestBacktickSequence","length","currentLength","c","Math","max","isListChild","n","includes","parentNode","nodeName","parseAtRoomMentions","pc","opts","ATROOM","parts","split","forEach","textPart","i","arr","push","plainWithEmoji","shouldEscape","isLast","atRoomPill","parseLink","href","resourceId","getPrimaryPermalinkEntity","userPill","textContent","roomPill","children","Array","from","childNodes","every","nodeType","Node","TEXT_NODE","plain","parseChildren","parseImage","alt","src","parseCodeBlock","language","firstChild","className","classList","startsWith","slice","fence","repeat","newline","line","parseHeader","depth","parseInt","prefix","checkIgnored","nodeValue","ELEMENT_NODE","prefixLines","unshift","type","Type","Newline","splice","mkListItem","prev","flatMap","parsed","parseNode","checkBlockNode","li","counter","start","hasAttribute","delims","SdkConfig","get","latex_maths_delims","delimLeft","inline","left","display","delimRight","right","tex","getAttribute","parseHtmlMessage","html","DOMParser","parseFromString","body","isQuotedMessage","parsePlainTextMessage","lines","reduce","parseEvent","event","arguments","undefined","content","getContent","isEmote","msgtype","MsgType","Emote","isRainbow","format","formatted_body","textToHtmlRainbow","replyEventId","stripPlainReply"],"sources":["../../src/editor/deserialize.ts"],"sourcesContent":["/*\r\nCopyright 2019 New Vector Ltd\r\nCopyright 2019, 2020 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { MatrixEvent } from \"matrix-js-sdk/src/models/event\";\r\nimport { MsgType } from \"matrix-js-sdk/src/@types/event\";\r\n\r\nimport { checkBlockNode } from \"../HtmlUtils\";\r\nimport { getPrimaryPermalinkEntity } from \"../utils/permalinks/Permalinks\";\r\nimport { Part, PartCreator, Type } from \"./parts\";\r\nimport SdkConfig from \"../SdkConfig\";\r\nimport { textToHtmlRainbow } from \"../utils/colour\";\r\nimport { stripPlainReply } from \"../utils/Reply\";\r\n\r\nconst LIST_TYPES = [\"UL\", \"OL\", \"LI\"];\r\n\r\n// Escapes all markup in the given text\r\nfunction escape(text: string): string {\r\n    return text.replace(/[\\\\*_[\\]`<]|^>/g, (match) => `\\\\${match}`);\r\n}\r\n\r\n// Finds the length of the longest backtick sequence in the given text, used for\r\n// escaping backticks in code blocks\r\nexport function longestBacktickSequence(text: string): number {\r\n    let length = 0;\r\n    let currentLength = 0;\r\n\r\n    for (const c of text) {\r\n        if (c === \"`\") {\r\n            currentLength++;\r\n        } else {\r\n            length = Math.max(length, currentLength);\r\n            currentLength = 0;\r\n        }\r\n    }\r\n\r\n    return Math.max(length, currentLength);\r\n}\r\n\r\nfunction isListChild(n: Node): boolean {\r\n    return LIST_TYPES.includes(n.parentNode?.nodeName || \"\");\r\n}\r\n\r\nfunction parseAtRoomMentions(text: string, pc: PartCreator, opts: IParseOptions): Part[] {\r\n    const ATROOM = \"@room\";\r\n    const parts: Part[] = [];\r\n    text.split(ATROOM).forEach((textPart, i, arr) => {\r\n        if (textPart.length) {\r\n            parts.push(...pc.plainWithEmoji(opts.shouldEscape ? escape(textPart) : textPart));\r\n        }\r\n        // it's safe to never append @room after the last textPart\r\n        // as split will report an empty string at the end if\r\n        // `text` ended in @room.\r\n        const isLast = i === arr.length - 1;\r\n        if (!isLast) {\r\n            parts.push(pc.atRoomPill(ATROOM));\r\n        }\r\n    });\r\n    return parts;\r\n}\r\n\r\nfunction parseLink(n: Node, pc: PartCreator, opts: IParseOptions): Part[] {\r\n    const { href } = n as HTMLAnchorElement;\r\n    const resourceId = getPrimaryPermalinkEntity(href); // The room/user ID\r\n\r\n    switch (resourceId?.[0]) {\r\n        case \"@\":\r\n            return [pc.userPill(n.textContent || \"\", resourceId)];\r\n        case \"#\":\r\n            return [pc.roomPill(resourceId)];\r\n    }\r\n\r\n    const children = Array.from(n.childNodes);\r\n    if (href === n.textContent && children.every((c) => c.nodeType === Node.TEXT_NODE)) {\r\n        return parseAtRoomMentions(n.textContent, pc, opts);\r\n    } else {\r\n        return [pc.plain(\"[\"), ...parseChildren(n, pc, opts), pc.plain(`](${href})`)];\r\n    }\r\n}\r\n\r\nfunction parseImage(n: Node, pc: PartCreator, opts: IParseOptions): Part[] {\r\n    const { alt, src } = n as HTMLImageElement;\r\n    return pc.plainWithEmoji(`![${escape(alt)}](${src})`);\r\n}\r\n\r\nfunction parseCodeBlock(n: Node, pc: PartCreator, opts: IParseOptions): Part[] {\r\n    if (!n.textContent) return [];\r\n\r\n    let language = \"\";\r\n    if (n.firstChild?.nodeName === \"CODE\") {\r\n        for (const className of (n.firstChild as HTMLElement).classList) {\r\n            if (className.startsWith(\"language-\") && !className.startsWith(\"language-_\")) {\r\n                language = className.slice(\"language-\".length);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const text = n.textContent.replace(/\\n$/, \"\");\r\n    // Escape backticks by using even more backticks for the fence if necessary\r\n    const fence = \"`\".repeat(Math.max(3, longestBacktickSequence(text) + 1));\r\n    const parts: Part[] = [...pc.plainWithEmoji(fence + language), pc.newline()];\r\n\r\n    text.split(\"\\n\").forEach((line) => {\r\n        parts.push(...pc.plainWithEmoji(line));\r\n        parts.push(pc.newline());\r\n    });\r\n\r\n    parts.push(pc.plain(fence));\r\n    return parts;\r\n}\r\n\r\nfunction parseHeader(n: Node, pc: PartCreator, opts: IParseOptions): Part[] {\r\n    const depth = parseInt(n.nodeName.slice(1), 10);\r\n    const prefix = pc.plain(\"#\".repeat(depth) + \" \");\r\n    return [prefix, ...parseChildren(n, pc, opts)];\r\n}\r\n\r\nfunction checkIgnored(n: Node): boolean {\r\n    if (n.nodeType === Node.TEXT_NODE) {\r\n        // Element adds \\n text nodes in a lot of places,\r\n        // which should be ignored\r\n        return n.nodeValue === \"\\n\";\r\n    } else if (n.nodeType === Node.ELEMENT_NODE) {\r\n        return n.nodeName === \"MX-REPLY\";\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction prefixLines(parts: Part[], prefix: string, pc: PartCreator): void {\r\n    parts.unshift(pc.plain(prefix));\r\n    for (let i = 0; i < parts.length; i++) {\r\n        if (parts[i].type === Type.Newline) {\r\n            parts.splice(i + 1, 0, pc.plain(prefix));\r\n            i += 1;\r\n        }\r\n    }\r\n}\r\n\r\nfunction parseChildren(n: Node, pc: PartCreator, opts: IParseOptions, mkListItem?: (li: Node) => Part[]): Part[] {\r\n    let prev: ChildNode | undefined;\r\n    return Array.from(n.childNodes).flatMap((c) => {\r\n        const parsed = parseNode(c, pc, opts, mkListItem);\r\n        if (parsed.length && prev && (checkBlockNode(prev) || checkBlockNode(c))) {\r\n            if (isListChild(c)) {\r\n                // Use tighter spacing within lists\r\n                parsed.unshift(pc.newline());\r\n            } else {\r\n                parsed.unshift(pc.newline(), pc.newline());\r\n            }\r\n        }\r\n        if (parsed.length) prev = c;\r\n        return parsed;\r\n    });\r\n}\r\n\r\nfunction parseNode(n: Node, pc: PartCreator, opts: IParseOptions, mkListItem?: (li: Node) => Part[]): Part[] {\r\n    if (checkIgnored(n)) return [];\r\n\r\n    switch (n.nodeType) {\r\n        case Node.TEXT_NODE:\r\n            return parseAtRoomMentions(n.nodeValue || \"\", pc, opts);\r\n        case Node.ELEMENT_NODE:\r\n            switch (n.nodeName) {\r\n                case \"H1\":\r\n                case \"H2\":\r\n                case \"H3\":\r\n                case \"H4\":\r\n                case \"H5\":\r\n                case \"H6\":\r\n                    return parseHeader(n, pc, opts);\r\n                case \"A\":\r\n                    return parseLink(n, pc, opts);\r\n                case \"IMG\":\r\n                    return parseImage(n, pc, opts);\r\n                case \"BR\":\r\n                    return [pc.newline()];\r\n                case \"HR\":\r\n                    return [pc.plain(\"---\")];\r\n                case \"EM\":\r\n                    return [pc.plain(\"_\"), ...parseChildren(n, pc, opts), pc.plain(\"_\")];\r\n                case \"STRONG\":\r\n                    return [pc.plain(\"**\"), ...parseChildren(n, pc, opts), pc.plain(\"**\")];\r\n                case \"DEL\":\r\n                    return [pc.plain(\"<del>\"), ...parseChildren(n, pc, opts), pc.plain(\"</del>\")];\r\n                case \"SUB\":\r\n                    return [pc.plain(\"<sub>\"), ...parseChildren(n, pc, opts), pc.plain(\"</sub>\")];\r\n                case \"SUP\":\r\n                    return [pc.plain(\"<sup>\"), ...parseChildren(n, pc, opts), pc.plain(\"</sup>\")];\r\n                case \"U\":\r\n                    return [pc.plain(\"<u>\"), ...parseChildren(n, pc, opts), pc.plain(\"</u>\")];\r\n                case \"PRE\":\r\n                    return parseCodeBlock(n, pc, opts);\r\n                case \"CODE\": {\r\n                    // Escape backticks by using multiple backticks for the fence if necessary\r\n                    const fence = \"`\".repeat(longestBacktickSequence(n.textContent || \"\") + 1);\r\n                    return pc.plainWithEmoji(`${fence}${n.textContent}${fence}`);\r\n                }\r\n                case \"BLOCKQUOTE\": {\r\n                    const parts = parseChildren(n, pc, opts);\r\n                    prefixLines(parts, \"> \", pc);\r\n                    return parts;\r\n                }\r\n                case \"LI\":\r\n                    return mkListItem?.(n) ?? parseChildren(n, pc, opts);\r\n                case \"UL\": {\r\n                    const parts = parseChildren(n, pc, opts, (li) => [pc.plain(\"- \"), ...parseChildren(li, pc, opts)]);\r\n                    if (isListChild(n)) {\r\n                        prefixLines(parts, \"    \", pc);\r\n                    }\r\n                    return parts;\r\n                }\r\n                case \"OL\": {\r\n                    let counter = (n as HTMLOListElement).start ?? 1;\r\n                    const parts = parseChildren(n, pc, opts, (li) => {\r\n                        const parts = [pc.plain(`${counter}. `), ...parseChildren(li, pc, opts)];\r\n                        counter++;\r\n                        return parts;\r\n                    });\r\n                    if (isListChild(n)) {\r\n                        prefixLines(parts, \"    \", pc);\r\n                    }\r\n                    return parts;\r\n                }\r\n                case \"DIV\":\r\n                case \"SPAN\":\r\n                    // Math nodes are translated back into delimited latex strings\r\n                    if ((n as Element).hasAttribute(\"data-mx-maths\")) {\r\n                        const delims = SdkConfig.get().latex_maths_delims;\r\n                        const delimLeft =\r\n                            n.nodeName === \"SPAN\" ? delims?.inline?.left ?? \"\\\\(\" : delims?.display?.left ?? \"\\\\[\";\r\n                        const delimRight =\r\n                            n.nodeName === \"SPAN\" ? delims?.inline?.right ?? \"\\\\)\" : delims?.display?.right ?? \"\\\\]\";\r\n                        const tex = (n as Element).getAttribute(\"data-mx-maths\");\r\n\r\n                        return pc.plainWithEmoji(`${delimLeft}${tex}${delimRight}`);\r\n                    }\r\n            }\r\n    }\r\n\r\n    return parseChildren(n, pc, opts);\r\n}\r\n\r\ninterface IParseOptions {\r\n    isQuotedMessage?: boolean;\r\n    shouldEscape?: boolean;\r\n}\r\n\r\nfunction parseHtmlMessage(html: string, pc: PartCreator, opts: IParseOptions): Part[] {\r\n    // no nodes from parsing here should be inserted in the document,\r\n    // as scripts in event handlers, etc would be executed then.\r\n    // we're only taking text, so that is fine\r\n    const parts = parseNode(new DOMParser().parseFromString(html, \"text/html\").body, pc, opts);\r\n    if (opts.isQuotedMessage) {\r\n        prefixLines(parts, \"> \", pc);\r\n    }\r\n    return parts;\r\n}\r\n\r\nexport function parsePlainTextMessage(body: string, pc: PartCreator, opts: IParseOptions): Part[] {\r\n    const lines = body.split(/\\r\\n|\\r|\\n/g); // split on any new-line combination not just \\n, collapses \\r\\n\r\n    return lines.reduce((parts, line, i) => {\r\n        if (opts.isQuotedMessage) {\r\n            parts.push(pc.plain(\"> \"));\r\n        }\r\n        parts.push(...parseAtRoomMentions(line, pc, opts));\r\n        const isLast = i === lines.length - 1;\r\n        if (!isLast) {\r\n            parts.push(pc.newline());\r\n        }\r\n        return parts;\r\n    }, [] as Part[]);\r\n}\r\n\r\nexport function parseEvent(event: MatrixEvent, pc: PartCreator, opts: IParseOptions = { shouldEscape: true }): Part[] {\r\n    const content = event.getContent();\r\n    let parts: Part[];\r\n    const isEmote = content.msgtype === MsgType.Emote;\r\n    let isRainbow = false;\r\n\r\n    if (content.format === \"org.matrix.custom.html\") {\r\n        parts = parseHtmlMessage(content.formatted_body || \"\", pc, opts);\r\n        if (content.body && content.formatted_body && textToHtmlRainbow(content.body) === content.formatted_body) {\r\n            isRainbow = true;\r\n        }\r\n    } else {\r\n        let body = content.body || \"\";\r\n        if (event.replyEventId) {\r\n            body = stripPlainReply(body);\r\n        }\r\n        parts = parsePlainTextMessage(body, pc, opts);\r\n    }\r\n\r\n    if (isEmote && isRainbow) {\r\n        parts.unshift(pc.plain(\"/rainbowme \"));\r\n    } else if (isRainbow) {\r\n        parts.unshift(pc.plain(\"/rainbow \"));\r\n    } else if (isEmote) {\r\n        parts.unshift(pc.plain(\"/me \"));\r\n    }\r\n\r\n    return parts;\r\n}\r\n"],"mappings":"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"}