{"version":3,"file":"EventIndexPeg.js","names":["_logger","require","_PlatformPeg","_interopRequireDefault","_EventIndex","_MatrixClientPeg","_SettingsStore","_SettingLevel","INDEX_VERSION","EventIndexPeg","constructor","_defineProperty2","default","init","indexManager","PlatformPeg","get","getEventIndexingManager","logger","log","_supportIsInstalled","supportsEventIndexing","supportIsInstalled","SettingsStore","getValueAt","SettingLevel","DEVICE","initEventIndex","index","EventIndex","client","MatrixClientPeg","Error","userId","getUserId","deviceId","getDeviceId","userVersion","getUserVersion","eventIndexIsEmpty","isEventIndexEmpty","setUserVersion","closeEventIndex","deleteEventIndex","e","error","platformHasSupport","start","startCrawler","stop","stopCrawler","unset","close","exports","window","mxEventIndexPeg","_default"],"sources":["../../src/indexing/EventIndexPeg.ts"],"sourcesContent":["/*\r\nCopyright 2019-2021 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\n/*\r\n * Object holding the global EventIndex object. Can only be initialized if the\r\n * platform supports event indexing.\r\n */\r\n\r\nimport { logger } from \"matrix-js-sdk/src/logger\";\r\n\r\nimport PlatformPeg from \"../PlatformPeg\";\r\nimport EventIndex from \"../indexing/EventIndex\";\r\nimport { MatrixClientPeg } from \"../MatrixClientPeg\";\r\nimport SettingsStore from \"../settings/SettingsStore\";\r\nimport { SettingLevel } from \"../settings/SettingLevel\";\r\n\r\nconst INDEX_VERSION = 1;\r\n\r\n/**\r\n * Holds the current instance of the `EventIndex` to use across the codebase.\r\n * Looking for an `EventIndex`? Just look for the `EventIndexPeg` on the peg\r\n * board. \"Peg\" is the literal meaning of something you hang something on. So\r\n * you'll find a `EventIndex` hanging on the `EventIndexPeg`.\r\n */\r\nexport class EventIndexPeg {\r\n    public index: EventIndex | null = null;\r\n    public error: Error | null = null;\r\n\r\n    private _supportIsInstalled = false;\r\n\r\n    /**\r\n     * Initialize the EventIndexPeg and if event indexing is enabled initialize\r\n     * the event index.\r\n     *\r\n     * @return {Promise<boolean>} A promise that will resolve to true if an\r\n     * EventIndex was successfully initialized, false otherwise.\r\n     */\r\n    public async init(): Promise<boolean> {\r\n        const indexManager = PlatformPeg.get()?.getEventIndexingManager();\r\n        if (!indexManager) {\r\n            logger.log(\"EventIndex: Platform doesn't support event indexing, not initializing.\");\r\n            return false;\r\n        }\r\n\r\n        this._supportIsInstalled = await indexManager.supportsEventIndexing();\r\n\r\n        if (!this.supportIsInstalled()) {\r\n            logger.log(\"EventIndex: Event indexing isn't installed for the platform, not initializing.\");\r\n            return false;\r\n        }\r\n\r\n        if (!SettingsStore.getValueAt(SettingLevel.DEVICE, \"enableEventIndexing\")) {\r\n            logger.log(\"EventIndex: Event indexing is disabled, not initializing\");\r\n            return false;\r\n        }\r\n\r\n        return this.initEventIndex();\r\n    }\r\n\r\n    /**\r\n     * Initialize the event index.\r\n     *\r\n     * @returns {boolean} True if the event index was successfully initialized,\r\n     * false otherwise.\r\n     */\r\n    public async initEventIndex(): Promise<boolean> {\r\n        const index = new EventIndex();\r\n        const indexManager = PlatformPeg.get()?.getEventIndexingManager();\r\n        const client = MatrixClientPeg.get();\r\n        if (!indexManager || !client) {\r\n            throw new Error(\"Unable to init event index\");\r\n        }\r\n\r\n        const userId = client.getUserId()!;\r\n        const deviceId = client.getDeviceId()!;\r\n\r\n        try {\r\n            await indexManager.initEventIndex(userId, deviceId);\r\n\r\n            const userVersion = await indexManager.getUserVersion();\r\n            const eventIndexIsEmpty = await indexManager.isEventIndexEmpty();\r\n\r\n            if (eventIndexIsEmpty) {\r\n                await indexManager.setUserVersion(INDEX_VERSION);\r\n            } else if (userVersion === 0 && !eventIndexIsEmpty) {\r\n                await indexManager.closeEventIndex();\r\n                await this.deleteEventIndex();\r\n\r\n                await indexManager.initEventIndex(userId, deviceId);\r\n                await indexManager.setUserVersion(INDEX_VERSION);\r\n            }\r\n\r\n            logger.log(\"EventIndex: Successfully initialized the event index\");\r\n            await index.init();\r\n        } catch (e) {\r\n            logger.log(\"EventIndex: Error initializing the event index\", e);\r\n            this.error = e;\r\n            return false;\r\n        }\r\n\r\n        this.index = index;\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Check if the current platform has support for event indexing.\r\n     *\r\n     * @return {boolean} True if it has support, false otherwise. Note that this\r\n     * does not mean that support is installed.\r\n     */\r\n    public platformHasSupport(): boolean {\r\n        return PlatformPeg.get()?.getEventIndexingManager() != null;\r\n    }\r\n\r\n    /**\r\n     * Check if event indexing support is installed for the platform.\r\n     *\r\n     * Event indexing might require additional optional modules to be installed,\r\n     * this tells us if those are installed. Note that this should only be\r\n     * called after the init() method was called.\r\n     *\r\n     * @return {boolean} True if support is installed, false otherwise.\r\n     */\r\n    public supportIsInstalled(): boolean {\r\n        return this._supportIsInstalled;\r\n    }\r\n\r\n    /**\r\n     * Get the current event index.\r\n     *\r\n     * @return {EventIndex} The current event index.\r\n     */\r\n    public get(): EventIndex | null {\r\n        return this.index;\r\n    }\r\n\r\n    public start(): void {\r\n        if (this.index === null) return;\r\n        this.index.startCrawler();\r\n    }\r\n\r\n    public stop(): void {\r\n        if (this.index === null) return;\r\n        this.index.stopCrawler();\r\n    }\r\n\r\n    /**\r\n     * Unset our event store\r\n     *\r\n     * After a call to this the init() method will need to be called again.\r\n     *\r\n     * @return {Promise} A promise that will resolve once the event index is\r\n     * closed.\r\n     */\r\n    public async unset(): Promise<void> {\r\n        if (this.index === null) return;\r\n        await this.index.close();\r\n        this.index = null;\r\n    }\r\n\r\n    /**\r\n     * Delete our event indexer.\r\n     *\r\n     * After a call to this the init() method will need to be called again.\r\n     *\r\n     * @return {Promise} A promise that will resolve once the event index is\r\n     * deleted.\r\n     */\r\n    public async deleteEventIndex(): Promise<void> {\r\n        const indexManager = PlatformPeg.get()?.getEventIndexingManager();\r\n\r\n        if (indexManager) {\r\n            await this.unset();\r\n            logger.log(\"EventIndex: Deleting event index.\");\r\n            await indexManager.deleteEventIndex();\r\n        }\r\n    }\r\n}\r\n\r\nif (!window.mxEventIndexPeg) {\r\n    window.mxEventIndexPeg = new EventIndexPeg();\r\n}\r\nexport default window.mxEventIndexPeg;\r\n"],"mappings":";;;;;;;;AAqBA,IAAAA,OAAA,GAAAC,OAAA;AAEA,IAAAC,YAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,WAAA,GAAAD,sBAAA,CAAAF,OAAA;AACA,IAAAI,gBAAA,GAAAJ,OAAA;AACA,IAAAK,cAAA,GAAAH,sBAAA,CAAAF,OAAA;AACA,IAAAM,aAAA,GAAAN,OAAA;AA3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAUA,MAAMO,aAAa,GAAG,CAAC;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,aAAa,CAAC;EAAAC,YAAA;IAAA,IAAAC,gBAAA,CAAAC,OAAA,iBACW,IAAI;IAAA,IAAAD,gBAAA,CAAAC,OAAA,iBACT,IAAI;IAAA,IAAAD,gBAAA,CAAAC,OAAA,+BAEH,KAAK;EAAA;EAEnC;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAaC,IAAIA,CAAA,EAAqB;IAClC,MAAMC,YAAY,GAAGC,oBAAW,CAACC,GAAG,CAAC,CAAC,EAAEC,uBAAuB,CAAC,CAAC;IACjE,IAAI,CAACH,YAAY,EAAE;MACfI,cAAM,CAACC,GAAG,CAAC,wEAAwE,CAAC;MACpF,OAAO,KAAK;IAChB;IAEA,IAAI,CAACC,mBAAmB,GAAG,MAAMN,YAAY,CAACO,qBAAqB,CAAC,CAAC;IAErE,IAAI,CAAC,IAAI,CAACC,kBAAkB,CAAC,CAAC,EAAE;MAC5BJ,cAAM,CAACC,GAAG,CAAC,gFAAgF,CAAC;MAC5F,OAAO,KAAK;IAChB;IAEA,IAAI,CAACI,sBAAa,CAACC,UAAU,CAACC,0BAAY,CAACC,MAAM,EAAE,qBAAqB,CAAC,EAAE;MACvER,cAAM,CAACC,GAAG,CAAC,0DAA0D,CAAC;MACtE,OAAO,KAAK;IAChB;IAEA,OAAO,IAAI,CAACQ,cAAc,CAAC,CAAC;EAChC;;EAEA;AACJ;AACA;AACA;AACA;AACA;EACI,MAAaA,cAAcA,CAAA,EAAqB;IAC5C,MAAMC,KAAK,GAAG,IAAIC,mBAAU,CAAC,CAAC;IAC9B,MAAMf,YAAY,GAAGC,oBAAW,CAACC,GAAG,CAAC,CAAC,EAAEC,uBAAuB,CAAC,CAAC;IACjE,MAAMa,MAAM,GAAGC,gCAAe,CAACf,GAAG,CAAC,CAAC;IACpC,IAAI,CAACF,YAAY,IAAI,CAACgB,MAAM,EAAE;MAC1B,MAAM,IAAIE,KAAK,CAAC,4BAA4B,CAAC;IACjD;IAEA,MAAMC,MAAM,GAAGH,MAAM,CAACI,SAAS,CAAC,CAAE;IAClC,MAAMC,QAAQ,GAAGL,MAAM,CAACM,WAAW,CAAC,CAAE;IAEtC,IAAI;MACA,MAAMtB,YAAY,CAACa,cAAc,CAACM,MAAM,EAAEE,QAAQ,CAAC;MAEnD,MAAME,WAAW,GAAG,MAAMvB,YAAY,CAACwB,cAAc,CAAC,CAAC;MACvD,MAAMC,iBAAiB,GAAG,MAAMzB,YAAY,CAAC0B,iBAAiB,CAAC,CAAC;MAEhE,IAAID,iBAAiB,EAAE;QACnB,MAAMzB,YAAY,CAAC2B,cAAc,CAACjC,aAAa,CAAC;MACpD,CAAC,MAAM,IAAI6B,WAAW,KAAK,CAAC,IAAI,CAACE,iBAAiB,EAAE;QAChD,MAAMzB,YAAY,CAAC4B,eAAe,CAAC,CAAC;QACpC,MAAM,IAAI,CAACC,gBAAgB,CAAC,CAAC;QAE7B,MAAM7B,YAAY,CAACa,cAAc,CAACM,MAAM,EAAEE,QAAQ,CAAC;QACnD,MAAMrB,YAAY,CAAC2B,cAAc,CAACjC,aAAa,CAAC;MACpD;MAEAU,cAAM,CAACC,GAAG,CAAC,sDAAsD,CAAC;MAClE,MAAMS,KAAK,CAACf,IAAI,CAAC,CAAC;IACtB,CAAC,CAAC,OAAO+B,CAAC,EAAE;MACR1B,cAAM,CAACC,GAAG,CAAC,gDAAgD,EAAEyB,CAAC,CAAC;MAC/D,IAAI,CAACC,KAAK,GAAGD,CAAC;MACd,OAAO,KAAK;IAChB;IAEA,IAAI,CAAChB,KAAK,GAAGA,KAAK;IAElB,OAAO,IAAI;EACf;;EAEA;AACJ;AACA;AACA;AACA;AACA;EACWkB,kBAAkBA,CAAA,EAAY;IACjC,OAAO/B,oBAAW,CAACC,GAAG,CAAC,CAAC,EAAEC,uBAAuB,CAAC,CAAC,IAAI,IAAI;EAC/D;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACWK,kBAAkBA,CAAA,EAAY;IACjC,OAAO,IAAI,CAACF,mBAAmB;EACnC;;EAEA;AACJ;AACA;AACA;AACA;EACWJ,GAAGA,CAAA,EAAsB;IAC5B,OAAO,IAAI,CAACY,KAAK;EACrB;EAEOmB,KAAKA,CAAA,EAAS;IACjB,IAAI,IAAI,CAACnB,KAAK,KAAK,IAAI,EAAE;IACzB,IAAI,CAACA,KAAK,CAACoB,YAAY,CAAC,CAAC;EAC7B;EAEOC,IAAIA,CAAA,EAAS;IAChB,IAAI,IAAI,CAACrB,KAAK,KAAK,IAAI,EAAE;IACzB,IAAI,CAACA,KAAK,CAACsB,WAAW,CAAC,CAAC;EAC5B;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAaC,KAAKA,CAAA,EAAkB;IAChC,IAAI,IAAI,CAACvB,KAAK,KAAK,IAAI,EAAE;IACzB,MAAM,IAAI,CAACA,KAAK,CAACwB,KAAK,CAAC,CAAC;IACxB,IAAI,CAACxB,KAAK,GAAG,IAAI;EACrB;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAae,gBAAgBA,CAAA,EAAkB;IAC3C,MAAM7B,YAAY,GAAGC,oBAAW,CAACC,GAAG,CAAC,CAAC,EAAEC,uBAAuB,CAAC,CAAC;IAEjE,IAAIH,YAAY,EAAE;MACd,MAAM,IAAI,CAACqC,KAAK,CAAC,CAAC;MAClBjC,cAAM,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAC/C,MAAML,YAAY,CAAC6B,gBAAgB,CAAC,CAAC;IACzC;EACJ;AACJ;AAACU,OAAA,CAAA5C,aAAA,GAAAA,aAAA;AAED,IAAI,CAAC6C,MAAM,CAACC,eAAe,EAAE;EACzBD,MAAM,CAACC,eAAe,GAAG,IAAI9C,aAAa,CAAC,CAAC;AAChD;AAAC,IAAA+C,QAAA,GACcF,MAAM,CAACC,eAAe;AAAAF,OAAA,CAAAzC,OAAA,GAAA4C,QAAA"}