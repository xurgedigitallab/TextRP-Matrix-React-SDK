{"version":3,"file":"RoomList.js","names":["isRoomVisible","room","RoomListCustomisations","exports"],"sources":["../../src/customisations/RoomList.ts"],"sourcesContent":["/*\r\n * Copyright 2020 The Matrix.org Foundation C.I.C.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *         http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { Room } from \"matrix-js-sdk/src/models/room\";\r\n\r\n// Populate this file with the details of your customisations when copying it.\r\n\r\n/**\r\n * Determines if a room is visible in the room list or not. By default,\r\n * all rooms are visible. Where special handling is performed by Element,\r\n * those rooms will not be able to override their visibility in the room\r\n * list - Element will make the decision without calling this function.\r\n *\r\n * This function should be as fast as possible to avoid slowing down the\r\n * client.\r\n * @param {Room} room The room to check the visibility of.\r\n * @returns {boolean} True if the room should be visible, false otherwise.\r\n */\r\nfunction isRoomVisible(room: Room): boolean {\r\n    return true;\r\n}\r\n\r\n// This interface summarises all available customisation points and also marks\r\n// them all as optional. This allows customisers to only define and export the\r\n// customisations they need while still maintaining type safety.\r\nexport interface IRoomListCustomisations {\r\n    isRoomVisible?: typeof isRoomVisible;\r\n}\r\n\r\n// A real customisation module will define and export one or more of the\r\n// customisation points that make up the interface above.\r\nexport const RoomListCustomisations: IRoomListCustomisations = {};\r\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAaA,CAACC,IAAU,EAAW;EACxC,OAAO,IAAI;AACf;;AAEA;AACA;AACA;AAKA;AACA;AACO,MAAMC,sBAA+C,GAAG,CAAC,CAAC;AAACC,OAAA,CAAAD,sBAAA,GAAAA,sBAAA"}