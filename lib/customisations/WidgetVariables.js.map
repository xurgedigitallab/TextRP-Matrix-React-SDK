{"version":3,"file":"WidgetVariables.js","names":["provideVariables","isReady","WidgetVariableCustomisations","exports"],"sources":["../../src/customisations/WidgetVariables.ts"],"sourcesContent":["/*\r\n * Copyright 2021 The Matrix.org Foundation C.I.C.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *         http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n// Populate this class with the details of your customisations when copying it.\r\nimport { ITemplateParams } from \"matrix-widget-api\";\r\n\r\n/**\r\n * Provides a partial set of the variables needed to render any widget. If\r\n * variables are missing or not provided then they will be filled with the\r\n * application-determined defaults.\r\n *\r\n * This will not be called until after isReady() resolves.\r\n * @returns {Partial<Omit<ITemplateParams, \"widgetRoomId\">>} The variables.\r\n */\r\nfunction provideVariables(): Partial<Omit<ITemplateParams, \"widgetRoomId\">> {\r\n    return {};\r\n}\r\n\r\n/**\r\n * Resolves to whether or not the customisation point is ready for variables\r\n * to be provided. This will block widgets being rendered.\r\n * @returns {Promise<boolean>} Resolves when ready.\r\n */\r\nasync function isReady(): Promise<void> {\r\n    return; // default no waiting\r\n}\r\n\r\n// This interface summarises all available customisation points and also marks\r\n// them all as optional. This allows customisers to only define and export the\r\n// customisations they need while still maintaining type safety.\r\nexport interface IWidgetVariablesCustomisations {\r\n    provideVariables?: typeof provideVariables;\r\n\r\n    // If not provided, the app will assume that the customisation is always ready.\r\n    isReady?: typeof isReady;\r\n}\r\n\r\n// A real customisation module will define and export one or more of the\r\n// customisation points that make up the interface above.\r\nexport const WidgetVariableCustomisations: IWidgetVariablesCustomisations = {};\r\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,gBAAgBA,CAAA,EAAmD;EACxE,OAAO,CAAC,CAAC;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAeC,OAAOA,CAAA,EAAkB;EACpC,OAAO,CAAC;AACZ;;AAEA;AACA;AACA;;AAQA;AACA;AACO,MAAMC,4BAA4D,GAAG,CAAC,CAAC;AAACC,OAAA,CAAAD,4BAAA,GAAAA,4BAAA"}