{"version":3,"file":"Security.js","names":["examineLoginResponse","response","credentials","persistCredentials","createSecretStorageKey","getSecretStorageKey","catchAccessSecretStorageError","e","setupEncryptionNeeded","kind","_default","SHOW_ENCRYPTION_SETUP_UI","exports","default"],"sources":["../../src/customisations/Security.ts"],"sourcesContent":["/*\r\nCopyright 2020 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { ICryptoCallbacks } from \"matrix-js-sdk/src/crypto\";\r\n\r\nimport { IMatrixClientCreds } from \"../MatrixClientPeg\";\r\nimport { Kind as SetupEncryptionKind } from \"../toasts/SetupEncryptionToast\";\r\n\r\n/* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\nfunction examineLoginResponse(response: any, credentials: IMatrixClientCreds): void {\r\n    // E.g. add additional data to the persisted credentials\r\n}\r\n\r\n/* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\nfunction persistCredentials(credentials: IMatrixClientCreds): void {\r\n    // E.g. store any additional credential fields\r\n}\r\n\r\n/* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\nfunction createSecretStorageKey(): Uint8Array | null {\r\n    // E.g. generate or retrieve secret storage key somehow\r\n    return null;\r\n}\r\n\r\n/* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\nfunction getSecretStorageKey(): Uint8Array | null {\r\n    // E.g. retrieve secret storage key from some other place\r\n    return null;\r\n}\r\n\r\n/* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\nfunction catchAccessSecretStorageError(e: Error): void {\r\n    // E.g. notify the user in some way\r\n}\r\n\r\n/* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\nfunction setupEncryptionNeeded(kind: SetupEncryptionKind): boolean {\r\n    // E.g. trigger some kind of setup\r\n    return false;\r\n}\r\n\r\n// This interface summarises all available customisation points and also marks\r\n// them all as optional. This allows customisers to only define and export the\r\n// customisations they need while still maintaining type safety.\r\nexport interface ISecurityCustomisations {\r\n    examineLoginResponse?: typeof examineLoginResponse;\r\n    persistCredentials?: typeof persistCredentials;\r\n    createSecretStorageKey?: typeof createSecretStorageKey;\r\n    getSecretStorageKey?: typeof getSecretStorageKey;\r\n    catchAccessSecretStorageError?: typeof catchAccessSecretStorageError;\r\n    setupEncryptionNeeded?: typeof setupEncryptionNeeded;\r\n    getDehydrationKey?: ICryptoCallbacks[\"getDehydrationKey\"];\r\n\r\n    /**\r\n     * When false, disables the post-login UI from showing. If there's\r\n     * an error during setup, that will be shown to the user.\r\n     *\r\n     * Note: when this is set to false then the app will assume the user's\r\n     * encryption is set up some other way which would circumvent the default\r\n     * UI, such as by presenting alternative UI.\r\n     */\r\n    SHOW_ENCRYPTION_SETUP_UI?: boolean; // default true\r\n}\r\n\r\n// A real customisation module will define and export one or more of the\r\n// customisation points that make up `ISecurityCustomisations`.\r\nexport default {\r\n    SHOW_ENCRYPTION_SETUP_UI: true,\r\n} as ISecurityCustomisations;\r\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA,SAASA,oBAAoBA,CAACC,QAAa,EAAEC,WAA+B,EAAQ;EAChF;AAAA;;AAGJ;AACA,SAASC,kBAAkBA,CAACD,WAA+B,EAAQ;EAC/D;AAAA;;AAGJ;AACA,SAASE,sBAAsBA,CAAA,EAAsB;EACjD;EACA,OAAO,IAAI;AACf;;AAEA;AACA,SAASC,mBAAmBA,CAAA,EAAsB;EAC9C;EACA,OAAO,IAAI;AACf;;AAEA;AACA,SAASC,6BAA6BA,CAACC,CAAQ,EAAQ;EACnD;AAAA;;AAGJ;AACA,SAASC,qBAAqBA,CAACC,IAAyB,EAAW;EAC/D;EACA,OAAO,KAAK;AAChB;;AAEA;AACA;AACA;AAqBA;AACA;AAAA,IAAAC,QAAA,GACe;EACXC,wBAAwB,EAAE;AAC9B,CAAC;AAAAC,OAAA,CAAAC,OAAA,GAAAH,QAAA"}