{"version":3,"file":"Presence.js","names":["_logger","require","_MatrixClientPeg","_dispatcher","_interopRequireDefault","_Timer","UNAVAILABLE_TIME_MS","State","Presence","constructor","_defineProperty2","default","payload","action","setState","Online","unavailableTimer","restart","start","Timer","dispatcherRef","dis","register","onAction","finished","Unavailable","e","stop","unregister","abort","getState","state","newState","oldState","MatrixClientPeg","get","isGuest","setPresence","presence","logger","info","err","error","_default","exports"],"sources":["../src/Presence.ts"],"sourcesContent":["/*\r\nCopyright 2015, 2016 OpenMarket Ltd\r\nCopyright 2018 New Vector Ltd\r\nCopyright 2019 The Matrix.org Foundation C.I.C.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n*/\r\n\r\nimport { logger } from \"matrix-js-sdk/src/logger\";\r\n\r\nimport { MatrixClientPeg } from \"./MatrixClientPeg\";\r\nimport dis from \"./dispatcher/dispatcher\";\r\nimport Timer from \"./utils/Timer\";\r\nimport { ActionPayload } from \"./dispatcher/payloads\";\r\n\r\n// Time in ms after that a user is considered as unavailable/away\r\nconst UNAVAILABLE_TIME_MS = 3 * 60 * 1000; // 3 mins\r\n\r\nenum State {\r\n    Online = \"online\",\r\n    Offline = \"offline\",\r\n    Unavailable = \"unavailable\",\r\n}\r\n\r\nclass Presence {\r\n    private unavailableTimer: Timer | null = null;\r\n    private dispatcherRef: string | null = null;\r\n    private state: State | null = null;\r\n\r\n    /**\r\n     * Start listening the user activity to evaluate his presence state.\r\n     * Any state change will be sent to the homeserver.\r\n     */\r\n    public async start(): Promise<void> {\r\n        this.unavailableTimer = new Timer(UNAVAILABLE_TIME_MS);\r\n        // the user_activity_start action starts the timer\r\n        this.dispatcherRef = dis.register(this.onAction);\r\n        while (this.unavailableTimer) {\r\n            try {\r\n                await this.unavailableTimer.finished();\r\n                this.setState(State.Unavailable);\r\n            } catch (e) {\r\n                /* aborted, stop got called */\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stop tracking user activity\r\n     */\r\n    public stop(): void {\r\n        if (this.dispatcherRef) {\r\n            dis.unregister(this.dispatcherRef);\r\n            this.dispatcherRef = null;\r\n        }\r\n        if (this.unavailableTimer) {\r\n            this.unavailableTimer.abort();\r\n            this.unavailableTimer = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the current presence state.\r\n     * @returns {string} the presence state (see PRESENCE enum)\r\n     */\r\n    public getState(): State | null {\r\n        return this.state;\r\n    }\r\n\r\n    private onAction = (payload: ActionPayload): void => {\r\n        if (payload.action === \"user_activity\") {\r\n            this.setState(State.Online);\r\n            this.unavailableTimer?.restart();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the presence state.\r\n     * If the state has changed, the homeserver will be notified.\r\n     * @param {string} newState the new presence state (see PRESENCE enum)\r\n     */\r\n    private async setState(newState: State): Promise<void> {\r\n        if (newState === this.state) {\r\n            return;\r\n        }\r\n\r\n        const oldState = this.state;\r\n        this.state = newState;\r\n\r\n        if (MatrixClientPeg.get().isGuest()) {\r\n            return; // don't try to set presence when a guest; it won't work.\r\n        }\r\n\r\n        try {\r\n            await MatrixClientPeg.get().setPresence({ presence: this.state });\r\n            logger.info(\"Presence:\", newState);\r\n        } catch (err) {\r\n            logger.error(\"Failed to set presence:\", err);\r\n            this.state = oldState;\r\n        }\r\n    }\r\n}\r\n\r\nexport default new Presence();\r\n"],"mappings":"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"}